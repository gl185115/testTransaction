Scenario: Test list devices service 
Given a Device service


!-- Search device of unknown deviceid; returns 0 list.
When I search device with key{0002}, storeid{}, name{}, limit{0}
Then I should get 0 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList/></SearchedDevice>

!-- Search existing devices by deviceid [too long deviceid]; returns 0 list.
When I search device with key{00011111}, storeid{}, name{}, limit{0}
Then I should get 0 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList/></SearchedDevice>


!-- Search existing devices by deviceid [prefix with 000]; returns a list.
When I search device with key{000}, storeid{}, name{}, limit{0}
Then I should get 2 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>

!-- Search existing devices by deviceid [prefix with 000]; change limit.
When I search device with key{000}, storeid{}, name{}, limit{3}
Then I should get 3 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name></Name><RetailStoreID>000033</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>
When I set the search limit to 2

!-- Search existing devices by deviceid [complete deviceid]; returns a list.
When I search device with key{0001}, storeid{}, name{}, limit{0}
Then I should get 2 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>

!-- Search existing devices by deviceid [complete deviceid with spaces]; should trim spaces and returns a list.
When I search device with key{  0001  }, storeid{}, name{}, limit{0}
Then I should get 2 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>

!-- Search devices [non-numeric key]; returns 0 list.
When I search device with key{}, storeid{}, name{Device}, limit{0}
Then I should get 2 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>

!-- Search devices [non-numeric key]; returns 0 list.
When I search device with key{}, storeid{}, name{device}, limit{0}
Then I should get 2 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>


!-- Search First N devices where N stands for the search limit
When I search device with key{}, storeid{}, name{}, limit{10}
Then I should get 5 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0012</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0013</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name></Name><RetailStoreID>000033</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>


!-- Search existing devices by deviceid [prefix with 0] and storeid is null; change limit.
When I search device with key{0}, storeid{null}, name{}, limit{10}
Then I should get 5 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0012</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0013</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0001</DeviceID><Name></Name><RetailStoreID>000033</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>

!-- Search existing devices by deviceid [prefix with 0] and storeid is not null but not existing ; error resultcode is 710.
When I search device with key{0}, storeid{555}, name{}, limit{10}
Then I should get 710 resultcode
Then I should get 0 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>710</NCRWSSResultCode><DeviceList/></SearchedDevice>

!-- Search existing devices by deviceid [prefix with 0] and storeid is existing;
When I search device with key{0}, storeid{000032}, name{}, limit{10}
Then I should get 3 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0001</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0012</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0013</DeviceID><Name>DeviceName</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>


!-- Start of searching with special characters
!-- Search key with (%) and (_) and ([)
Given a database table with special characters
When I search device with key{0%_[}, storeid{}, name{}, limit{3}
Then I should get 3 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0%_[01</DeviceID><Name>DeviceName</Name><RetailStoreID>000031</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0%_[01</DeviceID><Name>Devic%_[e]Name</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0%_[01</DeviceID><Name></Name><RetailStoreID>000033</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>


!-- Search key with (%) and (_) and name (%) and (_) and ([)
When I search device with key{0%_}, storeid{}, name{%_[}, limit{3}
Then I should get 2 devices
Then I should have an xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?><SearchedDevice><NCRWSSExtendedResultCode>0</NCRWSSExtendedResultCode><NCRWSSResultCode>0</NCRWSSResultCode><DeviceList><DeviceInfo><DeviceID>0%_[01</DeviceID><Name>Devic%_[e]Name</Name><RetailStoreID>000032</RetailStoreID><Printer>101</Printer><TillID>123</TillID><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo><DeviceInfo><DeviceID>0%_[01</DeviceID><Name></Name><RetailStoreID>000033</RetailStoreID><Printer>101</Printer><QueueBusterLink>0</QueueBusterLink><SignatureLink>0</SignatureLink><EjSequence>0</EjSequence><Status>Active</Status></DeviceInfo></DeviceList></SearchedDevice>








