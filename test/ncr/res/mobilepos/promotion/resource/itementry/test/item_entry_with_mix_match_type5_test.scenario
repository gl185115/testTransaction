Scenario: Test Item Entry with MixMatch Type 1
When the Web API Starts Up
Given a Promotion Service
Given a loaded dataset {items_for_rate_mixmatch.xml}
Given a loaded dataset {mixmatch_rate_promotions.xml}

Scenario: Item Entry (same items, different item entry id) 
When a Begin Transaction at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"TransactionMode":"0","OperatorID": "0003","BeginDateTime":"2012-12-20T09:30:47.00"}}
When a Item Entry at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"Sale":{"ItemEntryID":"00001","ItemID":"8865545775622","ItemIDType":"EAN-13","Quantity":1}}}
Then the Result Code is 0
Then Sale data should be :
|ItemEntryID|ItemID       |ItemIDType|Quantity|Department|DescriptionEN   |DescriptionJP   |RegularSalesUnitPrice|Discount|DiscountAmount|ActualSalesUnitPrice|ExtendedAmount|Discountable|AgeRestrictedFlag|CouponFlag|
|00001      |8865545775622|EAN-13    |1       |0143      |sample product 2|サンプル製品2      |100.0                |0.0     |0.0           |100.0               |100.0         |True        |1                |0         |
Then there should be no promotion data.
When a Item Entry at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"Sale":{"ItemEntryID":"00002","ItemID":"8865545775621","ItemIDType":"EAN-13","Quantity":1}}}
Then the Result Code is 0
Then Sale data should be :
|ItemEntryID|ItemID       |ItemIDType|Quantity|Department|DescriptionEN   |DescriptionJP   |RegularSalesUnitPrice|Discount|DiscountAmount|ActualSalesUnitPrice|ExtendedAmount|Discountable|AgeRestrictedFlag|CouponFlag|
|00002      |8865545775621|EAN-13    |1       |0143      |sample product 1|サンプル製品1      |90.0                 |0.0     |0.0           |90.0                |90.0          |True        |0                |null      |
Then there should be no promotion data.
When a Item Entry at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"Sale":{"ItemEntryID":"00003","ItemID":"8865545775621","ItemIDType":"EAN-13","Quantity":1}}}
Then the Result Code is 0
Then Sale data should be :
|ItemEntryID|ItemID       |ItemIDType|Quantity|Department|DescriptionEN   |DescriptionJP   |RegularSalesUnitPrice|Discount|DiscountAmount|ActualSalesUnitPrice|ExtendedAmount|Discountable|AgeRestrictedFlag|CouponFlag|
|00003      |8865545775621|EAN-13    |1       |0143      |sample product 1|サンプル製品1      |90.0                 |0.0     |0.0           |90.0                |90.0          |True        |0                |null      |
Then promotion should have the following data :
|RewardID|EarnedRewardID|PromotionCode|DiscountDescription|ItemEntryID|UnitDiscountAmount|
|1|1111|1111|Mix Match 1111 Type 1|00001|20|
|2|1111|1111|Mix Match 1111 Type 1|00003|18|
|3|1111|1111|Mix Match 1111 Type 1|00002|18|
Then the JSON should have the following format :
{"Transaction":{"TransactionMode":0,"Sale":{"ItemID":"8865545775621","Department":"0143","Description":{"en":"sample product 1","jp":"サンプル製品1"},"RegularSalesUnitPrice":90.0,"Discount":0.0,"DiscountFlag":0,"DiscountAmount":0.0,"ActualSalesUnitPrice":90.0,"Discountable":true,"TaxRate":0,"TaxType":0,"DiscountType":0,"NonSales":0,"SubInt10":0,"Line":"0143","Class":"000001","AgeRestrictedFlag":0,"EmpPrice1":90.0,"PSType":"","OrgSalesPrice1":0.0,"ItemEntryID":"00003","ItemIDType":"EAN-13","Quantity":1,"ExtendedAmount":90.0,"InputType":0},"EntryFlag":0},"Promotion":{"Discount":[{"RewardID":1,"EarnedRewardID":"1111","PromotionCode":"1111","DiscountDescription":"Mix Match 1111 Type 1","ItemEntryID":"00001","UnitDiscountAmt":20,"Quantity":1},{"RewardID":2,"EarnedRewardID":"1111","PromotionCode":"1111","DiscountDescription":"Mix Match 1111 Type 1","ItemEntryID":"00003","UnitDiscountAmt":18,"Quantity":1},{"RewardID":3,"EarnedRewardID":"1111","PromotionCode":"1111","DiscountDescription":"Mix Match 1111 Type 1","ItemEntryID":"00002","UnitDiscountAmt":18,"Quantity":1}],"NCRWSSResultCode":0,"NCRWSSExtendedResultCode":0},"NCRWSSResultCode":0,"NCRWSSExtendedResultCode":0}
Then there should be no revoke

Scenario: Item Entry (different items with excess) 
When a Begin Transaction at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"TransactionMode":"0","OperatorID": "0003","BeginDateTime":"2012-12-20T09:30:47.00"}}
When a Item Entry at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"Sale":{"ItemEntryID":"00001","ItemID":"8865545775622","ItemIDType":"EAN-13","Quantity":2}}}
Then the Result Code is 0
Then Sale data should be :
|ItemEntryID|ItemID       |ItemIDType|Quantity|Department|DescriptionEN   |DescriptionJP   |RegularSalesUnitPrice|Discount|DiscountAmount|ActualSalesUnitPrice|ExtendedAmount|Discountable|AgeRestrictedFlag|CouponFlag|
|00001      |8865545775622|EAN-13    |2       |0143      |sample product 2|サンプル製品2      |100.0                |0.0     |0.0           |100.0               |200.0         |True        |1                |0         |
When a Item Entry at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"Sale":{"ItemEntryID":"00002","ItemID":"8865545775621","ItemIDType":"EAN-13","Quantity":2}}}
Then the Result Code is 0
Then Sale data should be :
|ItemEntryID|ItemID       |ItemIDType|Quantity|Department|DescriptionEN   |DescriptionJP   |RegularSalesUnitPrice|Discount|DiscountAmount|ActualSalesUnitPrice|ExtendedAmount|Discountable|AgeRestrictedFlag|CouponFlag|
|00002      |8865545775621|EAN-13    |2       |0143      |sample product 1|サンプル製品1      |90.0                 |0.0     |0.0           |90.0                |180.0         |True        |0                |null      |
Then promotion should have the following data :
|RewardID|EarnedRewardID|PromotionCode|DiscountDescription|ItemEntryID|UnitDiscountAmount|
|1|1111|1111|Mix Match 1111 Type 1|00001|40|
|2|1111|1111|Mix Match 1111 Type 1|00002|18|
Then there should be no revoke

Scenario: Item Entry (utilize excess) 
When a Item Entry at promotion with parameters RetailStoreID{0031} WorkStationId{1111} SequenceNo{1} TransactionJson{{"Sale":{"ItemEntryID":"00003","ItemID":"8865545775621","ItemIDType":"EAN-13","Quantity":2}}}
Then the Result Code is 0
Then Sale data should be :
|ItemEntryID|ItemID       |ItemIDType|Quantity|Department|DescriptionEN   |DescriptionJP   |RegularSalesUnitPrice|Discount|DiscountAmount|ActualSalesUnitPrice|ExtendedAmount|Discountable|AgeRestrictedFlag|CouponFlag|
|00003      |8865545775621|EAN-13    |2       |0143      |sample product 1|サンプル製品1      |90.0                 |0.0     |0.0           |90.0                |180.0         |True        |0                |null      |
Then promotion should have the following data :
|RewardID|EarnedRewardID|PromotionCode|DiscountDescription|ItemEntryID|UnitDiscountAmount|
|1|1111|1111|Mix Match 1111 Type 1|00001|40|
|2|1111|1111|Mix Match 1111 Type 1|00003|18|
|3|1111|1111|Mix Match 1111 Type 1|00003|18|
|4|1111|1111|Mix Match 1111 Type 1|00002|36|
Then there should be revoke