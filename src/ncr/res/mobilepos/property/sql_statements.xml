<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<!-- start item sqlstatements block -->
<!-- 前受金番号 -->
<entry key="get-item">

DECLARE @storeId VARCHAR(10), @companyId VARCHAR(12), @MdInternal VARCHAR(32), @businessDate VARCHAR(32),@sizeId VARCHAR(10),
        @storeStoreId VARCHAR(10), @dptStoreId VARCHAR(10), @groupStoreId VARCHAR(10), @classStoreId VARCHAR(10),
        @systemStoreId VARCHAR(10), @colorStoreId VARCHAR(10), @sizeStoreId VARCHAR(10), @brandStoreId VARCHAR(10),
        @pluNameStoreId VARCHAR(10), @sizePtnStoreId VARCHAR(10), @lineStoreId VARCHAR(10), @selfmedicationStoreId VARCHAR(10)
    SET @storeId = LTRIM(RTRIM(?))
    SET @companyId = LTRIM(RTRIM(?))
    SET @MdInternal = LTRIM(RTRIM(?))
    SET @businessDate = LTRIM(RTRIM(?))
    SET @sizeId = LTRIM(RTRIM(?))
    SET @storeStoreId = @storeId
    SET @dptStoreId = @storeId
    SET @groupStoreId = @storeId
    SET @classStoreId = @storeId
    SET @systemStoreId = @storeId
    SET @colorStoreId = @storeId
    SET @sizeStoreId = @storeId
    SET @brandStoreId = @storeId
    SET @pluNameStoreId = @storeId
    SET @sizePtnStoreId = @storeId
    SET @lineStoreId = @storeId
    SET @selfmedicationStoreId = @storeId

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PLU plu
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @storeId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PLU_STORE pluStore
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON pluStore.CompanyId = plu.CompanyId
         AND pluStore.MdInternal = plu.MdInternal
         AND pluStore.DeleteFlag = 0.0
         AND pluStore.StoreId = @storeStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @storeStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_DPTINFO dpt
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = dpt.CompanyId
        AND plu.Dpt = dpt.Dpt
        AND dpt.DeleteFlag = 0.0
        AND dpt.StoreId = @dptStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @dptStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_GROUPINFO groupInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = groupInfo.CompanyId
       INNER JOIN
         RESMaster.dbo.MST_DPTINFO dpt
         ON dpt.SubCode1 = groupInfo.GroupId
         AND groupInfo.DeleteFlag = 0.0
         AND groupInfo.StoreId = @groupStoreId
         AND dpt.DeleteFlag = 0.0
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @groupStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_CLASSINFO classInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.Class = classInfo.Class
        AND plu.CompanyId = classInfo.CompanyId
        AND plu.Dpt = classInfo.Dpt
        AND plu.Line = classInfo.Line
        AND classInfo.DeleteFlag = 0.0
        AND classInfo.StoreId = @classStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @classStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_NAME_SYSTEM system
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = system.CompanyId
        AND system.NameId = plu.TaxType
        AND system.NameCategory = '0060'
        AND system.DeleteFlag = 0.0
        AND system.StoreId = @systemStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @systemStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_COLORINFO colorInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = colorInfo.CompanyId
        AND plu.Md01 = colorInfo.ColorId
        AND colorInfo.DeleteFlag = 0.0
        AND colorInfo.StoreId = @colorStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @colorStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_SIZEINFO sizeInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = sizeInfo.CompanyId
        AND plu.Md05 = sizeInfo.SizeId
        AND sizeInfo.StoreId = @sizeStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @sizeStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_BRANDINFO brandInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = brandInfo.CompanyId
        AND plu.Md07 = brandInfo.BrandId
        AND brandInfo.DeleteFlag = 0.0
        AND brandInfo.StoreId = @brandStoreId
       WHERE
         brandInfo.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @brandStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PLU_NAME pluNameInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = pluNameInfo.CompanyId
        AND plu.MdInternal = pluNameInfo.MdInternal
        AND pluNameInfo.DeleteFlag = 0.0
        AND pluNameInfo.StoreId = @pluNameStoreId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @pluNameStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_SIZEPATTERNINFO sizePtnInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = sizePtnInfo.CompanyId
        AND sizePtnInfo.DeleteFlag = 0.0
        AND sizePtnInfo.StoreId = @sizePtnStoreId
        AND sizePtnInfo.SizePatternId = plu.ItemSize
        AND sizePtnInfo.SizeId = @sizeId
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @sizePtnStoreId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_LINEINFO lineInfo
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = lineInfo.CompanyId
        AND lineInfo.StoreId = @lineStoreId
        AND plu.Dpt = lineInfo.Dpt
        AND plu.Line = lineInfo.Line
        AND lineInfo.DeleteFlag = 0.0
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @lineStoreId = '0'
    
    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_SELFMEDICATION_TBL selfmedication
       INNER JOIN
         RESMaster.dbo.MST_PLU plu
         ON plu.CompanyId = selfmedication.CompanyId
        AND selfmedication.StoreId = @selfmedicationStoreId
        AND CONVERT(DATE, @businessDate) BETWEEN selfmedication.DisplayStartDate AND selfmedication.DisplayEndDate
        AND selfmedication.DeleteFlag = 0.0
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
         AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
    )
    SET @selfmedicationStoreId = '0'

SELECT TOP 1
       plu.CompanyId,
       plu.StoreId,
       plu.MdInternal,
       plu.MdType,
       plu.HostFlag,
       plu.MdVender,
       plu.Dpt,
       plu.Line,
       plu.Class,
       plu.Sku,
       plu.Md01,
       plu.Md02,
       plu.Md03,
       plu.Md04,
       plu.Md05,
       plu.Md06,
       plu.Md07,
       plu.Md08,
       plu.Md09,
       plu.Md10,
       plu.Md11,
       plu.Md12,
       plu.Md13,
       plu.Md14,
       plu.Md15,
       plu.Md16,
       plu.MdNameLocal,
       plu.MdKanaName,
       plu.OrgSalesPrice1,
       urgent.NewPrice,
       urgent.OldPrice,
       plustore.SalesPrice,
       plu.SalesPrice1,
       plu.SalesPrice2,
       plu.CostPrice1,
       plu.SalesDate,
       plu.MakerPrice,
       plu.TaxType,
       plu.TaxRate,
       plu.DiscountType,
       plu.PaymentType,
       plu.PosMdType,
       plu.Conn1,
       plu.ConnType1,
       plu.Conn2,
       plu.VenderCode,
       plu.DiscountFlag,
       plu.SubCode1,
       plu.SubCode2,
       plu.SubCode3,
       plu.SubNum1,
       plu.SubNum2,
       plu.DeleteFlag,
       plu.DelDate,
       plu.DelAppId,
       plu.DelOpeCode,
       plu.InsDate,
       plu.InsAppId,
       plu.InsOpeCode,
       plu.UpdCount,
       plu.UpdDate,
       plu.UpdAppId,
       plu.UpdOpeCode,
       plu.DiscountType DiscountType,
       plu.MdName,
       pluNameInfo.MdName pluMdName,
       plu.SubCode5 BrandSaleName,
       plu.SubCode9 PharmaceuticalFlag,
       %s,
       %s,
       classInfo.ClassNameLocal,
       classInfo.SubNum2 PointAddFlag,
       classInfo.SubNum3 PointUseFlag,
       classInfo.SubNum4 TaxFreeFlag,
       classInfo.DiscountType clsDiscountType,
       classInfo.TaxType clsTaxType,
       dpt.DiscountType dptDiscountType,
       dpt.DptNameLocal,
     dpt.DptName,
       dpt.TaxType dptTaxType,
       dpt.SubCode1 dptSubCode1,
       dpt.SubNum1 dptSubNum1,
       dpt.SubNum2 dptSubNum2,
       dpt.SubNum3 dptSubNum3,
       dpt.SubNum4 dptSubNum4,
       %s,
       dpt.ExceptionFlag ExceptionFlag,
       groupInfo.GroupName,
       groupInfo.GroupId,
       system.NameText,
       colorInfo.ColorKanaName,
       sizeInfo.SizeKanaName,
       brandInfo.BrandName,
       sizePtnInfo.SizePatternName SizePatternName,
       sizePtnInfo.SizePatternId,
       lineInfo.TaxType lineTaxType,
       lineInfo.discountType lineDiscountType,
       %s,
       <!-- FDMM add start RESD-3824 2020-08-18 -->
       plu.AgeRestrictedFlag,
       classInfo.AgeRestrictedFlag ClsAgeRestrictedFlag,
       dpt.AgeRestrictedFlag DptAgeRestrictedFlag,
       lineInfo.AgeRestrictedFlag LineAgeRestrictedFlag,
       <!-- FDMM add end RESD-3824 2020-08-18 -->
       <!-- FDMM add start RESD-3584 2020-08-19 -->
       plu.SubCode8 SelfFlag,
       selfmedication.SelfMedicationMark
       <!-- FDMM add start RESD-3584 2020-08-19 -->
FROM
  RESMaster.dbo.MST_PLU plu
LEFT JOIN RESMaster.dbo.MST_PLU_STORE plustore
ON plu.CompanyId = plustore.CompanyId
AND plustore.StoreId = @storeStoreId
AND plustore.MdInternal = plu.MdInternal
AND plustore.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_DPTINFO dpt
ON plu.CompanyId = dpt.CompanyId
AND dpt.StoreId = @dptStoreId
AND plu.Dpt = dpt.Dpt
AND dpt.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_GROUPINFO groupInfo
ON plu.CompanyId = groupInfo.CompanyId
AND groupInfo.StoreId = @groupStoreId
AND dpt.SubCode1 = groupInfo.GroupId
AND groupInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_CLASSINFO classInfo
ON plu.Class = classInfo.Class
AND plu.CompanyId = classInfo.CompanyId
AND classInfo.StoreId = @classStoreId
AND plu.Dpt = classInfo.Dpt
AND plu.Line = classInfo.Line
AND classInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_NAME_SYSTEM system
ON plu.CompanyId = system.CompanyId
AND system.StoreId = @systemStoreId
AND system.NameId = plu.TaxType
AND system.NameCategory = '0060'
AND system.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_COLORINFO colorInfo
ON plu.CompanyId = colorInfo.CompanyId
AND colorInfo.StoreId = @colorStoreId
AND plu.Md01 = colorInfo.ColorId
AND colorInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_SIZEINFO sizeInfo
ON plu.CompanyId = sizeInfo.CompanyId
AND sizeInfo.StoreId = @sizeStoreId
AND plu.Md05 = sizeInfo.SizeId
LEFT JOIN RESMaster.dbo.MST_BRANDINFO brandInfo
ON plu.CompanyId = brandInfo.CompanyId
AND brandInfo.StoreId = @brandStoreId
AND plu.Md07 = brandInfo.BrandId
AND brandInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_PLU_NAME pluNameInfo
ON plu.CompanyId = pluNameInfo.CompanyId
AND pluNameInfo.StoreId = @pluNameStoreId
AND plu.MdInternal = pluNameInfo.MdInternal
AND pluNameInfo.DeleteFlag = 0.0

LEFT JOIN  (
    SELECT
        info.CompanyId,
        info.Sku,
        info.SequenceNo,
        info.ColorId,
        info.NewPrice,
        info.OldPrice
    FROM RESMaster.dbo.MST_PRICE_URGENT_INFO_FORSTORE info
    INNER  JOIN RESMaster.dbo.MST_PRICE_URGENT_STORE_FORSTORE store
    ON info.CompanyId  = store.CompanyId
    AND info.RecordId = store.RecordId
    AND store.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN store.StartDate AND store.EndDate
    AND store.TargetStoreType IN ('0','2') OR (store.TargetStoreType = '1' AND store.StoreId = @storeId)
    AND info.DeleteFlag = 0.0

) urgent ON
plu.CompanyId  = urgent.CompanyId
AND plu.Sku  = urgent.Sku
AND plu.Md01 = urgent.ColorId

LEFT JOIN RESMaster.dbo.MST_SIZEPATTERNINFO sizePtnInfo
ON plu.CompanyId = sizePtnInfo.CompanyId
AND sizePtnInfo.StoreId = @sizePtnStoreId
AND plu.ItemSize = sizePtnInfo.SizePatternId
AND sizePtnInfo.SizeId = @sizeId
AND sizePtnInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_LINEINFO lineInfo
ON plu.CompanyId = lineInfo.CompanyId
AND lineInfo.StoreId = @lineStoreId
AND plu.Dpt = lineInfo.Dpt
AND plu.Line = lineInfo.Line
AND lineInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_SELFMEDICATION_TBL selfmedication
ON plu.CompanyId = selfmedication.CompanyId
AND selfmedication.StoreId = @selfmedicationStoreId
AND CONVERT(DATE, @businessDate) BETWEEN selfmedication.DisplayStartDate AND selfmedication.DisplayEndDate
AND selfmedication.DeleteFlag = 0.0

WHERE plu.CompanyId = @companyId  AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
AND CONVERT(DATE, @businessDate) BETWEEN plu.SalesPriceChgDate1 AND plu.SalesPriceChgDate2
ORDER BY urgent.SequenceNo DESC

</entry>

<entry key="get-plu-name">
DECLARE    @companyId VARCHAR(12),
           @storeId VARCHAR(10),
           @mdInternal VARCHAR(32)
    SET    @companyId = LTRIM(RTRIM(?))
    SET    @storeId = LTRIM(RTRIM(?))
    SET    @mdInternal = LTRIM(RTRIM(?))

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PLU_NAME
       WHERE
         CompanyId = @companyId AND MdInternal = @mdInternal AND StoreId = @storeId AND DeleteFlag = 0.0
    )
    SET @storeId = '0'

    SELECT *
    FROM
      RESMaster.dbo.MST_PLU_NAME
    WHERE
      CompanyId = @companyId AND MdInternal = @mdInternal AND StoreId = @storeId AND DeleteFlag = 0.0
</entry>

<entry key="get-price-ReplaceSupport-info">
DECLARE    @storeId VARCHAR(10) ,@companyId VARCHAR(12), @sku VARCHAR(32), @businessDate VARCHAR(32)
    SET        @storeId = LTRIM(RTRIM(?))
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))

IF NOT EXISTS (
    SELECT
        TOP 1
        info.PromotionId
    FROM  RESMaster.dbo.MST_REPLACESUPPORT_INFO info
    INNER  JOIN RESMaster.dbo.MST_REPLACESUPPORT_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.PromotionId = detail.PromotionId
        AND detail.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0 AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND detail.Sku = @sku
        AND info.TargetStoreType = '1'
        ORDER BY info.UpdDate DESC)

    SELECT
        TOP 1
        info.CompanyId,
        info.PromotionName,
        detail.Sku,
        detail.DiscountAmt,
        info.PromotionId
    FROM  RESMaster.dbo.MST_REPLACESUPPORT_INFO info
    INNER  JOIN RESMaster.dbo.MST_REPLACESUPPORT_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.PromotionId = detail.PromotionId
        AND detail.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND detail.Sku = @sku
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
        ORDER BY info.UpdDate DESC

ELSE

     SELECT
        TOP 1
        info.CompanyId ,
        info.PromotionName,
        detail.Sku, detail.DiscountAmt,
        info.PromotionId
     FROM  RESMaster.dbo.MST_REPLACESUPPORT_INFO info
     INNER  JOIN RESMaster.dbo.MST_REPLACESUPPORT_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.PromotionId = detail.PromotionId
        AND detail.DeleteFlag = 0.0
     INNER JOIN RESMaster.dbo.MST_REPLACESUPPORT_STORE store
        ON info.CompanyId = store.CompanyId
        AND info.PromotionId = store.PromotionId
        AND store.StoreId = @storeId AND store.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId = @companyId
        AND detail.Sku = @sku
        AND info.TargetStoreType = '1'
        ORDER BY info.UpdDate DESC
</entry>

<entry key="get-price-prom-info">

DECLARE    @storeId VARCHAR(10) ,
           @companyId VARCHAR(12),
           @sku VARCHAR(32),
           @businessDate VARCHAR(32),
           @dpt VARCHAR(32),
           @BrandId VARCHAR(32),
           @class VARCHAR(32)

    SET       @storeId = LTRIM(RTRIM(?))
    SET       @companyId = LTRIM(RTRIM(?))
    SET       @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
    SET       @dpt = LTRIM(RTRIM(?))
    SET       @BrandId = LTRIM(RTRIM(?))
    SET       @class = LTRIM(RTRIM(?))
IF NOT EXISTS (
SELECT
    TOP 1
    info.PromotionNo
FROM RESMaster.dbo.MST_PRICE_PROM_INFO info
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
    AND info.TargetStoreType = '1'
    AND ((PromotionType ='1' AND detail.Dpt = @dpt )
        OR (PromotionType ='2' AND  detail.Class = @class)
        OR (PromotionType ='3' AND detail.Sku = @sku ))
        AND ((BrandFlag = '1' AND (detail.BrandId = @BrandId OR detail.BrandId IS NULL)) OR BrandFlag = '0')
        ORDER BY info.UpdDate DESC)


SELECT
    TOP 1
    info.PromotionNo,
    info.PromotionName,
    detail.PromotionDetailNo,
    detail.BrandFlag,
    detail.DiscountClass,
    detail.DiacountRate,
    detail.DiscountAmt,
    detail.DiscountClass
 FROM  RESMaster.dbo.MST_PRICE_PROM_INFO info
 INNER  JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
    AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
    AND ((PromotionType ='1' AND detail.Dpt = @dpt )
        OR (PromotionType ='2' AND  detail.Class = @class)
    OR (PromotionType ='3' AND detail.Sku = @sku ))
   AND ((BrandFlag = '1' AND (detail.BrandId = @BrandId OR detail.BrandId IS NULL)) OR BrandFlag = '0')
    ORDER BY info.UpdDate DESC

ELSE

SELECT
    TOP 1
    store.CompanyId,
    info.PromotionNo,
    info.PromotionName,
    detail.PromotionDetailNo,
    detail.BrandFlag,
    detail.DiacountRate,
    detail.DiscountAmt,
    detail.DiscountClass

FROM  RESMaster.dbo.MST_PRICE_PROM_INFO info
INNER  JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_STORE store
   ON info.CompanyId = store.CompanyId
   AND info.PromotionNo = store.PromotionNo
   AND store.StoreId = @storeId
   AND store.DeleteFlag = 0.0
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
    AND info.TargetStoreType = '1'
    AND ((PromotionType ='1' AND detail.Dpt = @dpt )
        OR (PromotionType ='2'  AND  detail.Class = @class)
    OR (PromotionType ='3'  AND detail.Sku = @sku ))
    AND ((BrandFlag = '1' AND (detail.BrandId = @BrandId OR detail.BrandId IS NULL)) OR BrandFlag = '0')
        ORDER BY info.UpdDate DESC

</entry>



<entry key="get-price-prom-info-list">

DECLARE @companyId VARCHAR(12),
        @storeId VARCHAR(10) ,
        @businessDate VARCHAR(32)

SET @companyId = LTRIM(RTRIM(?))
SET @storeId = LTRIM(RTRIM(?))
SET @businessDate = LTRIM(RTRIM(?))

SELECT
     info.PromotionNo
    ,info.PromotionName
    ,info.DayOfWeekSettingFlag
    ,info.DayOfWeekMonFlag
    ,info.DayOfWeekTueFlag
    ,info.DayOfWeekWedFlag
    ,info.DayOfWeekThuFlag
    ,info.DayOfWeekFriFlag
    ,info.DayOfWeekSatFlag
    ,info.DayOfWeekSunFlag
    ,detail.PromotionType
    ,detail.BrandFlag
    ,detail.Dpt
    ,detail.Line
    ,detail.Class
    ,detail.Sku
    ,detail.DiscountClass
    ,detail.DiacountRate
    ,detail.DiscountAmt
    ,detail.BrandId
    ,info.UpdDate
FROM  RESMaster.dbo.MST_PRICE_PROM_INFO info
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
  AND info.TargetStoreType in ('0','2')

UNION

SELECT
     info.PromotionNo
    ,info.PromotionName
    ,info.DayOfWeekSettingFlag
    ,info.DayOfWeekMonFlag
    ,info.DayOfWeekTueFlag
    ,info.DayOfWeekWedFlag
    ,info.DayOfWeekThuFlag
    ,info.DayOfWeekFriFlag
    ,info.DayOfWeekSatFlag
    ,info.DayOfWeekSunFlag
    ,detail.PromotionType
    ,detail.BrandFlag
    ,detail.Dpt
    ,detail.Line
    ,detail.Class
    ,detail.Sku
    ,detail.DiscountClass
    ,detail.DiacountRate
    ,detail.DiscountAmt
    ,detail.BrandId
    ,info.UpdDate
FROM  RESMaster.dbo.MST_PRICE_PROM_INFO info
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_STORE store
   ON info.CompanyId = store.CompanyId
   AND info.PromotionNo = store.PromotionNo
   AND store.StoreId = @storeId
   AND store.DeleteFlag = 0.0
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
  AND info.TargetStoreType = '1'

ORDER BY detail.PromotionType DESC,info.UpdDate DESC

</entry>

<entry key="get-price-mm-info">
DECLARE    @storeId VARCHAR(10) ,@companyId VARCHAR(12), @sku VARCHAR(32), @businessDate VARCHAR(32)
    SET        @storeId = LTRIM(RTRIM(?))
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
IF NOT EXISTS (
    SELECT
        TOP 1
        info.MMNo
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.MMNo = detail.MMNo
        AND detail.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND detail.Sku = @sku
        AND info.TargetStoreType = '1'
        ORDER BY info.MMNo ASC)

    SELECT
        TOP 1
        info.CompanyId,
        info.Note,
        info.ConditionCount1,
        info.ConditionPrice1,
        info.DecisionPrice1 ,
        info.AveragePrice1  ,
        info.ConditionCount2,
        info.ConditionPrice2,
        info.DecisionPrice2 ,
        info.AveragePrice2  ,
        info.ConditionCount3,
        info.ConditionPrice3,
        info.DecisionPrice3,
        info.AveragePrice3,
        info.MMNo
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.MMNo = detail.MMNo
        AND detail.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND detail.Sku = @sku
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
        ORDER BY info.MMNo ASC

ELSE

    SELECT
        TOP 1
        info.CompanyId,
        info.Note,
        info.ConditionCount1,
        info.ConditionPrice1,
        info.DecisionPrice1 ,
        info.AveragePrice1  ,
        info.ConditionCount2,
        info.ConditionPrice2,
        info.DecisionPrice2 ,
        info.AveragePrice2  ,
        info.ConditionCount3,
        info.ConditionPrice3,
        info.DecisionPrice3,
        info.AveragePrice3,
        info.MMNo
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.MMNo = detail.MMNo
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_PRICE_MM_STORE store
        ON info.CompanyId = store.CompanyId
        AND info.MMNo = store.MMNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND detail.Sku = @sku
        AND info.TargetStoreType = '1'
        ORDER BY info.MMNo ASC
</entry>

<entry key="get-price-mm-info-list">
DECLARE @companyId VARCHAR(12),
        @storeId VARCHAR(10) ,
        @businessDate VARCHAR(32)

SET @companyId = LTRIM(RTRIM(?))
SET @storeId = LTRIM(RTRIM(?))
SET @businessDate = LTRIM(RTRIM(?))


SELECT
    info.CompanyId,
    info.Note,
    info.ConditionCount1,
    info.ConditionPrice1,
    info.DecisionPrice1 ,
    info.AveragePrice1  ,
    info.ConditionCount2,
    info.ConditionPrice2,
    info.DecisionPrice2 ,
    info.AveragePrice2  ,
    info.ConditionCount3,
    info.ConditionPrice3,
    info.DecisionPrice3,
    info.AveragePrice3,
    info.MMNo,
    info.TargetStoreType,
    detail.Sku
FROM  RESMaster.dbo.MST_PRICE_MM_INFO info
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.MMNo = detail.MMNo
        AND detail.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')

UNION

SELECT
    info.CompanyId,
    info.Note,
    info.ConditionCount1,
    info.ConditionPrice1,
    info.DecisionPrice1 ,
    info.AveragePrice1  ,
    info.ConditionCount2,
    info.ConditionPrice2,
    info.DecisionPrice2 ,
    info.AveragePrice2  ,
    info.ConditionCount3,
    info.ConditionPrice3,
    info.DecisionPrice3,
    info.AveragePrice3,
    info.MMNo,
    info.TargetStoreType,
    detail.Sku
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.MMNo = detail.MMNo
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_PRICE_MM_STORE store
        ON info.CompanyId = store.CompanyId
        AND info.MMNo = store.MMNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE
        info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId =  @companyId
        AND info.TargetStoreType = '1'
        ORDER BY info.MMNo ASC
</entry>

<entry key="get-coupon-info">
DECLARE    @storeId VARCHAR(10) ,
           @companyId VARCHAR(12),
           @sku VARCHAR(32),
           @businessDate VARCHAR(32),
           @dpt VARCHAR(32),
           @BrandId VARCHAR(32)

    SET       @storeId = LTRIM(RTRIM(?))
    SET       @companyId = LTRIM(RTRIM(?))
    SET       @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
    SET       @dpt = LTRIM(RTRIM(?))
    SET       @BrandId = LTRIM(RTRIM(?))
IF NOT EXISTS (
    SELECT
        TOP 1
        info.CouponNo
    FROM  RESMaster.dbo.MST_COUPON_INFO info
    INNER  JOIN RESMaster.dbo.MST_COUPON_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.CouponNo = detail.CouponNo
        AND detail.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
     AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate

     AND info.CompanyId = @companyId
     AND info.TargetStoreType = '1'
         AND ((CouponType = '1' AND detail.Dpt = @dpt AND (detail.BrandId = @BrandId OR detail.BrandId IS null)) OR
          (CouponType = '2' AND detail.Sku = @sku ))
         ORDER BY info.UpdDate DESC)

    SELECT
        TOP 1
        info.CouponNo,
        info.EvenetName ,
        info.ReceiptName,
        info.UnitPrice,
        info.IssueCount,
        info.IssueType,
        detail.CouponDetailNo,
        detail.CouponType,
        detail.Dpt,detail.Sku,
        detail.BrandId
    FROM  RESMaster.dbo.MST_COUPON_INFO info
    INNER  JOIN RESMaster.dbo.MST_COUPON_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.CouponNo = detail.CouponNo
        AND detail.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId = @companyId
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
         AND ((CouponType = '1' AND detail.Dpt = @dpt AND (detail.BrandId = @BrandId OR detail.BrandId IS null)) OR
          (CouponType = '2' AND detail.Sku = @sku ))
         ORDER BY info.UpdDate DESC
ELSE

    SELECT
        TOP 1
        info.CouponNo,
        info.EvenetName ,
        info.ReceiptName,
        info.UnitPrice,
        info.IssueCount,
        info.IssueType,
        detail.CouponDetailNo,detail.CouponType,
        detail.Dpt,detail.Sku,detail.BrandId
     FROM  RESMaster.dbo.MST_COUPON_INFO info
     INNER  JOIN RESMaster.dbo.MST_COUPON_DETAIL detail
        ON info.CompanyId = detail.CompanyId
        AND info.CouponNo = detail.CouponNo
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_COUPON_STORE store
        ON info.CompanyId = store.CompanyId
        AND info.CouponNo = store.CouponNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId = @companyId
        AND info.TargetStoreType = '1'
        AND ((CouponType = '1' AND detail.Dpt = @dpt AND (detail.BrandId = @BrandId OR detail.BrandId IS null)) OR
          (CouponType = '2' AND detail.Sku = @sku ))
            ORDER BY info.UpdDate DESC
</entry>

<entry key="get-premiumitem-info">
DECLARE @storeId VARCHAR(10) ,
        @companyId VARCHAR(12),
        @sku VARCHAR(32),
        @businessDate VARCHAR(32),
        @dpt VARCHAR(32),
        @brandId VARCHAR(32),
        @conn VARCHAR(32)

    SET @storeId = LTRIM(RTRIM(?))
    SET @companyId = LTRIM(RTRIM(?))
    SET @sku = LTRIM(RTRIM(?))
    SET @businessDate = LTRIM(RTRIM(?))
    SET @dpt = LTRIM(RTRIM(?))
    SET @brandId = LTRIM(RTRIM(?))
    SET @conn = LTRIM(RTRIM(?))

  IF NOT EXISTS (
    SELECT *
    FROM  RESMaster.dbo.MST_PREMIUMITEM_INFO info
    INNER JOIN RESMaster.dbo.MST_PREMIUMITEM_STORE store
        ON info.CompanyId = store.CompanyId
        AND info.PremiumItemNo = store.PremiumItemNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId = @companyId
        AND info.TargetStoreType = '1'
    )
    SET @storeId = '0'

SELECT * FROM (

   SELECT
       info.UpdDate,
       info.PremiumItemNo,
       detail.Dpt,
       detail.Sku,
       detail.BrandId,
       detail.ConnCode,
       info.PremiumItemName,
       info.TargetPrice,
       info.TargetCount
   FROM  RESMaster.dbo.MST_PREMIUMITEM_INFO info
   INNER  JOIN RESMaster.dbo.MST_PREMIUMITEM_DETAIL detail
       ON info.CompanyId = detail.CompanyId
       AND info.PremiumItemNo = detail.PremiumItemNo
       AND detail.DeleteFlag = 0.0
   WHERE info.DeleteFlag = 0.0
       AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
       AND info.CompanyId = @companyId
       AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
       AND ((detail.PreminumItemType = '1' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL))
             OR (detail.PreminumItemType = '2' AND detail.Dpt = @dpt  AND( detail.BrandId = @brandId OR  detail.BrandId IS NULL))
             OR(detail.PreminumItemType = '3'  AND detail.Sku = @sku  ))

UNION
     SELECT
         info.UpdDate,
         info.PremiumItemNo,
         detail.Dpt,
         detail.Sku,
         detail.BrandId,
         detail.ConnCode,
         info.PremiumItemName,
        info.TargetPrice,
        info.TargetCount

     FROM  RESMaster.dbo.MST_PREMIUMITEM_INFO info
     INNER  JOIN RESMaster.dbo.MST_PREMIUMITEM_DETAIL detail
         ON info.CompanyId = detail.CompanyId
        AND info.PremiumItemNo = detail.PremiumItemNo
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_PREMIUMITEM_STORE store
        ON info.CompanyId = store.CompanyId
        AND info.PremiumItemNo = store.PremiumItemNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
        AND info.CompanyId = @companyId
        AND info.TargetStoreType = '1'
        AND ((detail.PreminumItemType = '1' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL))
             OR (detail.PreminumItemType = '2' AND detail.Dpt = @dpt  AND( detail.BrandId = @brandId OR  detail.BrandId IS NULL))
             OR(detail.PreminumItemType = '3'  AND detail.Sku = @sku  ))
) PREMIUMITEM   ORDER BY PREMIUMITEM.UpdDate DESC
</entry>

<entry key="get-taxrate-info">
  DECLARE @businessDate VARCHAR(32)
  SET  @businessDate = LTRIM(RTRIM(?))

  SELECT CAST(TaxRate/100 AS numeric(8,3)) AS TaxRate, 2 as TaxRateFlag FROM  RESMaster.dbo.MST_TAXRATE
   WHERE CONVERT(DATE,@businessDate) BETWEEN StartDate AND EndDate
   UNION ALL

  SELECT CAST(TaxRate/100 AS numeric(8,3)) AS TaxRate, 3 as TaxRateFlag FROM  RESMaster.dbo.MST_TAXRATE
   WHERE CONVERT(DATE,@businessDate) &lt; StartDate
   UNION ALL

  SELECT CAST(TaxRate/100 AS numeric(8,3)) AS TaxRate, 1 as TaxRateFlag FROM  RESMaster.dbo.MST_TAXRATE
   WHERE CONVERT(DATE,@businessDate) &gt; EndDate
</entry>

<entry key="get-qrcode-info-list">
DECLARE @companyId VARCHAR(32),
        @storeId VARCHAR(32),
        @businessDate VARCHAR(10)

SET @companyId =LTRIM(RTRIM(?))
SET @storeId =LTRIM(RTRIM(?))
SET @businessDate =LTRIM(RTRIM(?))

SELECT * FROM (
  SELECT  A.PromotionId,
          A.PromotionName,
          A.MinimumPrice,
          A.OutputTargetValue,
          A.BMPFileName,
          A.BMPFileFlag,
          A.BMPFileCount,
          A.OutputType,
          A.DisplayOrder,
          A.PromotionType,
          A.Dpt,
          A.Line,
          A.Class,
          A.Sku,
          A.ConnCode,
          A.BrandId,
          member.MemberRank,
          member.MemberTargetType,
          member.SexType,
          member.BirthMonth
  FROM(
      SELECT
          info.CompanyId,
          info.TargetMemberType,
          info.PromotionId,
          info.PromotionName,
          info.MinimumPrice,
          info.OutputTargetValue,
          info.BMPFileName,
          info.BMPFileFlag,
          info.BMPFileCount,
          info.OutputType,
          info.DisplayOrder,
          detail.PromotionType,
          detail.Dpt,
          detail.Line,
          detail.Class,
          detail.Sku,
          detail.ConnCode,
          detail.BrandId
      FROM
          RESMaster.dbo.MST_QRCODE_INFO info
      INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
          ON info.CompanyId = detail.CompanyId
          AND info.PromotionId = detail.PromotionId
          AND detail.DeleteFlag = 0
      WHERE
          CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
          AND info.DeleteFlag = 0.0
          AND info.CompanyId = @companyId
          AND info.TargetStoreType IN ('0','2')

      UNION

      SELECT
          info.CompanyId,
          info.TargetMemberType,
          info.PromotionId,
          info.PromotionName,
          info.MinimumPrice,
          info.OutputTargetValue,
          info.BMPFileName,
          info.BMPFileFlag,
          info.BMPFileCount,
          info.OutputType,
          info.DisplayOrder,
          detail.PromotionType,
          detail.Dpt,
          detail.Line,
          detail.Class,
          detail.Sku,
          detail.ConnCode,
          detail.BrandId
      FROM
          RESMaster.dbo.MST_QRCODE_INFO info
      LEFT JOIN RESMaster.dbo.MST_QRCODE_STORE store
          ON info.CompanyId = store.CompanyId
          AND info.PromotionId = store.PromotionId
      INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
          ON info.CompanyId = detail.CompanyId
          AND info.PromotionId = detail.PromotionId
          AND detail.DeleteFlag = 0
      WHERE
          CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
          AND info.DeleteFlag = 0.0
          AND info.CompanyId = @companyId
          AND store.CompanyId = @companyId
          AND store.DeleteFlag = 0.0
          AND store.StoreId = @storeId
    ) A
  INNER JOIN RESMaster.dbo.MST_QRCODE_MEMBER member
     ON A.CompanyId = member.CompanyId
    AND A.PromotionId = member.PromotionId
    AND A.TargetMemberType = '1'
    AND member.DeleteFlag = 0

  UNION

  SELECT  A.PromotionId,
          A.PromotionName,
          A.MinimumPrice,
          A.OutputTargetValue,
          A.BMPFileName,
          A.BMPFileFlag,
          A.BMPFileCount,
          A.OutputType,
          A.DisplayOrder,
          A.PromotionType,
          A.Dpt,
          A.Line,
          A.Class,
          A.Sku,
          A.ConnCode,
          A.BrandId,
          NULL,
          NULL,
          NULL,
          NULL
  FROM(
      SELECT
          info.CompanyId,
          info.TargetMemberType,
          info.PromotionId,
          info.PromotionName,
          info.MinimumPrice,
          info.OutputTargetValue,
          info.BMPFileName,
          info.BMPFileFlag,
          info.BMPFileCount,
          info.OutputType,
          info.DisplayOrder,
          detail.PromotionType,
          detail.Dpt,
          detail.Line,
          detail.Class,
          detail.Sku,
          detail.ConnCode,
          detail.BrandId
      FROM
          RESMaster.dbo.MST_QRCODE_INFO info
      INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
          ON info.CompanyId = detail.CompanyId
          AND info.PromotionId = detail.PromotionId
          AND detail.DeleteFlag = 0
      WHERE
          CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
          AND info.DeleteFlag = 0.0
          AND info.CompanyId = @companyId
          AND info.TargetStoreType IN ('0','2')

      UNION

      SELECT
          info.CompanyId,
          info.TargetMemberType,
          info.PromotionId,
          info.PromotionName,
          info.MinimumPrice,
          info.OutputTargetValue,
          info.BMPFileName,
          info.BMPFileFlag,
          info.BMPFileCount,
          info.OutputType,
          info.DisplayOrder,
          detail.PromotionType,
          detail.Dpt,
          detail.Line,
          detail.Class,
          detail.Sku,
          detail.ConnCode,
          detail.BrandId
      FROM
          RESMaster.dbo.MST_QRCODE_INFO info
      LEFT JOIN RESMaster.dbo.MST_QRCODE_STORE store
          ON info.CompanyId = store.CompanyId
          AND info.PromotionId = store.PromotionId
      INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
          ON info.CompanyId = detail.CompanyId
          AND info.PromotionId = detail.PromotionId
          AND detail.DeleteFlag = 0
      WHERE
          CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
          AND info.DeleteFlag = 0.0
          AND info.CompanyId = @companyId
          AND store.CompanyId = @companyId
          AND store.DeleteFlag = 0.0
          AND store.StoreId = @storeId
  ) A
  WHERE A.TargetMemberType = '0'
) B
ORDER BY DisplayOrder, PromotionId
</entry>

<entry key="check-cust-in-memberid">
DECLARE @companyId VARCHAR(32),
    @promotionId VARCHAR(20),
    @customerId VARCHAR(22)

SET @companyId =LTRIM(RTRIM(?))
SET @promotionId =LTRIM(RTRIM(?))
SET @customerId =LTRIM(RTRIM(?))

SELECT
  MemberId
FROM
  RESMaster.dbo.MST_QRCODE_MEMBERID
WHERE
  companyId = @companyId
  AND MemberId = @customerId
  AND promotionId = @promotionId
  AND DeleteFlag = 0
</entry>

<entry key="get-qrcode-info">
DECLARE @companyId VARCHAR(32),
        @dpt VARCHAR(32),
        @brandId VARCHAR(32),
        @class VARCHAR(32),
        @sku VARCHAR(32),
        @storeId VARCHAR(32),
        @businessDate VARCHAR(10),
        @conn VARCHAR(32)

SET @companyId =LTRIM(RTRIM(?))
SET @dpt =LTRIM(RTRIM(?))
SET @brandId =LTRIM(RTRIM(?))
SET @class =LTRIM(RTRIM(?))
SET @sku =LTRIM(RTRIM(?))
SET @storeId =LTRIM(RTRIM(?))
SET @businessDate =LTRIM(RTRIM(?))
SET @conn =LTRIM(RTRIM(?))
SELECT * FROM(

SELECT
    info.PromotionId QRPromotionId,
    info.PromotionName QRPromotionName,
    info.MinimumPrice,
    info.OutputTargetValue,
    info.BMPFileName,
    info.BMPFileFlag,
    info.BMPFileCount,
    info.OutputType,
    info.DisplayOrder,
    exclsion.Dpt ExclsionInfo
FROM
    RESMaster.dbo.MST_QRCODE_INFO info
INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
    ON info.CompanyId = detail.CompanyId
    AND info.PromotionId = detail.PromotionId
    AND detail.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_QRCODE_EXCLSION exclsion
    ON exclsion.CompanyId = detail.CompanyId
    AND exclsion.DeleteFlag = 0.0
    AND exclsion.Dpt = @dpt
    AND exclsion.Class = @class
    AND exclsion.PromotionId = detail.PromotionId
WHERE
    CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.DeleteFlag = 0.0
    AND info.CompanyId = @companyId
    AND (detail.PromotionType = '1'
             OR (detail.PromotionType = '2' AND detail.Dpt = @dpt )
             OR (detail.PromotionType = '3' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL))
             OR (detail.PromotionType = '4' AND detail.Dpt = @dpt  AND (detail.BrandId = @brandId OR detail.BrandId IS NULL))
             OR (detail.PromotionType = '5' AND detail.Class = @class )
             OR (detail.PromotionType = '6' AND detail.Sku = @sku)
    )
    AND info.TargetStoreType IN ('0','2')

UNION

SELECT
    info.PromotionId QRPromotionId,
    info.PromotionName QRPromotionName,
    info.MinimumPrice,
    info.OutputTargetValue,
    info.BMPFileName,
    info.BMPFileFlag,
    info.BMPFileCount,
    info.OutputType,
    info.DisplayOrder,
    exclsion.Dpt ExclsionInfo
FROM
    RESMaster.dbo.MST_QRCODE_INFO info
INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
    ON info.CompanyId = detail.CompanyId
    AND info.PromotionId = detail.PromotionId
    AND detail.DeleteFlag = 0.0
INNER JOIN RESMaster.dbo.MST_QRCODE_STORE store
    ON info.CompanyId = store.CompanyId
    AND store.DeleteFlag = 0.0
    AND store.PromotionId = info.PromotionId
    AND store.StoreId = @storeId
LEFT JOIN RESMaster.dbo.MST_QRCODE_EXCLSION exclsion
    ON exclsion.CompanyId = detail.CompanyId
    AND exclsion.DeleteFlag = 0.0
    AND exclsion.Dpt = @dpt
    AND exclsion.Class = @class
    AND exclsion.PromotionId = detail.PromotionId
WHERE
    CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.DeleteFlag = 0.0
    AND info.CompanyId = @companyId
    AND (detail.PromotionType = '1'
             OR (detail.PromotionType = '2' AND detail.Dpt = @dpt )
             OR (detail.PromotionType = '3' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL))
             OR (detail.PromotionType = '4' AND detail.Dpt = @dpt  AND (detail.BrandId = @brandId OR detail.BrandId IS NULL))
             OR (detail.PromotionType = '5' AND detail.Class = @class )
             OR (detail.PromotionType = '6' AND detail.Sku = @sku)
    )

) A ORDER BY DisplayOrder
</entry>

<entry key="get-promotion-msg-info-list">
DECLARE @companyId VARCHAR(12),
        @storeId VARCHAR(10) ,
        @businessDate VARCHAR(32)

SET @companyId = LTRIM(RTRIM(?))
SET @storeId = LTRIM(RTRIM(?))
SET @businessDate = LTRIM(RTRIM(?))

SELECT
     info.RecordId,
     info.Subject,
     info.MinimunPrice,
     info.MessageBody,
     detail.MdInternal,
     info.UpdDate
FROM  RESMaster.dbo.MST_PROMOTIONMSG_INFO info
INNER JOIN RESMaster.dbo.MST_PROMOTIONMSG_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.RecordId = detail.RecordId
    AND detail.DeleteFlag = 0.0
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
  AND info.TargetStoreType in ('0','2')

UNION

SELECT
     info.RecordId,
     info.Subject,
     info.MinimunPrice,
     info.MessageBody,
     detail.MdInternal,
     info.UpdDate
FROM  RESMaster.dbo.MST_PROMOTIONMSG_INFO info
INNER JOIN RESMaster.dbo.MST_PROMOTIONMSG_DETAIL detail
    ON info.CompanyId = detail.CompanyId AND info.RecordId = detail.RecordId
    AND detail.DeleteFlag = 0.0
INNER JOIN RESMaster.dbo.MST_PROMOTIONMSG_STORE store
   ON info.CompanyId = store.CompanyId
   AND info.RecordId = store.RecordId
   AND store.StoreId = @storeId
   AND store.DeleteFlag = 0.0
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate
    AND info.CompanyId = @companyId
  AND info.TargetStoreType = '1'
ORDER BY info.UpdDate DESC
</entry>

<entry key="get-promotion-msg-dpt-list">
DECLARE @companyId VARCHAR(32),
        @recordId int

SET @companyId =LTRIM(RTRIM(?))
SET @recordId =LTRIM(RTRIM(?))

SELECT
     Dpt
FROM RESMaster.dbo.MST_PROMOTIONMSG_DPT
WHERE CompanyId = @companyId
  AND RecordId = @recordId
  AND DeleteFlag = 0.0
ORDER BY Dpt
</entry>
  <entry key="get-till-information-list">
  DECLARE    @storeId VARCHAR(6)
  SET        @storeId = LTRIM(RTRIM(?))
  SELECT     StoreId,
               TillId,
             TerminalId,
             BusinessDayDate,
             SodFlag,
             EodFlag
    FROM RESMaster.dbo.MST_TILLIDINFO
    WHERE StoreId = @storeId  AND DeleteFlag = 0
    ORDER BY StoreId
</entry>

<entry key="get-print-report-value">

        SELECT
           RetailStoreId
             ,TillID,AccountCode,AccountSubCode,BusinessDayDate,TotalNumber,TotalMoney
        FROM
            RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIAL
        WHERE
            BusinessDayDate=? and RetailStoreId=?;

</entry>

<entry key="get-tenderinfo-alltype">
        DECLARE
        @companyId VARCHAR (12),
        @storeId VARCHAR (10)

        SET @storeId = LTRIM(RTRIM(?))
        SET @companyId = LTRIM(RTRIM(?))

        IF NOT EXISTS (
            SELECT TOP 1
             *
            FROM
                RESMaster.dbo.MST_TENDERINFO
            WHERE
                DeleteFlag = 0.0 AND
                StoreId = @storeId AND
                CompanyId = @companyId
        )
        SET @storeId = '0'

        SELECT
            CompanyId,
            StoreId,
            TenderType,
            TenderId,
            TenderName,
            TenderKanaName,
            StampType,
            PointType,
            ChangeType,
            TenderIdentification,
            UnitPrice,
            SubCode1,
            SubCode2,
            SubNum1,
            SubNum2,
            SubNum3,
            DisplayOrder
        FROM
            RESMaster.dbo.MST_TENDERINFO
        WHERE
            DeleteFlag = 0.0 AND
            StoreId = @storeId AND
            CompanyId = @companyId
        ORDER BY
            DisplayOrder,
            cast(TenderType as int)
</entry>

<entry key="get-coupon-price-info">
    DECLARE
        @companyId VARCHAR (12),
        @storeId VARCHAR (10),
        @tenderId VARCHAR (20),
        @tenderType VARCHAR (10)

       SET @companyId = LTRIM(RTRIM(?))
       SET @storeId = LTRIM(RTRIM(?))
       SET @tenderId = LTRIM(RTRIM(?))
       SET @tenderType = LTRIM(RTRIM(?))

        IF NOT EXISTS (
          SELECT
              NameText,
              UnitPrice
          FROM
              RESMaster.dbo.MST_COUPONPRICE
        WHERE
              DeleteFlag = 0.0 AND
              StoreId = @storeId AND
              CompanyId = @companyId AND
              TenderType = @tenderType AND
              TenderId = @tenderId
        )
        SET @storeId = '0'

        SELECT
            NameText,
            UnitPrice
        FROM
            RESMaster.dbo.MST_COUPONPRICE
      WHERE
            DeleteFlag = 0.0 AND
            StoreId = @storeId AND
            CompanyId = @companyId AND
            TenderType = @tenderType AND
            TenderId = @tenderId
        ORDER BY
            DisplayOrder,
            TenderType
</entry>

<entry key="get-tenderinfo-type">
DECLARE
    @companyId VARCHAR (12),
    @storeId VARCHAR (10),
    @tenderType VARCHAR (50)
SET @storeId = LTRIM(RTRIM(?))
SET @companyId = LTRIM(RTRIM(?))
SET @tenderType = LTRIM(RTRIM(?))

IF NOT EXISTS (
  SELECT
    *
  FROM
    RESMaster.dbo.MST_TENDERINFO
  WHERE
    TenderType IN (
        SELECT
            TenderType
        FROM
            RESMaster.dbo.MST_TENDERINFO
        WHERE
            CHARINDEX(TenderType,@tenderType) &gt; 0
    )
    AND DeleteFlag = 0.0
    AND StoreId = @storeId
    AND CompanyId = @companyId
)
  SET @storeId = '0'

SELECT
    CompanyId,
    StoreId,
    TenderType,
    TenderId,
    TenderName,
    TenderKanaName,
    StampType,
    PointType,
    ChangeType,
    UnitPrice,
    DisplayOrder
FROM
    RESMaster.dbo.MST_TENDERINFO
WHERE
    TenderType IN (
        SELECT
            TenderType
        FROM
            RESMaster.dbo.MST_TENDERINFO
        WHERE
            CHARINDEX(TenderType,@tenderType) &gt; 0
    )
AND DeleteFlag = 0.0
AND StoreId = @storeId
AND CompanyId = @companyId
ORDER BY
    DisplayOrder,
    TenderType
</entry>

<entry key="get-tender-info">
DECLARE
    @companyId VARCHAR (12),
    @storeId VARCHAR (10),
    @tenderType VARCHAR (50),
    @tenderId VARCHAR(20)
SET @storeId = LTRIM(RTRIM(?))
SET @companyId = LTRIM(RTRIM(?))
SET @tenderType = LTRIM(RTRIM(?))
SET @tenderId = LTRIM(RTRIM(?))

IF NOT EXISTS (
  SELECT
    *
  FROM
    RESMaster.dbo.MST_TENDERINFO
  WHERE
    TenderType = @tenderType
    AND DeleteFlag = 0.0
    AND StoreId = @storeId
    AND CompanyId = @companyId
    AND TenderId = @tenderId
)
  SET @storeId = '0'

SELECT
    CompanyId,
    StoreId,
    TenderType,
    TenderId,
    TenderName,
    TenderKanaName,
    StampType,
    PointType,
    ChangeType,
    UnitPrice,
    DisplayOrder
FROM
    RESMaster.dbo.MST_TENDERINFO
WHERE
 TenderType = @tenderType
AND DeleteFlag = 0.0
AND StoreId = @storeId
AND CompanyId = @companyId
AND TenderId = @tenderId
ORDER BY
    DisplayOrder,
    TenderType
</entry>

<entry key="get-cashAbstract-type">
DECLARE
    @companyId VARCHAR (12),
    @storeId VARCHAR (10),
    @storeIdUsual VARCHAR (10),
    @cashFlowDirection VARCHAR (50),
    @tenderId VARCHAR (50),
    @tenderType VARCHAR (50)
SET @storeId = LTRIM(RTRIM(?))
SET @companyId = LTRIM(RTRIM(?))
SET @cashFlowDirection = LTRIM(RTRIM(?))
SET @tenderId = LTRIM(RTRIM(?))
SET @tenderType = LTRIM(RTRIM(?))
SET @storeIdUsual = @storeId

IF NOT EXISTS (
    SELECT *
    FROM  RESMaster.dbo.MST_CASHFLOW_REMARKS a, RESMaster.dbo.MST_TENDERINFO b
    WHERE
    a.StoreId = @storeId
    AND a.CompanyId = @companyId
    AND a.CompanyId = b.CompanyId
    AND a.CashFlowDirection = @cashFlowDirection
    AND b.TenderId = @tenderId
    AND b.TenderType = @tenderType
    AND b.TenderId = a.CashFlowType
  AND a.DeleteFlag = 0.0
  AND b.DeleteFlag = 0.0
)
SET @storeIdUsual = '0'

SELECT
    a.CompanyId,
    a.StoreId,
    a.CashFlowDirection,
    a.CashFlowType,
    a.RemarksId,
    a.RemarksCol,
    a.RemarksKanaCol
FROM
    RESMaster.dbo.MST_CASHFLOW_REMARKS a,
    RESMaster.dbo.MST_TENDERINFO b
WHERE
    a.CompanyId = @companyId
AND a.CompanyId = b.CompanyId
AND b.StoreId = @storeId
AND a.StoreId = @storeIdUsual
AND a.CashFlowDirection = @cashFlowDirection
AND b.TenderId = @tenderId
AND b.TenderType = @tenderType
AND b.TenderId = a.CashFlowType
AND a.DeleteFlag = 0.0
AND b.DeleteFlag = 0.0
ORDER BY
    a.CashFlowDirection
</entry>

<!-- *************************  ENTRY KEY FOR POSLOG JOURNALIZATION     *************************  -->

<entry key="save-poslog">
    INSERT INTO RESTransaction.dbo.TXL_SALES_JOURNAL
           (RetailStoreId
           ,WorkstationId
           ,SequenceNumber
           ,BusinessDayDate
           ,SystemDateTime
           ,Tx
           ,TxType
           ,Status
           ,Guid
           ,ServerId
           ,CompanyId
           ,TrainingFlag)
       VALUES
         (?,?,?,?,?,?,?,?,?,?,?,?);
</entry>

<entry key="update-software-version">
    DECLARE
      @companyId varchar(12)
     ,@storeId varchar(6)
     ,@terminalId varchar(6)
     ,@container varchar(256)
     ,@mobileShop varchar(50)
     ,@resTransaction varchar(50)
     ,@resTabletUi varchar(50)
     ,@resUiConfig varchar(50)

  set @companyId=?
    set @storeId=?
    set @terminalId=?
    set @container=?
    set @mobileShop=?
    set @resTransaction=?
    set @resTabletUi=?
    set @resUiConfig=?

    IF EXISTS (select Container from RESTransaction.dbo.TXU_SOFTWARE_VERSION
               where StoreId=@storeId and TerminalId=@terminalId and CompanyId=@companyId)
      UPDATE RESTransaction.dbo.TXU_SOFTWARE_VERSION
       SET
       CompanyId = @companyId
       ,StoreId = @storeId
       ,TerminalId = @terminalId
       ,Container = @container
       ,MobileShop = @mobileShop
       ,RESTransaction = @resTransaction
       ,RESTabletUI = @resTabletUi
       ,RESUiConfig = @resUiConfig
      WHERE StoreId=@storeId and TerminalId=@terminalId and CompanyId=@companyId
    ELSE
      INSERT INTO RESTransaction.dbo.TXU_SOFTWARE_VERSION(
        CompanyId
       ,StoreId
       ,TerminalId
       ,Container
       ,MobileShop
       ,RESTransaction
       ,RESTabletUI
       ,RESUiConfig
      ) VALUES (
        @companyId
       ,@storeId
       ,@terminalId
       ,@container
       ,@mobileShop
       ,@resTransaction
       ,@resTabletUi
       ,@resUiConfig
      );
</entry>

<entry key="get-poslog-xml-txtype">
        SELECT
          TxType
        FROM
          RESTransaction.dbo.TXL_SALES_JOURNAL
        WHERE
          RetailStoreId = ? AND
          WorkstationId = ? AND
          SequenceNumber = ? AND
          BusinessDayDate = ?;
</entry>

<entry key="check-poslog-duplicate">
        SELECT
          COUNT(*) AS [rowcount]
        FROM
          RESTransaction.dbo.TXL_SALES_JOURNAL
        WHERE
          CompanyId = ? AND
          RetailStoreId = ? AND
          WorkstationId = ? AND
          SequenceNumber = ? AND
          BusinessDayDate = ? AND
          TrainingFlag = ?;
</entry>

<entry key="get-poslog-xml">
        SELECT
          tx,
          txtype
    FROM
      RESTransaction.dbo.TXL_POSLOG
    WHERE
      termid = ? AND txid = ?;
</entry>

<entry key="get-poslog-xml-by-id">
    SELECT tx FROM RESTransaction.dbo.TXL_POSLOG
        WHERE
          corpid = ? AND
      storeid = ? AND
      termid = ? AND
      summarydateid = ? AND
      txid = ?;
</entry>

<entry key="get-poslog-xml-by-terminalid-storeid-txid">
    SELECT
      TOP 1 Tx
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
        WHERE
          RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      TrainingFlag = ?
    ORDER BY JournalLine DESC;
</entry>

<entry key="get-poslog-xml-by-companyid-terminalid-storeid-txid">
    SELECT
      TOP 1 Tx
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
      WHERE
        CompanyId = ? AND
        RetailStoreId = ? AND
        WorkstationId = ? AND
        BusinessDayDate = ? AND
        SequenceNumber = ? AND
        TrainingFlag = ? AND
        TxType = COALESCE(?, TxType)
    ORDER BY JournalLine DESC;
</entry>

<entry key="get-poslog-xml-by-terminalid-storeid-txid-summarydateid">
    SELECT TOP 1 tx FROM RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TrainingFlag = ?
    ORDER BY JournalLine DESC;
</entry>

<entry key="get-bussiness-date">
    SELECT DISTINCT TOP 1
      StoreId, TodayDate
    FROM
      RESMaster.dbo.MST_BIZDAY
    WHERE
      CompanyId = ? AND StoreId in (?, '0') AND DeleteFlag = 0.0
    ORDER BY
      StoreId DESC
</entry>

<entry key="select-txs-by-txid">
    SELECT
      TOP(?) Tx
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber LIKE ? + '%' AND
      (LOWER(TxType) = 'sale' OR LOWER(TxType) = 'void')
    ORDER BY
      SequenceNumber ASC
</entry>

<entry key="select-txs-by-summarydate">
    SELECT
      TOP(?) Tx
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      BusinessDayDate = ? AND
      (LOWER(TxType) = 'sale' OR LOWER(TxType) = 'void')
    ORDER BY
      SequenceNumber ASC
</entry>

<entry key="select-transactions">
    DECLARE
      @limit INT,
      @limitFrom INT,
      @storeid VARCHAR(max),
      @terminalid VARCHAR(max),
      @itemname VARCHAR(max),
      @itemid VARCHAR(max),
      @transactionNumberFrom NUMERIC(5,0),
      @transactionNumberTo NUMERIC(5,0),
      @businessDate DATE,
      @fromdate DATETIME2,
      @todate DATETIME2,
      @type VARCHAR(max),
      @subcode4 varchar(max),
      @journalline BIGINT,
      @companyid VARCHAR(12),
      @trainingflag tinyint

    SET @limit = ?
    SET @storeid = ?
    SET @terminalid = ?
    SET @itemname = ?
    SET @itemid = ?
    SET @transactionNumberFrom = ?
    SET @transactionNumberTo = ?
    SET @businessDate = ?
    SET @fromdate = ?
    SET @todate = ?
    SET @type = ?
    SET @subcode4 = ?
  SET @limitFrom = ?
    set @journalline = ?
    SET @companyid = ?
    SET @trainingflag = ?
    ;with searcedList as
    (select journal.Tx, journal.TxType, journal.journalLine,
            row_number() over (order by
                journal.JournalLine DESC,
                journal.RetailStoreId ASC,
                journal.WorkstationId ASC,
                journal.SequenceNumber ASC,
                journal.SystemDateTime ASC
            ) as row_num, journal.companyId, journal.TrainingFlag
        FROM
            RESTransaction.dbo.TXL_SALES_JOURNAL journal LEFT JOIN
            RESTransaction.dbo.TXL_SALES_LEDGER ledger ON
            journal.BusinessDayDate = ledger.BusinessDayDate AND
            journal.RetailStoreId = ledger.RetailStoreId AND
            journal.WorkstationId = ledger.WorkstationId AND
            journal.SequenceNumber = ledger.SequenceNumber AND
            journal.CompanyId = ledger.CompanyId
        WHERE
          (@journalline is null or @journalline &gt;= journal.journalLine)
          AND
          (@itemname IS NULL OR (
            LOWER(ledger.MdName) LIKE '%' + LOWER(@itemname) + '%' AND
            (ledger.Account = 1 OR ledger.Account = 8 OR ledger.Account = 13 OR ledger.Account = 11)
          )) AND
          (@subcode4 IS NULL OR ledger.SubCode4 = @subcode4) AND
          (@itemid IS NULL OR (
            ledger.ItemId LIKE @itemid + '%' AND
            (ledger.Account = 1 OR ledger.Account = 8
             OR ledger.Account = 13 OR ledger.Account = 11)
          )) AND
          (@storeid IS NULL OR journal.RetailStoreId = @storeid) AND
          (@terminalid IS NULL OR journal.WorkstationId = @terminalid) AND
          (@transactionNumberFrom IS NULL OR journal.SequenceNumber &gt;= @transactionNumberFrom) AND
          (@transactionNumberTo IS NULL OR journal.SequenceNumber &lt;= @transactionNumberTo) AND
          (@businessDate IS NULL OR journal.BusinessDayDate = @businessDate) AND
          (@fromdate IS NULL OR SystemDateTime &gt;= @fromdate) AND
          (@todate IS NULL OR SystemDateTime &lt;= @todate) AND
          (@type IS NULL OR LOWER(journal.TxType) = LOWER(@type) AND
          (@companyid IS NULL OR journal.CompanyId = @companyid) AND
          (@trainingflag IS NULL OR journal.TrainingFlag = @trainingflag))
        GROUP BY
          journal.BusinessDayDate,
          journal.RetailStoreId,
          journal.WorkstationId,
          journal.SequenceNumber,
          journal.Tx,
          journal.SystemDateTime,
          journal.TxType,
          journal.JournalLine,
          journal.CompanyId,
          journal.TrainingFlag
    )
    SELECT
      top (@limit) *
    FROM searcedList
    WHERE row_num >= @limitfrom AND TrainingFlag = @trainingflag AND CompanyId = @companyid
    order by row_num asc
</entry>

<entry key="save-void-details">
    INSERT INTO RESTransaction.dbo.TXL_SALES_VOIDED
      (RetailStoreId,
      WorkstationId,
      SequenceNumber,
      BusinessDayDate,
      TxType,
      CompanyId,
      TrainingFlag)
    VALUES
      (?,?,?,?,?,?,?)
</entry>

<entry key="save-TxuTotalGuestTillDay-details">
    DECLARE
      @storeId varchar(MAX),
      @tillId varchar(MAX),
      @BusinessDayDate DATE,
      @SalesGuestCnt NUMERIC(10, 0),
      @ReturnGuestCnt NUMERIC(10, 0),
      @VoidGuestCnt NUMERIC(10, 0)

    SET @storeId=?
    SET @tillId=?
    SET @BusinessDayDate=?
    SET @SalesGuestCnt=?
    SET @ReturnGuestCnt=?
    SET @VoidGuestCnt=?

    IF EXISTS (
                 SELECT RetailStoreId
                 FROM   RESTransaction.dbo.TXU_TOTAL_GUESTTILLDAY
                 WHERE  RetailStoreId=@storeId
                 AND    TillID=@tillId
                 AND    BusinessDayDate=@BusinessDayDate
              )
      UPDATE RESTransaction.dbo.TXU_TOTAL_GUESTTILLDAY
      SET    SalesGuestCnt = SalesGuestCnt + @SalesGuestCnt,
             ReturnGuestCnt = ReturnGuestCnt + @ReturnGuestCnt,
             VoidGuestCnt = VoidGuestCnt + @VoidGuestCnt
      WHERE  RetailStoreId=@storeId
      AND    TillID=@tillId
      AND    BusinessDayDate=@BusinessDayDate
    ELSE
      INSERT INTO RESTransaction.dbo.TXU_TOTAL_GUESTTILLDAY (
        RetailStoreId,
        TillID,
        BusinessDayDate,
        SalesGuestCnt,
        ReturnGuestCnt,
        VoidGuestCnt
      ) VALUES (
        @storeId,
        @tillId,
        @BusinessDayDate,
        @SalesGuestCnt,
        @ReturnGuestCnt,
        @VoidGuestCnt
      );
</entry>

<entry key="get-void-details">
    SELECT
      COUNT(*) AS [rowcount]
    FROM
      RESTransaction.dbo.TXL_SALES_VOIDED
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TxType LIKE '%' + ? + '%' AND
      CompanyId = ? AND
      TrainingFlag = ?;
</entry>

<entry key="save-summary-receipt-details">
    INSERT INTO RESTransaction.dbo.TXL_SUMMARYRECEIPT_HISTORY
      (CompanyId,
       RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       TrainingFlag,
       IssuedRetailStoreId,
       IssuedWorkstationId,
       IssuedSequenceNumber,
       IssuedBusinessDayDate,
       InsDateTime
       )
    VALUES
      (?,?,?,?,?,?,?,?,?,?,?);
</entry>

<entry key="save-receipt-reprint-details">
    INSERT INTO RESTransaction.dbo.TXL_RECEIPTREPRINT_HISTORY
      (RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       IssuedRetailStoreId,
       IssuedWorkstationId,
       IssuedSequenceNumber,
       IssuedBusinessDayDate,
       CompanyId,
       TrainingFlag)
    VALUES
      (?,?,?,?,?,?,?,?,?,?);
</entry>

<entry key="get-summary-receipt-count">
    SELECT
      COUNT(*) as count
    FROM
      RESTransaction.dbo.TXL_SUMMARYRECEIPT_HISTORY
    WHERE
      CompanyId = ? AND
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TrainingFlag = ?;
</entry>

<!-- *************************  ENTRY KEY FOR GIFT RECEIPT  ************************* -->
<entry key="save-gift-receipt-details">
    INSERT INTO RESTransaction.dbo.TXL_GIFTRECEIPT_HISTORY
      (CompanyId,
       RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       TrainingFlag,
       IssuedRetailStoreId,
       IssuedWorkstationId,
       IssuedSequenceNumber,
       IssuedBusinessDayDate,
       InsDateTime)
    VALUES
      (?,?,?,?,?,?,?,?,?,?,?);
</entry>

<entry key="get-gift-receipt-count">
    SELECT
      COUNT(*) as count
    FROM
      RESTransaction.dbo.TXL_GIFTRECEIPT_HISTORY
    WHERE
      CompanyId = ? AND
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TrainingFlag = ?;
</entry>

<!-- *************************  ENTRY KEY FOR CUSTOMER INFORMATION      ************************* -->
<entry key="get-customer-partial">
      SELECT TOP 1 * FROM RESMaster.dbo.MST_CUSTINFO
          WHERE CustomerId LIKE ?;
</entry>

<entry key="get-customer-complete">
    SELECT * FROM RESMaster.dbo.MST_CUSTINFO
        WHERE CustomerId = ?;
</entry>

<entry key="get-loyalty-account">
    DECLARE @companyId varchar(max),
            @storeId varchar(max)

        SET @companyId = ?
        SET @storeId = ?

    SELECT *
        FROM (
            SELECT * ,
                   ROW_Number() OVER (PARTITION BY CompanyId,ConnCode ORDER BY StoreId DESC) AS rownumber
              FROM RESMaster.dbo.MST_CONNINFO
             WHERE companyId = @companyId
               AND storeId IN (@storeId,'0')
               AND %s
               AND DeleteFlag = 0
          ) TBL
         WHERE rownumber = 1

</entry>

<!-- *************************  ENTRY KEY FOR CREDENTIAL SERVICE      ************************* -->
<entry key="get-status-of-operator">
        SELECT    users.OperatorName, ope.OpeKanaName, ope.SecLevel2, opesec.SecGroup OpeType
        FROM      RESMaster.dbo.MST_EMPINFO ope,
              RESMaster.dbo.MST_EMP_SEC opesec,
                  RESMaster.dbo.MST_USER_CREDENTIALS users
        WHERE     ope.CompanyId = users.CompanyId AND
              ope.EmpCode = users.OperatorNo AND
              ope.CompanyId = opesec.CompanyId AND
          ope.EmpCode = opesec.EmpCode AND
                  ope.CompanyId = LTRIM(RTRIM(?)) AND
                  ope.EmpCode = LTRIM(RTRIM(?)) AND
                  opesec.DeleteFlag = 0.0
</entry>

<entry key="get-systemnames">
      DECLARE
        @companyId varchar(max),
        @storeId varchar(max),
        @nameCategory varchar(max)

      SET @companyId = ?
      SET @storeId = ?
      SET @nameCategory = ?

      IF NOT EXISTS (
        SELECT
          CompanyId,
          StoreId,
          NameCategory,
          NameId
        FROM
          RESMaster.dbo.MST_NAME_SYSTEM
        WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          NameCategory = @nameCategory AND
          DeleteFlag = 0.0
      )
        SET @storeId = '0'

      SELECT
        CompanyId,
        StoreId,
        NameCategory,
        NameId,
        NameText,
        NameIdName,
        SubCode1,
    SubCode2
      FROM
        RESMaster.dbo.MST_NAME_SYSTEM
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        NameCategory IN (
        SELECT
            NameCategory
        FROM
            RESMaster.dbo.MST_NAME_SYSTEM
        WHERE
            CHARINDEX(NameCategory,@nameCategory)  &gt;  0
        ) AND
        DeleteFlag = 0.0
      ORDER BY DisplayOrder
</entry>

<entry key="get-subtotalDiscount">
       SELECT
           DiscountReason,
           DiscountReasonName
       FROM RESMaster.dbo.MST_PRICE_PROMOTION
       WHERE DiscountType = '2'
         AND DeleteFlag = 0.0
       ORDER BY PromotionId;
</entry>

<entry key="update-sign-on-at-spart">
      UPDATE
        RESMaster.dbo.MST_EMPINFO
      SET
        SubChar2 = replace(replace(replace(convert(varchar(19), getdate(), 126),'-',''),'T',''),':','')
        OUTPUT
          INSERTED.SubChar2
      WHERE EmpCode = ?
</entry>

<entry key="insert-update-credential-from-spart">
        DECLARE
            @empcode varchar(MAX),
            @password varchar(MAX),
            @opename varchar(MAX)

        SET @empcode =?
        SET @password=?
        SET @opename=?

        IF EXISTS (SELECT OperatorNo FROM RESMaster.dbo.MST_USER_CREDENTIALS
        WHERE OperatorNo = @empcode)

            UPDATE
                RESMaster.dbo.MST_USER_CREDENTIALS
            SET
                PassCode = @password,
                OperatorName = @opename,
                UpdDate = GETDATE()

            WHERE
                OperatorNo = @empcode
        ELSE
            INSERT INTO RESMaster.dbo.MST_USER_CREDENTIALS
           (
                OperatorNo,
                PassCode,
                OperatorName,
                Role,
                OperatorType,
                Upddate,
                Status
            )
         VALUES
           (@empcode, @password, @opename, 'NCR', 1, GETDATE(),'Inactive');
</entry>

<entry key="insert-update-operator-from-spart">
    DECLARE
      @empcode varchar(MAX),
       @opecode varchar(MAX),
       @password varchar(MAX),
       @opetype varchar(MAX),
       @opename varchar(MAX),
       @opekananame varchar(MAX),
       @zipcode varchar(MAX),
       @address varchar(MAX),
       @telno varchar(MAX),
       @faxno varchar(MAX),
       @seclevel1 smallint,
       @seclevel2 smallint,
       @subchar1 varchar(MAX),
       @subchar2 varchar(MAX),
       @subchar3 varchar(MAX),
       @insdate smalldatetime,
       @upddate smalldatetime,
       @updappid varchar(MAX),
       @updopecode varchar(MAX)

      SET @empcode =?
    SET @opecode=?
    SET @password=?
    SET @opetype=?
    SET @opename=?
    SET @opekananame=?
    SET @zipcode=?
    SET @address=?
    SET @telno=?
    SET @faxno=?
    SET @seclevel1=?
    SET @seclevel2=?
    SET @subchar1=?
    SET @subchar2=?
    SET @subchar3=?
    SET @insdate=?
    SET @upddate=?
    SET @updappid=?
    SET @updopecode=?

      IF EXISTS (SELECT empcode FROM OPE_MAST_TBL
      WHERE EmpCode = @empcode)
        UPDATE
          OPE_MAST_TBL
        SET
          OpeCode = @opecode,
          PassCode = @password,
          OpeType = @opetype,
          OpeName = @opename,
          OpeKanaName = @opekananame,
          ZipCode = @zipcode,
          Address = @address,
          TelNo = @telno,
          FaxNo = @faxno,
          SecLevel1 = @seclevel1,
          SecLevel2 = @seclevel2,
          SubChar1 = @subchar1,
          SubChar2 = @subchar2,
          SubChar3 = @subchar3,
          InsDate = @insdate,
          UpdDate = @upddate,
          UpdAppId = @updappid,
          UpdOpeCode = @updopecode
      WHERE
        EmpCode = @empcode
    ELSE
      INSERT INTO OPE_MAST_TBL
           (
               EmpCode,
        OpeCode,
        Password,
        OpeType,
        OpeName,
        OpeKanaName,
        ZipCode,
        Address,
        Telno,
        Faxno,
        SecLevel1,
        SecLevel2,
        SubChar1,
        SubChar2,
        SubChar3,
        InsDate,
        UpdDate,
        UpdAppId,
        UpdOpeCode)
       VALUES
         (@empcode,@opecode,@password,@opetype,@opename,@opekananame,@zipcode,@address,@telno,
         @faxno,@seclevel1,@seclevel2,@subchar1,@subchar2,@subchar3,@insdate,@upddate,@updappid,@updopecode);
</entry>

<entry key="get-operator-by-operatorno">
    SELECT
        PassCode, Role, OperatorName, OperatorType, TerminalId, muc.StoreId, Status, me.OpeKanaName, me.OpeName
      FROM
        RESMaster.dbo.MST_USER_CREDENTIALS muc
    LEFT JOIN RESMaster.dbo.MST_EMPINFO me on me.CompanyId = muc.CompanyId
        AND me.EmpCode = muc.OperatorNo
    WHERE
      muc.OperatorNo = ? and muc.CompanyId = ?;
</entry>

<entry key="get-operator-passcode">
    SELECT
        PassCode
      FROM
        RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo = ?;
</entry>

<entry key="get-operator-status">
    SELECT
        TerminalId,
        OperatorName,
        Status
      FROM
        RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo = ?;
</entry>

<entry key="update-operator-terminalid">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      TerminalId = ?,
      UpdDate = GETDATE(),
      Status='Active'
    WHERE
      OperatorNo = ? AND PassCode = ? AND (Status='Active' OR Status='Inactive');
</entry>

<entry key="update-operator-terminalid-guest">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      TerminalId = ?,
      UpdDate = GETDATE(),
      Status='Active'
    OUTPUT
      INSERTED.OperatorType
    WHERE
      OperatorNo = ? AND (Status='Active' OR Status='Inactive');
</entry>

<entry key="credential-first-log-in">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      PassCode = ?,
      TerminalId = ?,
      UpdDate = GETDATE(),
      Status = 'Active'
    WHERE
      OperatorNo = ? and (Status='Active' OR Status='Inactive');
</entry>

<entry key="sign-off-operator">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      TerminalId = null,
      UpdDate = GETDATE(),
      Status = ?
    WHERE
      OperatorNo = ?
</entry>

<entry key="select-operators-byStoreId">
    SELECT  OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId = ? AND (Status='Active' OR Status='Inactive')
    ORDER BY OperatorNo ASC
</entry>

<entry key="select-all-operators">
    DECLARE
      @storeid varchar(max),
      @operatorno varchar(max),
      @operatorname varchar(max),
      @limit int

    SET @storeid=?
    SET @operatorno=?
    SET @operatorname=?
    SET @limit=?
    SET @limit = (CASE
           WHEN(@limit > -1)
             THEN @limit
             ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_USER_CREDENTIALS)
           END)

    SELECT TOP(@limit)
      CompanyId,
        OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId,
            StoreId,
            Status,
            PassCode
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      (Status='Active' OR Status='Inactive')
      AND (@storeid IS NULL OR len(@storeid) = 0 OR StoreId = @storeid)
      AND (@operatorno IS NULL OR len(@operatorno) = 0 OR (OperatorNo like @operatorno {ESCAPE '\'} ))
      AND (@operatorname IS NULL OR len(@operatorname) = 0 OR (LOWER(OperatorName) like LOWER(@operatorname)  {ESCAPE '\'} ) )
    ORDER BY
      CASE
        WHEN len(@operatorname) > 0 then OperatorName
        ELSE OperatorNo
      END
</entry>

<entry key="select-operators-byStoreId-operatorNo-prefix">
    SELECT  OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId = ? AND OperatorNo LIKE ? AND (Status='Active' OR Status='Inactive')
    ORDER BY OperatorNo ASC
</entry>

<entry key="select-operators-byStoreId-operatorName-partial">
    SELECT  OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId = ? AND UPPER(OperatorName) LIKE UPPER(?) AND (Status='Active' OR Status='Inactive')
    ORDER BY OperatorName ASC
</entry>

<entry key="create-update-pos-opecode">
        DECLARE
          @companyid varchar(max),
          @storeid varchar(max),
          @terminalno varchar(max),
          @opecode varchar(max)

        SET @companyid=?
        SET @storeid=?
        SET @terminalno=?
        SET @opecode=?

        IF EXISTS (SELECT * FROM RESTransaction.dbo.TXU_POS_CTRL WHERE CompanyId=@companyid AND StoreId=@storeid AND TerminalNo=@terminalno)
            UPDATE
                RESTransaction.dbo.TXU_POS_CTRL
            SET
                OpeCode=@opecode
            WHERE
              CompanyId=@companyid AND
                StoreId=@storeid AND
                TerminalNo=@terminalno
        ELSE
            INSERT INTO RESTransaction.dbo.TXU_POS_CTRL
                (
                  CompanyId,
                    StoreId,
                    TerminalNo,
                    OpeCode
                )
            VALUES
                (@companyid,@storeid,@terminalno,@opecode)
</entry>

<entry key="create-update-pos-sod-state">
        DECLARE
          @companyid varchar(max),
          @storeid varchar(max),
          @terminalno varchar(max),
          @openclosestat tinyint,
          @sodtime datetime,
          @sodtranno char(4),
          @eodtime datetime,
          @eodtranno char(4)

        SET @companyid=?
        SET @storeid=?
        SET @terminalno=?
        SET @openclosestat=?
        SET @sodtime=?
        SET @sodtranno=?
        SET @eodtime=null
        SET @eodtranno=null

        IF EXISTS (SELECT * FROM RESTransaction.dbo.TXU_POS_CTRL WHERE CompanyId=@companyid AND StoreId=@storeid AND TerminalNo=@terminalno)
          UPDATE
            RESTransaction.dbo.TXU_POS_CTRL
          SET
            OpenCloseStat = @openclosestat,
            SodTime = @sodtime,
            SodTranNo = @sodtranno,
            EodTime = @eodtime,
            EodTranNo = @eodtranno
          WHERE
            CompanyId=@companyid AND
            StoreId=@storeid AND
            TerminalNo=@terminalno
        ELSE
          INSERT INTO RESTransaction.dbo.TXU_POS_CTRL (
            CompanyId,
            StoreId,
            TerminalNo,
            OpenCloseStat,
            SodTime,
            SodTranNo,
            EodTime,
            EodTranNo )
          VALUES (
            @companyid,
            @storeid,
            @terminalno,
            @openclosestat,
            @sodtime,
            @sodtranno,
            @eodtime,
            @eodtranno )
</entry>

<entry key="create-update-pos-eod-state">
        DECLARE
        @companyid varchar(max),
        @storeid varchar(max),
        @terminalno varchar(max),
        @openclosestat tinyint,
        @eodtime datetime,
        @eodtranno char(4)

        SET @companyid=?
        SET @storeid=?
        SET @terminalno=?
        SET @openclosestat=?
        SET @eodtime=?
        SET @eodtranno=?

        IF EXISTS (SELECT * FROM RESTransaction.dbo.TXU_POS_CTRL WHERE CompanyId=@companyid AND StoreId=@storeid AND TerminalNo=@terminalno)
            UPDATE
                RESTransaction.dbo.TXU_POS_CTRL
            SET
                OpenCloseStat = @openclosestat,
                EodTime = @eodtime,
                EodTranNo = @eodtranno
            WHERE
                CompanyId=@companyid AND
                StoreId=@storeid AND
                TerminalNo=@terminalno
        ELSE
            INSERT INTO RESTransaction.dbo.TXU_POS_CTRL (
                CompanyId,
                StoreId,
                TerminalNo,
                OpenCloseStat,
                EodTime,
                EodTranNo )
            VALUES (
                @companyid,
                @storeid,
                @terminalno,
                @openclosestat,
                @eodtime,
                @eodtranno )
</entry>

<!-- *************************  ENTRY KEY FOR SYSTEM CONFIGURATION   ************************* -->
<entry key="get-system-parameters">
      SELECT
        Category,
        KeyId,
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG;
</entry>

<entry key="get-system-parameter-value">
      SELECT
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      WHERE
        Category = ? AND KeyId = ?;
</entry>

<entry key="get-system-parameter-information">
      SELECT
        KeyId,
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      WHERE
        Category = ?;
</entry>

<entry key="set-system-parameter-validate-value">
      UPDATE
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      SET
        Value = ?
      WHERE
        Category = ? AND KeyId = ? AND Value = ?;
</entry>

<entry key="get-system-parameter-validate-value">
      SELECT
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      WHERE
        Category = ? AND KeyId = ? AND Value = ?;
</entry>

<entry key="set-system-parameter-value">
      UPDATE
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      SET
        Value = ?
      WHERE
        Category = ? AND KeyId = ?;
</entry>

<entry key="set-system-parameter-value-by-key">
            UPDATE
                RESMaster.dbo.PRM_SYSTEM_CONFIG
            SET
                Value = ?
            WHERE
                KeyId = ?;
</entry>

<entry key="add-system-parameter-value">
  INSERT INTO RESMaster.dbo.PRM_SYSTEM_CONFIG
           (Value
           ,Category
           ,KeyId
           ,Description)
     VALUES
           (? ,? ,?, ?);
</entry>

<!-- *************************  ENTRY KEY FOR REPORTS ************************* -->

<entry key="select-detailreport">
  SELECT
    RIGHT(REPLICATE('0',2)+CAST(act.timezonecode AS VARCHAR(2)),2) as timezonecode,
    SUM(guest.SalesGuestCnt) as SalesGuestCnt, SUM(act.SalesItemCnt) as SalesItemcnt, SUM(act.SalesSalesAmt) as SalesSalesAmt
    FROM RESTransaction.dbo.TXU_TOTAL_ACNTDAY act LEFT JOIN RESTransaction.dbo.TXU_TOTAL_GUESTDPTDAY guest
    ON guest.summarydateid = act.summarydateid AND guest.storeid = act.storeid AND
      guest.dpt = act.dpt AND guest.timezonecode = act.timezonecode AND
      guest.Operatorcode = act.Operatorcode AND guest.terminalid = act.terminalid
    WHERE act.summarydateid = ? AND act.storeid = ?
      AND act.dpt = ?
      AND (act.timezonecode &gt;= ? AND act.timezonecode &lt;= ?)
      /*1 AND act.Operatorcode = ? 1*/
    group by
      act.timezonecode
    order by
      act.timezonecode
</entry>

<!-- *************************  ENTRY KEY FOR EXTERNAL CA REQUEST ************************* -->

<entry key="get-forwardCount">
    SELECT
      COUNT(*) as count
    FROM
      RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE
      RetailStoreId = ? AND
      PosTermId = ? AND
      BusinessDayDate = ? AND
      Status = 0;
</entry>

<entry key="get-forward-item-count">
    DECLARE
        @companyid varchar(max),
        @storeid varchar(max),
        @businessdaydate varchar(max),
        @terminalid varchar(max),
        @queue varchar(max),
        @trainingflag varchar(max)
    SET @companyid = ?
    SET @storeid = ?
    SET @businessdaydate = ?
    SET @terminalid = ?
    SET @queue = ?
    SET @trainingflag = ?

    SELECT
      COUNT(1) as count
    FROM
      RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE
      CompanyId = LTRIM(RTRIM(@companyid)) AND
      RetailStoreId = LTRIM(RTRIM(@storeid)) AND
      BusinessDayDate = LTRIM(RTRIM(@businessdaydate)) AND
      TrainingFlag = LTRIM(RTRIM(@trainingflag)) AND
      (@terminalid = '' OR WorkstationId = LTRIM(RTRIM(@terminalid))) AND
      (@queue = '' OR Queue = LTRIM(RTRIM(@queue))) AND
      Status = 0;
</entry>

<entry key="delete-forward-item">
    DELETE FROM
      RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE
      CompanyId = LTRIM(RTRIM(?)) AND
      RetailStoreId = LTRIM(RTRIM(?)) AND
      BusinessDayDate = LTRIM(RTRIM(?))
</entry>

<entry key="get-forwardData">
    SELECT
      TOP 1 *
    FROM
      RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE
      RetailStoreId = ? AND
      PosTermId = ? AND
      BusinessDayDate = ? AND
      Status = 0
    ORDER BY
      SequenceNumber ASC;
</entry>

<entry key="set-forwardStatus">
    UPDATE
      RESTransaction.dbo.TXL_FORWARD_ITEM
    SET
      Status = ?
    WHERE
      RetailStoreId = ? AND
      PosTermId = ? AND
      BusinessDayDate = ? AND
      SequenceNumber = ? AND
      Status = 0;
</entry>

<entry key="save-itemForwardData">
    INSERT INTO RESTransaction.dbo.TXL_FORWARD_ITEM
    (RetailStoreId
    ,WorkstationId
    ,SequenceNumber
    ,Queue
    ,BusinessDayDate
    ,PosTermId
    ,Status
    ,Tx)
    VALUES
    (?, ?, ?, 0,?, ?, 0, ?); /** Init Queue=0 just for testing. **/
</entry>

<!--For Peripheral Control -->
<entry key="delete-deviceinfo">
    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      Status='Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
      StoreId=? AND TerminalId=? AND DeleteFlag = 0.0
</entry>

<entry key="get-attribute-info">
  SELECT
    attribute.AttributeId,
    attribute.Printer,
        attribute.Till,
        attribute.CreditTerminal,
        attribute.MSR,
        attribute.CashChanger,
        attribute.Attribute1,
        attribute.Attribute2,
        attribute.Attribute3,
        attribute.Attribute4,
        attribute.Attribute5,
        attribute.Attribute6,
        attribute.Attribute7,
        attribute.Attribute8,
        attribute.Attribute9,
        attribute.Attribute10,
        attribute.Attribute11,
        attribute.Attribute12,
        attribute.Attribute13,
        attribute.Attribute14,
        attribute.Attribute15,
        attribute.Attribute16,
        attribute.Attribute17,
        attribute.Attribute18,
        attribute.Attribute19,
        attribute.Attribute20,
        attribute.Attribute21,
        attribute.Attribute22,
        attribute.Attribute23,
        attribute.Attribute24,
        attribute.Attribute25,
        attribute.Attribute26,
        attribute.Attribute27,
        attribute.Attribute28,
        attribute.Attribute29,
        attribute.Attribute30,
        deviceinfo.Training
  FROM      RESMaster.dbo.PRM_DEVICE_ATTRIBUTE attribute
  INNER JOIN  RESMaster.dbo.MST_DEVICEINFO deviceinfo
  ON      attribute.AttributeId = deviceinfo.AttributeId
  WHERE   deviceinfo.StoreId = LTRIM(RTRIM(?))
          AND deviceinfo.TerminalId = LTRIM(RTRIM(?))
          AND deviceinfo.CompanyId = LTRIM(RTRIM(?))
          AND deviceinfo.Training = ?
          AND deviceinfo.DeleteFlag = 0.0
</entry>

<entry key="get-device-attribute-info">
  SELECT
    deviceinfo.CompanyId,
    deviceinfo.StoreId,
    deviceinfo.TerminalId,
    deviceinfo.Training,
    ISNULL(deviceinfo.DeviceName, '') AS DeviceName,
    ISNULL(deviceinfo.AttributeId, '') AS AttributeId,
    ISNULL(deviceinfo.PrinterId, '') AS PrinterId,
    ISNULL(deviceinfo.TillId, '') AS TillId,
    ISNULL(deviceinfo.LinkQueueBuster, '') AS LinkQueueBuster,
    ISNULL(printinfo.Description, '') AS PrintDes,
    ISNULL(tillidinfo.TillId, '') DrawerId,
    ISNULL(queuebustr_link.DisplayName, '') AS DisplayName,
    ISNULL(device_attribute.Description, '') AS AttributeDes
  FROM      RESMaster.dbo.MST_DEVICEINFO deviceinfo
    LEFT JOIN RESMaster.dbo.MST_PRINTERINFO printinfo
        ON  deviceinfo.CompanyId = printinfo.CompanyId AND
            deviceinfo.StoreId = printinfo.StoreId AND
            deviceinfo.PrinterId = printinfo.PrinterId AND
            printinfo.DeleteFlag = 0.0
    LEFT JOIN RESMaster.dbo.MST_TILLIDINFO tillidinfo
        ON  deviceinfo.CompanyId = tillidinfo.CompanyId AND
            deviceinfo.StoreId = tillidinfo.StoreId AND
            deviceinfo.TillId = tillidinfo.TillId AND tillidinfo.DeleteFlag=0
    LEFT JOIN RESMaster.dbo.PRM_QUEUEBUSTER_LINK queuebustr_link
        ON  deviceinfo.StoreId = queuebustr_link.StoreId AND
          deviceinfo.LinkQueueBuster = queuebustr_link.Id
    LEFT JOIN RESMaster.dbo.PRM_DEVICE_ATTRIBUTE device_attribute
        ON  deviceinfo.AttributeId = device_attribute.AttributeId
  WHERE deviceinfo.CompanyId = LTRIM(RTRIM(?)) AND deviceinfo.StoreId = LTRIM(RTRIM(?)) AND deviceinfo.TerminalId = LTRIM(RTRIM(?))
    AND deviceinfo.DeleteFlag = 0.0
</entry>

<entry key="get-peripheraldeviceinfo">
    SELECT
      devinfo.CompanyId,
      devinfo.StoreId,
      devinfo.TerminalId,
      devinfo.Training,
      COALESCE(devinfo.DeviceName, '') as DevName,
      COALESCE(devinfo.TillId, '') as TId,
      devinfo.SendLogFile,
      devinfo.SaveLogFile,
      devinfo.AutoUpload,
      devinfo.LinkQueueBuster,
      devinfo.LinkAuthorization,
      devinfo.LinkSignature,
      devinfo.PrinterId DevPrinterId,
      printinfo.PrinterId,
      devinfo.LinkPosTerminalId,
      syscon.Value PricingType,
      devinfo.LastTxId,
      devinfo.LastSuspendTxId,
      devinfo.Status,
      printinfo.PrinterName,
      printinfo.Description,
      printinfo.Status,
      printinfo.IpAddress,
      printinfo.PortNumUdp,
      printinfo.PortNumTcp,
      devinfo.AttributeId
    FROM
      RESMaster.dbo.MST_DEVICEINFO devinfo
    LEFT JOIN
      RESMaster.dbo.MST_PRINTERINFO printinfo
    ON
      devinfo.CompanyId = printinfo.CompanyId AND
      devinfo.StoreId = printinfo.StoreId AND
      devinfo.PrinterId = printinfo.PrinterId AND
      printinfo.DeleteFlag = 0.0
    LEFT JOIN
      RESMaster.dbo.PRM_SYSTEM_CONFIG syscon
    ON
      syscon.KeyId = 'PricingType'
    WHERE
      devinfo.CompanyId = ? AND
      devinfo.StoreId = ? AND
      devinfo.TerminalId = ? AND
      devinfo.Training = ? AND
      devinfo.DeleteFlag = 0.0
</entry>

<entry key="update-last-txid">
    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      LastTxId = ?
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active' AND
      DeleteFlag = 0.0
</entry>

<entry key="get-last-txid-server">
    DECLARE
    @companyid varchar(12),
    @storeid varchar(6),
    @workstationid varchar(6),
    @businessdaydate date,
    @trainingmode numeric(1,0)

    SET @companyid = ?
    SET @storeid = ?
    SET @workstationid = ?
    SET @businessdaydate = ?
    SET @trainingmode = ?

    SELECT TOP 1
     SequenceNumber
    FROM RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE CompanyId = @companyid
      AND RetailStoreId = @storeid
      AND WorkstationId = @workstationid
      AND BusinessDayDate = CASE WHEN @businessdaydate IS NULL THEN BusinessDayDate ELSE @businessdaydate END
      AND TrainingFlag = @trainingmode
    ORDER BY JournalLine DESC
</entry>

<entry key="update-last-suspendtxid">
    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      LastSuspendTxId = ?
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active' AND
      DeleteFlag = 0.0
</entry>

<entry key="update-deviceinfo">
    DECLARE
      @CompanyId varchar(12),
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @PrinterId varchar(MAX),
      @TillId varchar(MAX),
      @LinkPosTerminalId varchar(MAX),
      @LinkQueueBuster varchar(MAX),
      @LinkAuthorization varchar(MAX),
      @LinkSignature varchar(MAX),
      @SendLogFile int,
      @SaveLogFile int,
      @AutoUpload int,
      @LastTxId numeric(5, 0),
      @LastSuspendTxId numeric(5, 0),
      @EjSequence numeric(5, 0),
      @DeviceName varchar(MAX),
      @UpdAppId varchar(MAX),
      @UpdOpeCode varchar(MAX)

      SET @CompanyId = ?
      SET @StoreId = ?
      SET @TerminalId = ?
      SET @PrinterId = ?
      SET @TillId = ?
      SET @LinkPosTerminalId = ?
      SET @SendLogFile = ?
      SET @SaveLogFile = ?
      SET @AutoUpload = ?
      SET @LinkQueueBuster = ?
      SET @LinkAuthorization = ?
      SET @LinkSignature = ?
      SET @LastTxId = ?
      SET @LastSuspendTxId = ?
      SET @EjSequence = ?
      SET @DeviceName = ?
      SET @UpdAppId = ?
      SET @UpdOpeCode = ?

    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      CompanyId =
        CASE
          WHEN len(@CompanyId) > 0
          THEN @CompanyId
          ELSE CompanyId
        END,
      StoreId =
        CASE
          WHEN len(@StoreId) > 0
          THEN @StoreId
          ELSE StoreId
        END,
      TerminalId =
        CASE
          WHEN len(@TerminalId) > 0
          THEN @TerminalId
          ELSE TerminalId
        END,
      DeviceName =
        CASE
          WHEN @DeviceName IS NULL
          THEN COALESCE(DeviceName, '')
          ELSE @DeviceName
        END,
      LinkQueueBuster =
        CASE
          WHEN @LinkQueueBuster IS NULL
          THEN LinkQueueBuster
          ELSE @LinkQueueBuster
        END,
      LinkAuthorization =
        CASE
          WHEN @LinkAuthorization IS NULL
          THEN LinkAuthorization
          ELSE @LinkAuthorization
        END,
      LinkSignature =
        CASE
          WHEN @LinkSignature IS NULL
          THEN LinkSignature
          ELSE @LinkSignature
        END,
      PrinterId =
        CASE
          WHEN @PrinterId = 0 OR @PrinterId = -1
          THEN @PrinterId
          WHEN EXISTS(
            SELECT *
            FROM RESMaster.dbo.MST_PRINTERINFO AS a
            WHERE
              a.PrinterId = @PrinterId AND
              a.Status = 'Active' AND
              a.StoreId =
                CASE
                  WHEN LEN(@StoreId) > 0
                  THEN @StoreId
                  ELSE RESMaster.dbo.MST_DEVICEINFO.StoreId
                END AND
              a.DeleteFlag = 0.0
          )
          THEN @PrinterId
          WHEN @PrinterId IS NULL AND EXISTS(
            SELECT *
            FROM RESMaster.dbo.MST_PRINTERINFO AS a
            WHERE a.PrinterId = RESMaster.dbo.MST_DEVICEINFO.PrinterId AND
            a.Status = 'Active' AND
            a.StoreId =
              CASE
                WHEN LEN(@StoreId) > 0
                THEN @StoreId
                ELSE RESMaster.dbo.MST_DEVICEINFO.StoreId
              END AND
            a.DeleteFlag = 0.0
          )
          THEN PrinterId
          ELSE NULL
        END,
      TillId =
        CASE
          WHEN @TillId IS NULL
          THEN COALESCE(TillId, '')
          ELSE @TillId
        END,
      LinkPosTerminalId =
        CASE
          WHEN @LinkPosTerminalId IS NULL
          THEN LinkPosTerminalId
          ELSE @LinkPosTerminalId
        END,
      SendLogFile =
        CASE
          WHEN @SendLogFile IS NULL
          THEN SendLogFile
          WHEN @SendLogFile > 0
          THEN @SendLogFile
          ELSE 3
        END,
      SaveLogFile =
        CASE
          WHEN @SaveLogFile IS NULL
          THEN SaveLogFile
          WHEN @SaveLogFile > 0
          THEN @SaveLogFile
          ELSE 40
        END,
      AutoUpload =
        CASE
          WHEN @AutoUpload IS NULL
          THEN AutoUpload
          WHEN @AutoUpload > 0
          THEN 1
          ELSE 0
        END,
      LastTxId =
        CASE
          WHEN @LastTxId IS NULL
          THEN LastTxId
          ELSE @LastTxId
          END,
      LastSuspendTxId =
        CASE
          WHEN @LastSuspendTxId IS NULL
          THEN LastSuspendTxId
          ELSE @LastSuspendTxId
        END,
      EjSequence =
        CASE
          WHEN @EjSequence IS NULL
          THEN EjSequence
          ELSE @EjSequence
        END,
      UpdAppId = @UpdAppId,
      UpdOpeCode = @UpdOpeCode,
      UpdDate = GETDATE()
    OUTPUT
      INSERTED.CompanyId,
      INSERTED.StoreId,
      INSERTED.TerminalId,
      INSERTED.DeviceName,
      INSERTED.PrinterId,
      INSERTED.TillId,
      INSERTED.LinkPosTerminalId,
      INSERTED.SendLogFile,
      INSERTED.SaveLogFile,
      INSERTED.AutoUpload,
      INSERTED.LinkQueueBuster,
      INSERTED.LinkAuthorization,
      INSERTED.LinkSignature,
      INSERTED.LastTxId,
      INSERTED.EjSequence,
      INSERTED.LastSuspendTxId,
      INSERTED.Training
    WHERE
      CompanyId = ? AND
      StoreId = ? AND
      TerminalId = ? AND
      Training = ? AND
      Status = 'Active' AND
      DeleteFlag = 0.0
</entry>

<entry key="get-printerinfo">
    SELECT * from RESMaster.dbo.MST_PRINTERINFO
    WHERE StoreId like ? AND
    PrinterId = ? AND
    Status = 'Active' AND
    DeleteFlag = 0.0;
</entry>

<entry key="get-storeInfo">
     SELECT StoreId
          , StoreName
          , StoreAddr
          , StoreType
          , StoreTel
          , StoreUrl
          , SalesSpaceName
          , EventName
          , Ads
     FROM RESMaster.dbo.MST_STOREINFO
     WHERE StoreId = ? AND DeleteFlag = 0.0;
</entry>

<entry key="get-store-bystoreIdandcomnpanyId">
     SELECT StoreId
          , StoreName
          , StoreAddr
          , StoreType
          , StoreTel
          , StoreUrl
          , SalesSpaceName
          , EventName
          , Ads
     FROM RESMaster.dbo.MST_STOREINFO
     WHERE StoreId = ?
     AND CompanyId = ?
     AND Status = 'Active'
     AND DeleteFlag = 0.0
</entry>

<entry key="create-peripheraldeviceinfo">
    DECLARE
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @DeviceName varchar(MAX),
      @PrinterId varchar(MAX),
      @TillId varchar(MAX),
      @LinkPosTerminalId varchar(MAX),
      @SendLogFile int,
      @SaveLogFile int,
      @AutoUpload int,
      @LinkQueueBuster varchar(MAX),
      @LinkAuthorization varchar(MAX),
      @LinkSignature varchar(20),
      @LastTxId numeric(5, 0),
      @LastSuspendTxId numeric(5, 0),
      @EjSequence numeric(5, 0),
      @UpdAppId varchar(MAX),
      @UpdOpeCode varchar(MAX),
      @CompanyId varchar(MAX),
      @Training int,
      @InsAppId varchar(MAX),
      @InsOpeCode varchar(MAX),
      @AttributeId varchar(MAX)

      SET @StoreId = ?
      SET @TerminalId = ?
      SET @PrinterId = ?
      SET @TillId = ?
      SET @LinkPosTerminalId = ?
      SET @SendLogFile = ?
      SET @SaveLogFile = ?
      SET @AutoUpload = ?
      SET @LinkQueueBuster = ?
      SET @LinkAuthorization = ?
      SET @LinkSignature = ?
      SET @LastTxId = ?
      SET @LastSuspendTxId = ?
      SET @EjSequence = ?
      SET @DeviceName = ?
      SET @UpdAppId = ?
      SET @UpdOpeCode = ?
      SET @CompanyId = ?
      SET @Training = ?
      SET @InsAppId = ?
      SET @InsOpeCode = ?
      SET @AttributeId = ?

    INSERT INTO
      RESMaster.dbo.MST_DEVICEINFO(
        StoreId
        ,TerminalId
        ,PrinterId
        ,TillId
        ,LinkPosTerminalId
        ,SendLogFile
        ,SaveLogFile
        ,AutoUpload
        ,LinkQueueBuster
        ,LinkAuthorization
        ,LinkSignature
        ,LastTxId
        ,LastSuspendTxId
        ,EjSequence
        ,DeviceName
        ,Status
        ,UpdDate
        ,UpdAppId
        ,UpdOpeCode
        ,CompanyId
        ,Training
        ,UpdCount
        ,InsDate
        ,InsAppId
        ,InsOpeCode
        ,DeleteFlag
        ,AttributeId
        ,SubNum1
      )
    VALUES(
      @StoreId,
      @TerminalId,
      @PrinterId,
      @TillId,
      CASE
        WHEN len(@LinkPosTerminalId) > 0
        THEN @LinkPosTerminalId
        ELSE null
      END,
      CASE
        WHEN @SendLogFile > 0
        THEN @SendLogFile
        ELSE 3
      END,
      CASE
        WHEN @SaveLogFile > 0
        THEN @SaveLogFile
        ELSE 40
      END,
      CASE
        WHEN @AutoUpload > 0
        THEN 1
        ELSE 0
      END,
      CASE
        WHEN len(@LinkQueueBuster) > 0
        THEN @LinkQueueBuster
        ELSE null
      END,
      CASE
        WHEN len(@LinkAuthorization) > 0
        THEN @LinkAuthorization
        ELSE null
      END,
      CASE
        WHEN len(@LinkSignature) > 0
        THEN @LinkSignature
        ELSE null
      END,
      CASE
        WHEN len(@LastTxId) > 0
        THEN @LastTxId
        ELSE null
      END,
      CASE
        WHEN len(@LastSuspendTxId) > 0
        THEN @LastSuspendTxId
        ELSE null
      END,
      CASE
        WHEN len(@EjSequence) > 0
        THEN @EjSequence
        ELSE null
      END,
      CASE
        WHEN len(@DeviceName) > 0
        THEN @DeviceName
        ELSE ''
      END,
      'Active',
      GETDATE(),
      @UpdAppId,
      @UpdOpeCode,
      @CompanyId,
      @Training,
      0,
      GETDATE(),
      @InsAppId,
      @InsOpeCode,
      0,
      @AttributeId,
      1);
</entry>

<!-- *************************  ENTRY KEY FOR DEVICE REGISTRATION  ************************* -->

<entry key="delete-autdevices">
    DELETE FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    TerminalId=?
</entry>

<entry key="save-device">
    DECLARE
    @CompanyId varchar(12),
    @StoreId varchar(10),
    @TerminalId varchar(6),
    @Uuid varchar(50),
    @Udid varchar(50),
    @SignStatus int,
    @SignTId char(20),
    @SignActivationKey char(8)

  SET @CompanyId = ?
  SET @StoreId = ?
  SET @TerminalId = ?
  SET @Uuid = ?
  SET @Udid = ?
  SET @SignStatus = ?
  SET @SignTId = ?
  SET @SignActivationKey = ?
  INSERT INTO RESMaster.dbo.AUT_DEVICES
    (CompanyId, StoreId, TerminalId, Uuid, Udid, State, LastActiveTime, SignStatus, SignTid, SignActivationKey)
  VALUES
    (@CompanyId, @StoreId, @TerminalId, @Uuid, @Udid, 1, GETDATE(), @SignStatus, @SignTId, @SignActivationKey)
</entry>

<entry key="delete-device">
    DELETE FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
      StoreId=? AND TerminalId=?
</entry>

<entry key="delete-device-with-udid">
    DELETE FROM RESMaster.dbo.AUT_DEVICES
      WHERE Udid=?
  </entry>
  <entry key="select-device-by-storeId-terminalId">
    SELECT
      *
    FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
      StoreId = ? AND
      TerminalId = ?;
</entry>

<entry key="update-device-state">
    DECLARE
      @State int,
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @LastActiveTime datetime

    SET @State = ?
    SET @StoreId = ?
    SET @TerminalId = ?
    SET @LastActiveTime = ?

    if(@State = 1)
      UPDATE
        RESMaster.dbo.AUT_DEVICES
      SET
        State = @State,
        LastActiveTime = @LastActiveTime
      WHERE
        StoreId = @StoreId AND
        TerminalId = @TerminalId
    else
      UPDATE
        RESMaster.dbo.AUT_DEVICES
      SET
        State = @State
      WHERE
        StoreId = @StoreId AND
        TerminalId = @TerminalId
</entry>

<entry key="update-device-state-by-terminalid">
    DECLARE @State int, @StoreId
    varchar(MAX), @TerminalId varchar(MAX),
        @LastActiveTime datetime
    SET @State=?
    SET @TerminalId=?
    SET @LastActiveTime=?

    if(@state = 1)
      UPDATE RESMaster.dbo.AUT_DEVICES SET State=@State , LastActiveTime= @LastActiveTime
    WHERE TerminalId=@TerminalId
    else
    UPDATE RESMaster.dbo.AUT_DEVICES SET State=@State WHERE TerminalId=@TerminalId
</entry>

<entry key="select-device-by-terminalid">
    SELECT * FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    TerminalId=?
</entry>

<entry key="select-device-strict">
    SELECT *
      FROM
        RESMaster.dbo.AUT_DEVICES
      WHERE
    CompanyId=? AND StoreId=? AND TerminalId=?
</entry>

<entry key="select-device-by-uuid-udid">
      SELECT *
      FROM RESMaster.dbo.AUT_DEVICES
      WHERE Uuid = ?
      AND   Udid = ?
</entry>

<entry key="update-device-uuidtoken">
    UPDATE
      RESMaster.dbo.AUT_DEVICES
    SET
      Uuid=? , DeviceName=?
    WHERE
    StoreId=? AND TerminalId=?
</entry>

<entry key="select-device-terminalid">
    SELECT TerminalId
      FROM
        RESMaster.dbo.AUT_DEVICES
      WHERE
    TerminalId=?
</entry>

<entry key="select-passcode-url-by-corpid">
    SELECT
      PassCode,
      Url
    FROM
      RESMaster.dbo.MST_CORP_URL
    WHERE
      CorpId=?
</entry>

<entry key="select-passcode-permission-from-corp-store">
    SELECT
      store.PassCode,
      store.Permission,
      store.StoreName,
      store.CompanyId,
      company.CompanyName
    FROM
      RESMaster.dbo.MST_CORP_STORE store
    LEFT JOIN
      RESMaster.dbo.MST_COMPANYINFO company
    ON
      store.CompanyId = company.CompanyId
      AND company.DeleteFlag = 0.0
    WHERE
      store.StoreId = ? AND store.CompanyId = ?
</entry>

<entry key="select-url-by-corpid">
    SELECT
      Url
    FROM
      RESMaster.dbo.MST_CORP_URL
    WHERE
      CorpId=?
</entry>

<entry key="select-corpname-by-corpid">
    SELECT
      CorpName
    FROM
      RESMaster.dbo.MST_CORPINFO
    WHERE
      CorpId=?
</entry>

<entry key="select-storename-by-corpid-storeid">
    SELECT
      StoreName
    FROM
      RESMaster.dbo.MST_CORP_STORE
    WHERE
    StoreId=?
</entry>

<entry key="get-signdetails">
    SELECT
      SignStatus,
      SignTid,
      SignActivationKey
    FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    CompanyId=? AND StoreId=? AND TerminalId=? AND Udid=? AND Uuid=?
</entry>

<!-- Entry key for QueueBuster implementation -->
<entry key="save-transaction-to-queue">
    DECLARE
      @CompanyId varchar(12),
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @SequenceNumber varchar(MAX),
      @BusinessDayDate varchar(MAX),
      @TrainingFlag varchar(MAX),
      @Queue varchar(MAX),
      @Xml varchar(MAX)

  SET @CompanyId = ?
    SET @StoreId = ?
    SET @TerminalId = ?
    SET @SequenceNumber = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @Queue = ?
    SET @Xml = ?

        INSERT INTO RESTransaction.dbo.TXL_INPROGRESS_ITEM
           (CompanyId
           ,RetailStoreId
           ,WorkstationId
           ,SequenceNumber
           ,BusinessDayDate
           ,TrainingFlag
           ,PosTermId
           ,Queue
           ,Status
           ,Tx)
         VALUES
           (@CompanyId
           ,@StoreId
           ,@TerminalId
           ,@SequenceNumber
           ,@BusinessDayDate
           ,@TrainingFlag
           ,null
           ,@Queue
           ,0
           ,@Xml)
</entry>

<entry key="save-forward-poslog">
    DECLARE
      @CompanyId varchar(12),
      @RetailStoreId varchar(MAX),
      @WorkstationId varchar(MAX),
      @SequenceNumber varchar(MAX),
      @Queue varchar(MAX),
      @BusinessDayDate varchar(MAX),
      @TrainingFlag NUMERIC(1,0),
      @BusinessDateTime varchar(MAX),
      @OperatorId varchar(MAX),
      @SalesTotalAmt NUMERIC(15,0),
      @SalesTotalQty NUMERIC(15,0),
      @PosTermId varchar(MAX),
      @Status varchar(MAX),
      @Tx varchar(MAX),
      @LayawayFlag NUMERIC(1,0),
      @TxType varchar(50)

    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @WorkstationId = ?
    SET @SequenceNumber = ?
    SET @Queue = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @BusinessDateTime = ?
    SET @OperatorId = ?
    SET @SalesTotalAmt = ?
    SET @PosTermId = ?
    SET @Status = ?
    SET @Tx = ?
    SET @LayawayFlag = ?
    SET @TxType = ?
    SET @SalesTotalQty = ?
        INSERT INTO RESTransaction.dbo.TXL_FORWARD_ITEM
           (CompanyId
           ,RetailStoreId
           ,WorkstationId
           ,SequenceNumber
           ,Queue
           ,BusinessDayDate
           ,TrainingFlag
           ,BusinessDateTime
           ,OperatorId
           ,SalesTotalAmt
           ,SalesTotalQty
           ,PosTermId
           ,Status
           ,Tx
           ,LayawayFlag
           ,TxType)
         VALUES
           (@CompanyId
           ,@RetailStoreId
           ,@WorkstationId
           ,@SequenceNumber
           ,@Queue
           ,@BusinessDayDate
           ,@TrainingFlag
           ,@BusinessDateTime
           ,@OperatorId
           ,@SalesTotalAmt
           ,@SalesTotalQty
           ,@PosTermId
           ,@Status
           ,@Tx
           ,@LayawayFlag
           ,@TxType)
</entry>

<entry key="get-forward-list">
    DECLARE
        @CompanyId VARCHAR (12),
        @RetailStoreId VARCHAR (MAX),
        @TrainingFlag VARCHAR (MAX),
        @LayawayFlag VARCHAR (MAX),
        @Queue VARCHAR (MAX),
        @TxType VARCHAR (50),
        @BusinessDayDate VARCHAR (MAX)
    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @TrainingFlag = ?
    SET @LayawayFlag = ?
    SET @Queue = ?
    SET @TxType = ?
    SET @BusinessDayDate = ?
    SELECT
        A.CompanyId,
        A.RetailStoreId,
        A.WorkstationId,
        A.SequenceNumber,
        A.Queue,
        A.BusinessDayDate,
        A.TrainingFlag,
        A.BusinessDateTime,
        A.OperatorId,
        ISNULL(B.OpeName, B.OpeKanaName) AS OperatorName,
        A.SalesTotalAmt,
        A.SalesTotalQty,
        A.Status,
        A.Ext1
    FROM
        RESTransaction.dbo.TXL_FORWARD_ITEM A
    LEFT JOIN RESMaster.dbo.MST_EMPINFO B ON A.CompanyId = B.CompanyId
    AND A.OperatorId = B.EmpCode
    WHERE
        A.CompanyId = @CompanyId
    AND A.RetailStoreId = @RetailStoreId
    AND A.Queue = @Queue
    AND A.TrainingFlag = @TrainingFlag
    AND A.Status = 0
    AND A.LayawayFlag = @LayawayFlag
    AND A.TxType = ISNULL(@Txtype,A.TxType)
    AND A.BusinessDayDate = @BusinessDayDate
    ORDER BY A.BusinessDayDate DESC, A.BusinessDateTime DESC
</entry>

<entry key="get-forward-items-posLog">
    DECLARE
      @CompanyId varchar(12),
      @RetailStoreId varchar(MAX),
      @SequenceNumber VARCHAR(MAX),
      @Queue VARCHAR(MAX),
      @BusinessDayDate VARCHAR(MAX),
      @TrainingFlag varchar(MAX),
      @WorkstationId varchar(MAX)

    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @SequenceNumber = ?
    SET @Queue = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @WorkstationId = ?

    SELECT
      Status,
      Tx
    FROM RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE CompanyId = @CompanyId
      AND RetailStoreId = @RetailStoreId
      AND SequenceNumber = @SequenceNumber
      AND Queue = @Queue
      AND BusinessDayDate = @BusinessDayDate
      AND TrainingFlag = @TrainingFlag
      AND WorkstationId = @WorkstationId
</entry>

<entry key="get-forward-items-posLog-with-tag">
    DECLARE
      @CompanyId varchar(12),
      @RetailStoreId varchar(MAX),
      @Queue VARCHAR(MAX),
      @BusinessDayDate VARCHAR(MAX),
      @tag VARCHAR(MAX),
      @trainingFlag NUMERIC(1,0)

    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @Queue = ?
    SET @BusinessDayDate = ?
    SET @tag = ?
    SET @trainingFlag = ?

    SELECT
      Status,
      Tx
    FROM RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE CompanyId = @CompanyId
      AND RetailStoreId = @RetailStoreId
      AND Queue = @Queue
      AND BusinessDayDate = @BusinessDayDate
      AND Ext1 = @tag
      AND Status = 0
      AND TrainingFlag = @trainingFlag
</entry>

<entry key="update-forward-status">
        UPDATE RESTransaction.dbo.TXL_FORWARD_ITEM
        SET Status = ?
        WHERE
            CompanyId = ?
        AND RetailStoreId = ?
        AND WorkstationId = ?
        AND SequenceNumber = ?
        AND Queue = ?
        AND BusinessDayDate = ?
        AND TrainingFlag = ?
</entry>

<entry key="update-transaction-status-in-queue">
    UPDATE RESTransaction.dbo.TXL_INPROGRESS_ITEM SET Status = ?
    WHERE RetailStoreId = ? AND WorkstationId = ? AND SequenceNumber = ? AND BusinessDayDate = ? AND Queue = 0
</entry>

<entry key="select-transaction-from-queue">
    SELECT Tx, Status
    FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      CompanyId = ? AND
      RetailStoreId = ? AND
      Queue = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TrainingFlag = ?
</entry>

<entry key="select-transaction-from-queue-updlock">
    DECLARE
      @companyid varchar(MAX),
      @storeid varchar(MAX),
      @queue varchar(MAX),
      @termid varchar(MAX),
      @txid NUMERIC(5,0),
      @txdate DATE,
      @trainingflag NUMERIC(1,0)

    SET @companyid = ?;
    SET @storeid = ?;
    SET @queue = ?;
    SET @termid = ?;
    SET @txid = ?;
    SET @txdate = ?;
    SET @trainingflag = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      Tx
    FROM
      RESTransaction.dbo.TXL_INPROGRESS_ITEM WITH (UPDLOCK)
    WHERE
      CompanyId = @companyid AND
      RetailStoreId = @storeid AND
      Queue = @queue AND
      WorkstationId = @termid AND
      SequenceNumber = @txid AND
      BusinessDayDate = @txdate AND
      TrainingFlag = @trainingflag AND
      Status = 0

    UPDATE
      RESTransaction.dbo.TXL_INPROGRESS_ITEM
    SET
      Status = 1
    WHERE
      CompanyId = @companyid AND
      RetailStoreId = @storeid AND
      Queue = @queue AND
      WorkstationId = @termid AND
      SequenceNumber = @txid AND
      BusinessDayDate = @txdate AND
      TrainingFlag = @trainingflag AND
      Status = 0
    COMMIT TRAN
</entry>

<entry key="select-transaction-from-queue-disregard-postermid">
    SELECT TOP 1 Tx, BusinessDayDate, Status
    FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      Queue = 0
</entry>

<entry key="get-queued-transaction-status">
    SELECT Status
    FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ?
</entry>

<entry key="select-oldest-transaction-from-queue">
    DECLARE
      @storeid varchar(MAX),
      @queue char(4)

    SET @storeid=?
    SET @queue=?

    SELECT TOP 1
      Tx,
      BusinessDayDate,
      SequenceNumber,
      WorkstationId
    FROM
      RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      RetailStoreId = @storeid AND Queue = @queue AND Status = 0
    ORDER BY BusinessDayDate, SequenceNumber ASC
</entry>

<entry key="select-all-transaction-from-queue">
    SELECT Tx, WorkstationId, RTRIM(LTRIM(SequenceNumber)) as SequenceNumber, BusinessDayDate
      FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
      WHERE
        CompanyId = ? AND
        RetailStoreId = ? AND
        WorkstationId = ? AND
      Queue = ? AND
      TrainingFlag = ? AND
      Status = 0
      ORDER BY BusinessDayDate ASC
</entry>

<entry key="update-status-from-queue">
    UPDATE
      RESTransaction.dbo.TXL_INPROGRESS_ITEM
       SET
         Status = ?
    WHERE
      RetailStoreId = ? AND
        WorkstationId = ? AND
        SequenceNumber = ? AND
        BusinessDayDate = ? AND
        Queue = ?
</entry>
<entry key="select-operator-queue">
    SELECT
      OperatorName
    FROM
      RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo=? AND
      CompanyId = ?
</entry>

<entry key="select-date-setting">
  DECLARE
      @companyid varchar(MAX),
      @storeid varchar(MAX)

  SET @companyid = ?;
  SET @storeid = ?;

  IF NOT EXISTS (
     SELECT *
     FROM
       RESMaster.dbo.MST_BIZDAY
     WHERE
       CompanyId = @companyid AND StoreId = @storeid AND DeleteFlag = 0
  )
  SET @storeId = '0'

  SELECT
    CompanyId,
    StoreId,
    TodayDate,
    SwitchTime,
    Skip
  FROM
    RESMaster.dbo.MST_BIZDAY
  WHERE
    CompanyId = @companyid AND StoreId = @storeid AND DeleteFlag = 0
</entry>

<!-- *************************  ENTRY KEY FOR DEVICE LOG TABLE ************************* -->
<entry key="save-DeviceLogFile">
    DECLARE @newDeviceLog Table(
      Id uniqueidentifier,
      Udid varchar(50),
      LogDate date,
      UploadtTime datetime,
      LastUpdated datetime);
    INSERT INTO DEVICE_LOG (
      Udid,
      LogDate,
      LogFile)
    OUTPUT
      INSERTED.Id,
      INSERTED.Udid,
      INSERTED.LogDate,
      INSERTED.UploadTime,
      INSERTED.LastUpdated
    INTO @newDeviceLog
    VALUES (?, ?, ?);
    SELECT * FROM @newDeviceLog;
</entry>

<entry key="update-DeviceLogFile">
    DECLARE @updateDeviceLog Table(
      Id uniqueidentifier,
      Udid varchar(50),
      LogDate date,
      UploadtTime datetime,
      LastUpdated datetime);
    UPDATE DEVICE_LOG
    SET
      LastUpdated = GETDATE(),
      LogFile = ?
    OUTPUT
      INSERTED.Id,
      INSERTED.Udid,
      INSERTED.LogDate,
      INSERTED.UploadTime,
      INSERTED.LastUpdated
      INTO @updateDeviceLog
    WHERE Id = ? ;
    SELECT * FROM @updateDeviceLog;
</entry>

<entry key="get-DeviceLogs">
    SET NOCOUNT ON;
    WITH tempTable as (
      SELECT
        ROW_NUMBER() OVER (ORDER BY LogDate DESC) AS RowNumber,
        Id,
        Udid,
        LogDate,
        UploaTtime,
        LastUpdated
      FROM DEVICE_LOG
      WHERE
        Udid = ?
    )
    SELECT *
    FROM tempTable
    WHERE
      RowNumber
      BETWEEN ? AND ?;
</entry>

<!-- *************************  ENTRY KEY FOR STORE TABLE MAINTENANCE ************************* -->
<entry key="get-store">
    SELECT
      *
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      StoreId=? AND DeleteFlag = 0.0
</entry>

<entry key="get-stores">
    DECLARE
      @companyId varchar(MAX),
      @storeId varchar(MAX),
      @storeName varchar(MAX),
      @limit int

    SET @companyId = NULLIF(?, '')
    SET @storeId = NULLIF(?, '')
    SET @storeName = NULLIF(?, '')
    SET @limit = ?

    SET @limit = (CASE
      WHEN (@limit > -1)
        THEN @limit
        ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_STOREINFO WHERE DeleteFlag = 0.0)
      END)

    SELECT TOP(@limit) *
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      CompanyId = COALESCE(@companyId, CompanyId) AND
      StoreId = COALESCE(@storeId, StoreId) AND
      LOWER(StoreName) = LOWER(COALESCE(@storeName, StoreName)) AND
      Status = 'Active' AND
      DeleteFlag = 0.0
      ORDER BY StoreName ASC
</entry>

<entry key="get-till-info">
        SELECT
          StoreId, TillId, BusinessDayDate, SodFlag, EodFlag
      FROM
          RESMaster.dbo.MST_TILLIDINFO
      WHERE
          StoreId=? AND TillId=? AND DeleteFlag=0
</entry>

<entry key="create-till-info">
      INSERT INTO RESMaster.dbo.MST_TILLIDINFO(
         StoreId,
         TillId,
         BusinessDayDate,
         SodFlag,
         EodFlag,
         InsDate,
         UpdDate,
         UpdAppId,
         UpdOpeCode,
         DeleteFlag)
     VALUES(?,?,?,?,?,GETDATE(),GETDATE(),?,?,0);
</entry>

<entry key="fetch-one-till">
    SELECT
      CompanyId, StoreId, TillId, TerminalId, BusinessDayDate, SaveBusinessDayDate, SodFlag, EodFlag,
      DeleteFlag, DelDate, DelAppId, DelOpeCode, InsDate, InsAppId, InsOpeCode,
      UpdCount, UpdDate, UpdAppId, UpdOpeCode
    FROM
      RESMaster.dbo.MST_TILLIDINFO
    WHERE
      CompanyId = ? AND StoreId= ? AND TillId = ? AND DeleteFlag = 0
</entry>

<entry key="update-till-operation-flag">
    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
      TerminalId = ?,
      SodFlag = ?,
      EodFlag = ?,
      BusinessDayDate = ?,
      SaveBusinessDayDate = ?,
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
      CompanyId = ? AND
      StoreId = ? AND
      TillId = ? AND
      SodFlag = ? AND
      EodFlag = ? AND
      DeleteFlag = 0
</entry>

<entry key="update-previous-amount">
    DECLARE
      @companyid varchar(MAX),
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @terminalid tinyint,
      @amount numeric(15,0),
      @operatorid varchar(MAX),
      @businessdate date

    SET @companyid = ?;
    SET @storeid = ?;
    SET @tillid = ?;
    SET @terminalid = ?;
    SET @amount = ?;
    SET @businessdate = ?;
    SET @operatorid = ?;

     IF EXISTS (SELECT StoreId FROM RESTransaction.dbo.TXL_SOD
        WHERE CompanyId = @companyid and StoreId = @storeid)
            UPDATE
                RESTransaction.dbo.TXL_SOD
            SET
              Amount = @amount,
              OperatorId = @operatorid,
              TerminalId = @terminalid,
              TillId = @tillid,
              BusinessDate = @businessdate,
              UpdDate = GETDATE()

            WHERE
              CompanyId = @companyid and StoreId = @storeid
     ELSE
      INSERT INTO RESTransaction.dbo.TXL_SOD (CompanyId, StoreId, TerminalId, OperatorId, TillId, Amount, BusinessDate, CreatedDate, UpdDate)
      VALUES
      (@companyid, @storeid, @terminalid, @operatorid, @tillid, @amount, @businessdate, GETDATE(), GETDATE())
</entry>

<entry key="update-till-on-journ-updlock">
    DECLARE
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @sodflagtochange tinyint,
      @sodflag tinyint,
      @eodflagtochange tinyint,
      @eodflag tinyint,
      @date date,
      @operatorid varchar(MAX),
      @companyid varchar(MAX)

    SET @storeid = ?;
    SET @tillid = ?;
    SET @sodflagtochange = ?;
    SET @sodflag = ?;
    SET @eodflagtochange = ?;
    SET @eodflag = ?;
    SET @date = ?;
    SET @operatorid = ?;
    SET @companyid = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      StoreId, TillId
    FROM
      RESMaster.dbo.MST_TILLIDINFO(UPDLOCK)
    WHERE
       CompanyId = @companyid AND
       StoreId = @storeid AND
       TillId = @tillid AND
       SodFlag = @sodflagtochange AND
       EodFlag = @eodflagtochange AND
       DeleteFlag = 0

    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
       SodFlag = @sodflag,
       EodFlag = @eodflag,
       BusinessDayDate = @date,
       UpdOpeCode = @operatorid
    WHERE
       CompanyId = @companyid AND
       StoreId = @storeid AND
       TillId = @tillid AND
       SodFlag = @sodflagtochange AND
       EodFlag = @eodflagtochange AND
       DeleteFlag = 0
    COMMIT TRAN
</entry>

<entry key="update-till-on-journ-updlock-ent">
    DECLARE
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @sodflagtochange tinyint,
      @sodflag tinyint,
      @eodflagtochange tinyint,
      @eodflag tinyint,
      @date date,
      @operatorid varchar(MAX),
      @companyid varchar(MAX)

    SET @storeid = ?;
    SET @tillid = ?;
    SET @sodflagtochange = ?;
    SET @sodflag = ?;
    SET @eodflagtochange = ?;
    SET @eodflag = ?;
    SET @date = ?;
    SET @operatorid = ?;
    SET @companyid = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      StoreId, TillId
    FROM
      RESMaster.dbo.MST_TILLIDINFO(UPDLOCK)
    WHERE
      CompanyId = @companyid AND
      StoreId = @storeid AND
      TillId = @tillid AND
      DeleteFlag = 0

    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
       SodFlag = @sodflag,
       EodFlag = @eodflag,
       BusinessDayDate = @date,
       UpdOpeCode = @operatorid
    WHERE
       CompanyId = @companyid AND
       StoreId = @storeid AND
       TillId = @tillid AND
       DeleteFlag = 0
    COMMIT TRAN
</entry>

<entry key="get-all-tills">
        DECLARE
            @storeid varchar(max),
            @tillid varchar(max),
            @limit int
        SET @storeid=?
        SET @tillid=?
        SET @limit=?
        SET @limit = (CASE
                     WHEN(@limit > -1)
                        THEN @limit
                        ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_TILLIDINFO WHERE DeleteFlag=0)
                     END)
        SELECT TOP(@limit)
            StoreId,
            TillId,
            TerminalId,
            BusinessDayDate,
            SodFlag,
            EodFlag,
            UpdOpeCode
        FROM RESMaster.dbo.MST_TILLIDINFO
        WHERE (@storeid IS NULL OR len(@storeid) = 0 OR StoreId like @storeid)
        AND (@tillid IS NULL OR len(@tillid) = 0 OR TillId like @tillid)
        AND DeleteFlag=0
        ORDER BY TillId;
</entry>

<entry key="get-eodsummary">
        SELECT
            Status
        FROM RESTransaction.dbo.TXL_SALES_JOURNAL
        WHERE
            CompanyId = ? AND
            RetailStoreId = ? AND
            WorkstationId = ? AND
            BusinessDayDate = ? AND
            TxType = 'EOD'
</entry>

<entry key="get-activated-tills-on-businessday">
        SELECT
            tillidinfo.CompanyId,
            tillidinfo.StoreId,
            tillidinfo.TillId,
            tillidinfo.TerminalId,
            deviceinfo.DeviceName,
            tillidinfo.BusinessDayDate,
            tillidinfo.SodFlag,
            tillidinfo.EodFlag
        FROM RESMaster.dbo.MST_TILLIDINFO tillidinfo
        LEFT JOIN RESMaster.dbo.MST_DEVICEINFO deviceinfo
        ON tillidinfo.CompanyId = deviceinfo.CompanyId
        AND tillidinfo.StoreId = deviceinfo.StoreId
        AND tillidinfo.TerminalId = deviceinfo.TerminalId
        AND deviceinfo.Training = ?
        AND deviceinfo.DeleteFlag = 0.0
        WHERE
            tillidinfo.CompanyId = ? AND
            tillidinfo.StoreId = ? AND
            tillidinfo.BusinessDayDate = ? AND
            tillidinfo.DeleteFlag = 0
        ORDER BY tillidinfo.TillId, tillidinfo.TerminalId
</entry>

<entry key="get-unclosed-tills-on-businessday">
        SELECT
            tillidinfo.CompanyId,
            tillidinfo.StoreId,
            tillidinfo.TillId,
            tillidinfo.TerminalId,
            deviceinfo.DeviceName,
            tillidinfo.BusinessDayDate,
            tillidinfo.SodFlag,
            tillidinfo.EodFlag
        FROM RESMaster.dbo.MST_TILLIDINFO tillidinfo
        LEFT JOIN RESMaster.dbo.MST_DEVICEINFO deviceinfo
        ON tillidinfo.CompanyId = deviceinfo.CompanyId
        AND tillidinfo.StoreId = deviceinfo.StoreId
        AND tillidinfo.TerminalId = deviceinfo.TerminalId
        AND deviceinfo.Training = ?
        AND deviceinfo.DeleteFlag = 0.0
        WHERE
            tillidinfo.CompanyId = ? AND
            tillidinfo.StoreId = ? AND
            tillidinfo.BusinessDayDate = ? AND
            tillidinfo.EodFlag = 0 AND
            tillidinfo.DeleteFlag = 0
        ORDER BY tillidinfo.TillId, tillidinfo.TerminalId
</entry>

<entry key="search-logon-users">
        DECLARE
          @companyid varchar(max),
            @storeid varchar(max),
            @tillid varchar(max),
            @terminalid varchar(max)

        SET @companyid = ?
        SET @storeid = ?
        SET @tillid = ?
        SET @terminalid = ?

        SELECT
            device.TerminalId
        FROM
            RESMaster.dbo.MST_DEVICEINFO device
        LEFT JOIN
            RESTransaction.dbo.TXU_POS_CTRL pos
        ON
          device.CompanyId = pos.CompanyId AND
            device.StoreId = pos.StoreId AND
            device.TerminalId = pos.TerminalNo AND
            device.DeleteFlag = 0.0
        WHERE
          device.CompanyId = @companyid AND
            device.StoreId = @storeid AND
            device.TillId = @tillid AND
            (pos.OpeCode IS NOT NULL AND LTRIM(RTRIM(pos.OpeCode))!='') AND
            device.TerminalId != @terminalid
</entry>

<!-- *************************  ENTRY KEY FOR DEPARTMENT TABLE MAINTENANCE ************************* -->
<entry key="select-departmentdetails">
    DECLARE @companyid varchar(max), @dpt varchar(max), @storeid varchar(max), @groupStoreId VARCHAR(10)
    SET @companyid = ?
    SET @storeid = ?
    SET @dpt = ?
    SET @groupStoreId = @storeid

    IF NOT EXISTS(SELECT Dpt FROM RESMaster.dbo.MST_DPTINFO WHERE CompanyId = @companyid AND StoreId = @storeid AND Dpt = @dpt AND DeleteFlag = 0.0)
      SET @storeid = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_DPTINFO dpt
       INNER JOIN
          RESMaster.dbo.MST_GROUPINFO grop
          ON dpt.CompanyId = grop.CompanyId
          AND dpt.SubCode1 = grop.GroupId
          AND grop.StoreId = @groupStoreId
          AND grop.DeleteFlag = 0.0
        WHERE
          dpt.CompanyId = @companyid AND dpt.StoreId = @storeid AND Dpt = @dpt AND dpt.DeleteFlag = 0.0
    )
    SET @groupStoreId = '0'

    SELECT
      dpt.CompanyId, dpt.StoreId, Dpt, DptName, DptNameLocal, TaxType, TaxRate, DiscountType, ExceptionFlag, dpt.SubNum1, dpt.SubNum2, dpt.SubNum3, dpt.SubNum4, %s, dpt.SubCode1, grop.GroupName, grop.GroupId
    FROM
      RESMaster.dbo.MST_DPTINFO dpt
    LEFT JOIN
      RESMaster.dbo.MST_GROUPINFO grop
      ON dpt.CompanyId = grop.CompanyId
      AND dpt.SubCode1 = grop.GroupId
      AND grop.StoreId = @groupStoreId
      AND grop.DeleteFlag = 0.0
    WHERE
      dpt.CompanyId = @companyid AND dpt.StoreId = @storeid AND Dpt = @dpt AND dpt.DeleteFlag = 0.0
</entry>

<entry key="get-departments">
  DECLARE @key varchar(max),
    @companyId varchar(max),
    @storeid varchar(max),
    @limit int,
    @name varchar(max)

    SET @limit=?
    SET @companyId=?
    SET @storeid=?
    SET @key=?
    SET @name=?

    SET @storeid = (CASE
               WHEN (len(@key) = 0 OR (@key IS NULL))
                  THEN @storeid
               WHEN ((len(@storeid) =0 OR @storeid IS NULL))
                   THEN @storeid
               WHEN NOT EXISTS(SELECT Dpt, DptName FROM RESMaster.dbo.MST_DPTINFO WHERE DeleteFlag = 0.0 AND StoreId= @storeid AND Dpt like @key {ESCAPE '\'} )
                  THEN '0'
               ELSE @storeid
             END)
    SET @limit = (CASE
           WHEN(@limit > -1)
               THEN @limit
               ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_DPTINFO WHERE DeleteFlag = 0.0)
           END)

    SELECT TOP(@limit)
          CompanyId,
          Dpt,
          DptName,
          DptNameLocal,
          StoreId,
          InheritFlag,
          ExceptionFlag,
          DiscountType,
          DiscountFlag,
          DiscountAmt,
          DiscountRate,
          TaxRate,
          TaxType,
          SubNum1,
          SubNum2,
          SubNum3,
          SubNum4,
          SubCode1,
          InputSubCode1,
          %s
     FROM (
        SELECT
          Dpt,
          DptName,
          DptNameLocal,
          DPT.StoreId,
          InheritFlag,
          ExceptionFlag,
          DiscountType,
          DiscountFlag,
          DiscountAmt,
          DiscountRate,
          TaxRate,
          TaxType,
          DPT.CompanyId,
          DPT.SubNum1,
          DPT.SubNum2,
          DPT.SubNum3,
          DPT.SubNum4,
          DPT.SubCode1,
          DPT.DisplayOrder,
          %s,
          GRP.SubCode1 InputSubCode1
        FROM RESMaster.dbo.MST_DPTINFO DPT
        LEFT JOIN RESMaster.dbo.MST_GROUPINFO GRP
        ON DPT.SubCode1 = GRP.GroupId
        AND DPT.CompanyId = GRP.CompanyId
        AND DPT.StoreId = GRP.StoreId
        AND GRP.DeleteFlag = 0.0
        WHERE
         ((@companyId IS NULL OR LEN(@companyId) = 0) OR (
                DPT.CompanyId = @companyId
              )) AND
          ((@storeid IS NULL OR LEN(@storeid) = 0) OR (
                DPT.StoreId = @storeid
              )) AND
          ((@key IS NULL OR LEN(@key) = 0) OR (
                Dpt LIKE @key  {ESCAPE '\'}
              )) AND
          ((@name IS NULL) OR (
                ((LOWER(DptName) like LOWER(@name)  {ESCAPE '\'} ) OR
                (LOWER(DptNameLocal) like LOWER(@name)  {ESCAPE '\'} )
              ))) AND
          Status = 'Active' AND
          DPT.DeleteFlag = 0.0

    union
      SELECT
          Dpt,
          DptName,
          DptNameLocal,
          a.StoreId,
          InheritFlag,
          ExceptionFlag,
          DiscountType,
          DiscountFlag,
          DiscountAmt,
          DiscountRate,
          TaxRate,
          TaxType,
          a.CompanyId,
          a.SubNum1,
          a.SubNum2,
          a.SubNum3,
          a.SubNum4,
          a.SubCode1,
          a.DisplayOrder,
          %s,
          GRP.SubCode1 InputSubCode1
        FROM RESMaster.dbo.MST_DPTINFO a
        LEFT JOIN RESMaster.dbo.MST_GROUPINFO GRP
        ON a.SubCode1 = GRP.GroupId
        AND a.CompanyId = GRP.CompanyId
        AND a.StoreId = GRP.StoreId
        AND GRP.DeleteFlag = 0.0
        WHERE
         ((@companyId IS NULL OR LEN(@companyId) = 0) OR (
                a.CompanyId = @companyId
              )) AND
          a.StoreId = '0' AND
          ((@key IS NULL OR LEN(@key) = 0) OR (
                Dpt LIKE @key  {ESCAPE '\'}
              )) AND
          ((@name IS NULL) OR (
                ((LOWER(DptName) like LOWER(@name)  {ESCAPE '\'} ) OR
                (LOWER(DptNameLocal) like LOWER(@name)  {ESCAPE '\'} )
              ))) AND
          Status = 'Active'
        AND NOT EXISTS (
             SELECT 1
               FROM RESMaster.dbo.MST_DPTINFO b
              WHERE a.CompanyId = b.CompanyId
                AND b.StoreId = @storeid
                AND a.dpt = b.dpt
                AND b.DeleteFlag = 0.0
        )
        AND a.DeleteFlag = 0.0
    ) DPT
    ORDER BY
      DisplayOrder,
         CASE
        WHEN (len(@name) &gt; 0 AND (@key IS NULL OR len(@key) &lt;= 0))
          THEN DptName
           END,
      Dpt
</entry>

<!-- *************************  ENTRY KEY FOR EMPLOYEE TABLE MAINTENANCE ************************* -->
<entry key="create-employee">
    DECLARE
    @storeid      varchar(MAX),
    @operatorno   char(20),
    @operatorname   varchar(MAX),
    @passcode     varchar(MAX),
    @operatortype   int,
    @terminalid   varchar(MAX),
    @role       char(8),
    @upddate    datetime,
    @status     varchar(MAX),
    @updappid     varchar(max),
    @updopecode   varchar(max)

  SET @storeid      =?
  SET @operatorno   =?
  SET @operatorname   =?
  SET @passcode     =?
  SET @operatortype   =?
  SET @updappid   =?
  SET @updopecode   =?

    IF EXISTS(SELECT Status FROM RESMaster.dbo.MST_USER_CREDENTIALS WHERE OperatorNo = @operatorno AND Status = 'Deleted')
      UPDATE
                RESMaster.dbo.MST_USER_CREDENTIALS
        SET
            StoreId = @storeid,
            OperatorName = @operatorname,
            PassCode = @passcode,
            OperatorType = @operatortype,
            TerminalId = NULL,
            Role = 'NCR',
            UpdDate = GETDATE(),
            Status = 'Inactive',
            UpdAppId = @updappid,
            UpdOpeCode = @updopecode
        WHERE
            OperatorNo = @operatorno

ELSE
INSERT INTO RESMaster.dbo.MST_USER_CREDENTIALS (StoreId,OperatorNo,OperatorName,PassCode,OperatorType,TerminalId,Role,UpdDate,Status,UpdAppId,UpdOpeCode)
VALUES
  (@storeid,@operatorno,@operatorname,@passcode,@operatortype,NULL,'NCR',GETDATE(),'Inactive',@updappid,@updopecode)
</entry>

<entry key="delete-employee">
  UPDATE
  RESMaster.dbo.MST_USER_CREDENTIALS
SET
  Status = 'Deleted',
  Role = '',
  UpdOpeCode = ?,
  UpdAppId = ?,
  UpdDate = GETDATE()
WHERE
  StoreId=? and OperatorNo=?
</entry>

<entry key="update-employee">
DECLARE @operatorno varchar(MAX),
        @passcode varchar(MAX),
        @operatorname varchar(MAX),
        @operatortype int,
        @terminalid varchar(MAX),
        @storeid varchar(MAX),
        @updappid varchar(max),
        @updopecode varchar(max),
        @status varchar(max),
        @role varchar(max)

    SET @operatorno=?
    SET @passcode=?
    SET @operatorname=?
    SET @operatortype=?
    SET @storeid=?
    SET @updappid=?
    SET @updopecode=?
    SET @status=?
    SET @terminalid=?
    SET @role=?

      UPDATE
        RESMaster.dbo.MST_USER_CREDENTIALS
      SET
        OperatorNo=
        CASE
        WHEN len(@operatorno) > 0  THEN @operatorno
        ELSE OperatorNo
      END,
        PassCode=
        CASE
          WHEN (@passcode IS NULL OR @passcode = '')THEN @passcode
        ELSE PassCode
      END,
      OperatorName=
        CASE
        WHEN (len(@operatorname) > 0 OR @operatorname='') THEN @operatorname
        ELSE OperatorName
      END,
      OperatorType=
        CASE
        WHEN (len(@operatortype) > 0 OR @operatortype='') THEN @operatortype
        ELSE OperatorType
      END,
      StoreId=
      CASE
        WHEN (len(@storeid) > 0 OR @storeid='') THEN @storeid
        ELSE StoreId
      END,
      Status='Inactive',
      TerminalId=
      CASE
        WHEN (len(@terminalid) > 0 ) THEN @terminalid
        ELSE TerminalId
      END,
      Role=
      CASE
        WHEN (len(@role) > 0 ) THEN @role
        ELSE Role
      END,
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode,
        UpdDate = GETDATE()
        OUTPUT INSERTED.OperatorNo, INSERTED.PassCode, INSERTED.OperatorName,
             INSERTED.OperatorType, INSERTED.StoreId,  INSERTED.PassCode
      WHERE
        OperatorNo=?
</entry>

<entry key="get-employee-info">
      SELECT
      OperatorName,
      OperatorType,
      TerminalId,
      PassCode,
      Status,
      Role,
      StoreId,
      OperatorNo
    FROM
      RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo = ?;
</entry>

<!-- QUEUE BUSTER LINK -->
<entry key="create-queuebusterlink">
      INSERT INTO RESMaster.dbo.PRM_QUEUEBUSTER_LINK
        (StoreId, Id, DisplayName, Status, UpdDate, UpdAppId, UpdOpeCode)
    VALUES
      (?, ?, ?, 'Active',GETDATE(),?, ?)
</entry>

<entry key="delete-queuebusterlink">
      UPDATE
        RESMaster.dbo.PRM_QUEUEBUSTER_LINK
      SET
        Status = 'Deleted',
        UpdDate = GETDATE(),
        UpdAppId=?,
      UpdOpeCode=?
      WHERE
        StoreId = ? AND Id = ?
</entry>

<entry key="update-queuebusterlink">
    DECLARE
      @StoreId varchar(MAX),
      @Id varchar(MAX),
      @DisplayName varchar(MAX),
      @UpdAppId varchar(MAX),
      @UpdOpeCode varchar(MAX)

    SET @StoreId = ?
    SET @Id = ?
    SET @DisplayName = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?
    UPDATE
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    SET
      StoreId =
        CASE
          WHEN len(@StoreId) > 0 THEN @StoreId
          ELSE StoreId
        END,
      Id =
        CASE
          WHEN len(@Id) > 0 THEN @Id
          ELSE Id
        END,
      DisplayName =
        CASE
          WHEN @DisplayName is NULL then DisplayName
          ELSE RTRIM(LTRIM(@DisplayName))
        END,
      UpdDate = GETDATE(),
      UpdAppId = @UpdAppId,
      UpdOpeCode = @UpdOpeCode

    OUTPUT
      INSERTED.StoreId,
      INSERTED.Id,
      INSERTED.DisplayName
    WHERE
      StoreId = ? AND Id = ? AND (Status = 'Active' OR Status = 'Inactive')
</entry>

<entry key="activate-queuebusterlink">

    UPDATE
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    SET
      Status = 'Active'

    WHERE
      StoreId = ? AND Id = ?
</entry>

<entry key="get-all-queueubusterlinks">
    SELECT
      TOP (?)
      Id,
      COALESCE(DisplayName, '') DisplayName,
      StoreId
    FROM
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    WHERE
      StoreId like ? AND
      (Id like ?  {ESCAPE '\'} ) AND (DisplayName IS NULL OR (LOWER(DisplayName) like LOWER(?)  {ESCAPE '\'} ) ) AND
      Status = 'Active'

</entry>

<!-- AUTHORIZATION LINK -->
<entry key="create-authorizationlink">
    INSERT INTO
    RESMaster.dbo.PRM_AUTHORIZATION_LINK (StoreId,Id,DisplayName,Status,UpdDate,UpdAppId,UpdOpeCode)
    VALUES
      (?,?,?,'Active',GETDATE(),?,?)
</entry>

<entry key="delete-authorizationlink">
      UPDATE
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    SET
      Status = 'Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
    StoreId = ? AND Id = ?
</entry>

<entry key="update-authorizationlink">
    DECLARE @StoreId varchar(MAX), @Id varchar(MAX), @DisplayName varchar(MAX), @UpdAppId varchar(MAX), @UpdOpeCode varchar(MAX)
    SET @StoreId = ?
    SET @Id = ?
    SET @DisplayName = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?


    UPDATE
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    SET
    StoreId = CASE WHEN len(@StoreId) > 0 THEN @StoreId
    ELSE StoreId END,
    Id = CASE WHEN len(@Id) > 0 THEN @Id
            ELSE Id END,
    DisplayName = CASE WHEN @DisplayName IS NULL THEN DisplayName
              ELSE RTRIM(LTRIM(@DisplayName)) END,
    UpdDate = GETDATE(),
    UpdAppId = @UpdAppId,
    UpdOpeCode = @UpdOpeCode

    OUTPUT INSERTED.StoreId, INSERTED.Id, COALESCE(INSERTED.DisplayName, '')
    DisplayName
    WHERE
    StoreId = ? AND Id = ? AND (Status = 'Active' OR Status = 'Inactive')
    </entry>
    <entry key="get-all-authorizationlinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName,
    StoreId
    FROM
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    WHERE
        Status = 'Active'
</entry>

<entry key="get-authorizationlinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName
    FROM
      RESMaster.dbo.PRM_AUTHORIZATION_LINK

    WHERE
        StoreId = ?  and Status = 'Active'
</entry>

<entry key="get-authorizationlink">
    SELECT
    StoreId,
    Id,
    COALESCE(DisplayName, '') DisplayName, Status
    FROM
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    WHERE
    StoreId = ? AND Id = ?
</entry>

<entry key="get-queuebusterlinkinfo">
    SELECT
      COALESCE(DisplayName, '') DisplayName, Status
    FROM
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    WHERE
      StoreId = ? AND Id = ?;
</entry>

<!-- SIGNATURE LINK  -->
<entry key="get-signaturelinkinfo">
    SELECT
    StoreId,
    Id,
    DisplayName,
    Status
    FROM RESMaster.dbo.PRM_SIGNATURE_LINK
    WHERE StoreId = ? AND Id = ?;
</entry>

<entry key="delete-signaturelink">
    UPDATE RESMaster.dbo.PRM_SIGNATURE_LINK
    SET
      Status = 'Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
    StoreId = ? AND Id = ?
</entry>

<entry key="create-signaturelink">
      INSERT INTO
    RESMaster.dbo.PRM_SIGNATURE_LINK (StoreId,Id,DisplayName,Status,UpdDate,UpdAppId,UpdOpeCode)
    VALUES
      (?,?,?,'Active',GETDATE(),?,?)
    </entry>
    <entry key="get-SignatureLinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName,
    StoreId
    FROM RESMaster.dbo.PRM_SIGNATURE_LINK
    WHERE StoreId = ? AND Status='Active'
</entry>

<entry key="get-all-signaturelinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName,
    StoreId
    FROM RESMaster.dbo.PRM_SIGNATURE_LINK
    WHERE Status='Active'
</entry>

<entry key="update-signaturelink">
    DECLARE @StoreId varchar(MAX), @Id varchar(MAX), @DisplayName varchar(MAX), @UpdAppId varchar(MAX), @UpdOpeCode varchar(MAX)
    SET @StoreId = ?
    SET @Id = ?
    SET @DisplayName = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?

    UPDATE
      RESMaster.dbo.PRM_SIGNATURE_LINK
    SET
    StoreId = CASE WHEN len(@StoreId) > 0 THEN @StoreId
    ELSE StoreId END,
    Id = CASE WHEN len(@Id) > 0 THEN @Id
    ELSE Id END,
    DisplayName = CASE WHEN @DisplayName IS NULL THEN DisplayName ELSE RTRIM(LTRIM(@DisplayName)) END,
    UpdDate = GETDATE(),
    UpdAppId = @UpdAppId,
    UpdOpeCode = @UpdOpeCode

    OUTPUT INSERTED.StoreId, INSERTED.Id, COALESCE(INSERTED.DisplayName, '')
    DisplayName
    WHERE
    StoreId = ? AND Id = ? AND (Status = 'Active' OR Status = 'Inactive')
</entry>

<!-- FOR GROUP FUNCTIONS-->
<entry key="view-GroupDetail">
    SELECT GroupName,Transactions,Reports,Settings,Merchandise,Administration,Drawer
    FROM RESMaster.dbo.PRM_GROUP_FUNCTION
    WHERE GroupCode = ?
</entry>

<entry key="view-authorization">
    SELECT SecLevel1, SecLevel2, SecLevel3, SecLevel4, SecLevel5, SecLevel6, SecLevel7, SecLevel8, SecLevel9,
    SecLevel10, SecLevel11, SecLevel12, SecLevel13, SecLevel14, SecLevel15
    FROM RESMaster.dbo.MST_EMP_SEC
    WHERE CompanyId = ? and EmpCode = ? and DeleteFlag = 0.0
</entry>

<!-- ADD BGN 担当者権限の検証-->
<entry key="view-authorization-with-passcode">
    SELECT
        SecLevel1,
        SecLevel2,
        SecLevel3,
        SecLevel4,
        SecLevel5,
        SecLevel6,
        SecLevel7,
        SecLevel8,
        SecLevel9,
        SecLevel10,
        SecLevel11,
        SecLevel12,
        SecLevel13,
        SecLevel14,
        SecLevel15
    FROM
        RESMaster.dbo.MST_EMP_SEC
    WHERE
        CompanyId = ? AND
        EmpCode = ? AND
        Password = ? AND
        DeleteFlag = 0.0
</entry>

<!-- FOR MIX MATCH PROMOTION  -->
<entry key="get-MixMatch">
    DECLARE @storeid varchar(max), @code varchar(max)
        SET @storeid = ?
        SET @code = ?

        IF NOT EXISTS(SELECT StartDate, EndDate, Name, Type, MustBuyFlag, Quantity1, DiscountPrice1,
                EmpPrice11, EmpPrice12, EmpPrice13, Quantity2, DiscountPrice2, EmpPrice21, EmpPrice22, EmpPrice23
                FROM RESMaster.dbo.MST_MIXMATCH
                WHERE StoreId = @storeid AND Code = @code)
        SET @storeid='0'

        SELECT StartDate, EndDate, Name, Type, MustBuyFlag, Quantity1, DiscountPrice1,
                EmpPrice11, EmpPrice12, EmpPrice13, Quantity2, DiscountPrice2, EmpPrice21, EmpPrice22, EmpPrice23
        FROM RESMaster.dbo.MST_MIXMATCH
        WHERE StoreId = @storeid AND Code = @code
</entry>

<entry key="get-GroupMixMatch">
    DECLARE @storeid varchar(max), @code1 varchar(max), @code2 varchar(max)
        SET @storeid = ?
        SET @code1 = ?
        SET @code2 = ?

        IF NOT EXISTS(SELECT StartDate, EndDate, Name, GroupCode, Code1, Code2
                FROM RESMaster.dbo.MST_GROUP_MIXMATCH
                WHERE StoreId = @storeid AND (Code1 = @code1 OR Code2 = @code2))
        SET @storeid = '0'

        SELECT StartDate, EndDate, Name, GroupCode, Code1, Code2
        FROM RESMaster.dbo.MST_GROUP_MIXMATCH
        WHERE StoreId = @storeid AND (Code1 = @code1 OR Code2 = @code2)
</entry>

<entry key="create-corpstore">
      IF NOT EXISTS(SELECT * FROM RESMaster.dbo.MST_CORP_STORE WHERE  StoreId = ?)
       INSERT INTO RESMaster.dbo.MST_CORP_STORE(StoreId,StoreName,PassCode,Permission)
    VALUES(?,?,?,?);
</entry>

<entry key="get-corpstore">
      SELECT
      StoreName, PassCode, Permission
    FROM
      RESMaster.dbo.MST_CORP_STORE
    WHERE
      StoreId=?
</entry>

<entry key="delete-corpstore">
    DELETE FROM RESMaster.dbo.MST_CORP_STORE
      WHERE  StoreId = ?
</entry>

<entry key="update-corpstore">
    DECLARE @storeid varchar(MAX),
        @storename varchar(MAX),
        @passcode varchar(MAX),
        @permission int

    SET @storeid = ?
    SET @storename = ?
    SET @passcode = ?
    SET @permission = ?

    UPDATE RESMaster.dbo.MST_CORP_STORE
      SET StoreId=
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,
          StoreName=
        CASE
          WHEN len(@storename) > 0 THEN @storename
          ELSE StoreName
        END,
        PassCode=
        CASE
          WHEN len(@passcode) > 0 THEN @passcode
          ELSE PassCode
        END,
        Permission = @permission
          OUTPUT INSERTED.StoreId, INSERTED.StoreName,
             INSERTED.PassCode, INSERTED.Permission
       WHERE
         StoreId=?
</entry>

<entry key="insert-update-mixmatch-from-spart">
    DECLARE @storeid varchar(MAX),
      @code varchar(MAX),
      @startdateid varchar(MAX),
      @enddateid varchar(MAX),
      @type varchar(MAX),
      @pricemulti1 int,
      @discountprice1 numeric(15,0),
      @empprice11 numeric(15,0),
      @empprice12 numeric(15,0),
      @empprice13 numeric(15,0),
      @pricemulti2 int,
      @discountprice2 numeric(15,0),
      @empprice21 numeric(15,0),
      @empprice22 numeric(15,0),
      @empprice23 numeric(15,0),
      @name varchar(MAX),
      @mustbuyflag int

    SET @storeid = ?
    SET @code = ?
    SET @startdateid = ?
    SET @enddateid = ?
    SET @type = ?
    SET @pricemulti1 = ?
    SET @discountprice1 = ?
    SET @empprice11 = ?
    SET @empprice12 = ?
    SET @empprice13 = ?
    SET @pricemulti2 = ?
    SET @discountprice2 = ?
    SET @empprice21 = ?
    SET @empprice22 = ?
    SET @empprice23 = ?
    SET @name = ?
    SET @mustbuyflag = ?


    IF NOT EXISTS(SELECT StoreId FROM RESMaster.dbo.MST_MIXMATCH WHERE
       StoreId = @storeid AND Code = @code AND StartDate = @startdateid AND
       EndDate = @enddateid)
       INSERT INTO RESMaster.dbo.MST_MIXMATCH
         VALUES(@storeid, @code, @startdateid, @enddateid, @name,
             @type, @mustbuyflag, @pricemulti1, @discountprice1, @empprice11,
             @empprice12, @empprice13, @pricemulti2, @discountprice2, @empprice21,
             @empprice22, @empprice23)
    ELSE
      UPDATE RESMaster.dbo.MST_MIXMATCH
        SET Name = @name,
          Type = @type,
          MustBuyFlag = @mustbuyflag,
          Quantity1 = @pricemulti1,
          DiscountPrice1 = @discountprice1,
          EmpPrice11 = @empprice11,
          EmpPrice12 = @empprice12,
          EmpPrice13 = @empprice13,
          Quantity2 = @pricemulti2,
          DiscountPrice2 = @discountprice2,
          EmpPrice21 = @empprice21,
          EmpPrice22 = @empprice22,
          EmpPrice23 = @empprice23
        WHERE
          StoreId = @storeid AND
          Code = @code AND
          StartDate = @startdateid AND
          EndDate = @enddateid
</entry>

<entry key="insert-update-groupmixmatch-from-spart">
    DECLARE @storeid varchar(MAX),
      @code1 varchar(MAX),
      @code2 varchar(MAX),
      @startdate date,
      @enddate date,
      @groupcode varchar(MAX),
      @name varchar(MAX)


    SET @storeid = ?
    SET @code1 = ?
    SET @code2 = ?
    SET @startdate = ?
    SET @enddate = ?
    SET @groupcode = ?
    SET @name = ?

    IF NOT EXISTS(SELECT StoreId FROM RESMaster.dbo.MST_GROUP_MIXMATCH WHERE
      StoreId= @storeid AND Code1 = @code1 AND Code2 = @code2 AND StartDate = @startdate AND
      EndDate = @enddate)
      INSERT INTO RESMaster.dbo.MST_GROUP_MIXMATCH
        VALUES(@storeid, @code1, @code2, @startdate, @enddate, @groupcode, @name)
    ELSE
      UPDATE RESMaster.dbo.MST_GROUP_MIXMATCH
        SET GroupCode = @groupcode,
          Name = @name
        WHERE
          StoreId= @storeid AND
          Code1 = @code1 AND
          Code2 = @code2 AND
          StartDate = @startdate AND
          EndDate = @enddate
</entry>

<!-- Master Maintenance -->
<entry key="insert-update-item-from-spart">
  DECLARE
      @STOREID varchar(MAX),
      @PLU varchar(MAX),
      @DISPLAYPLU varchar(MAX),
      @MDINTERNAL varchar(MAX),
      @MNTSTATUS numeric(2, 0),
      @MDTYPE varchar(MAX),
      @MDVENDER varchar(MAX),
      @DPT varchar(MAX),
      @LINE varchar(MAX),
      @CLASS varchar(MAX),
      @SKU varchar(MAX),
      @ITEMSIZE varchar(MAX),
      @KEYPLU varchar(MAX),
      @MD01 varchar(MAX),
      @MD02 varchar(MAX),
      @MD03 varchar(MAX),
      @MD04 varchar(MAX),
      @MD05 varchar(MAX),
      @MD06 varchar(MAX),
      @MD07 varchar(MAX),
      @MD08 numeric(1,0),
      @MD09 varchar(MAX),
      @MD10 varchar(MAX),
      @MDNAME varchar(MAX),
      @MDNAME1 varchar(MAX),
      @MDNAME2 varchar(MAX),
      @MDKANANAME varchar(MAX),
      @MDKANANAME1 varchar(MAX),
      @MDKANANAME2 varchar(MAX),
      @ORGSALESPRICE1 numeric(15, 0),
      @SALESPRICE1 numeric(15, 0),
      @SALESPRICE2 numeric(15, 0),
      @EMPPRICE1 numeric(15,0),
      @EMPPRICE2 numeric(15,0),
      @EMPPRICE3 numeric(15,0),
      @PUPRICE1 numeric(15,0),
      @PUPRICE2 numeric(15,0),
      @PUPRICECHGDATE1 datetime,
      @PUPRICECHGDATE2 datetime,
      @ORGCOSTPRICE1 numeric(17,2),
      @COSTPRICE1 numeric(17,2),
      @COSTPRICE2 numeric(17,2),
      @COSTPRICECHGDATE1 datetime,
      @COSTPRICECHGDATE2 datetime,
      @SALESDATE datetime,
      @MAKERPRICE numeric(15,0),
      @TAXTYPE numeric(1,0),
      @DISCOUNTTYPE numeric(1,0),
      @SEASONTYPE numeric(1,0),
      @PAYMENTTYPE numeric(1,0),
      @ORDERTYPE numeric(1,0),
      @POSMDTYPE numeric(1,0),
      @CATTYPE numeric(1,0),
      @ORDERUNIT numeric(10,0),
      @ORDERPOINT numeric(10,0),
      @BASESTOCKCNT numeric(10,0),
      @CONN1 varchar(MAX),
      @CONNTYPE1 numeric(1,0),
      @CONN2 varchar(MAX),
      @CONNTYPE2 numeric(1,0),
      @VENDERCODE varchar(MAX),
      @VENDERTYPE numeric(1,0),
      @TAGCODE1 varchar(MAX),
      @TAGCODE2 varchar(MAX),
      @TAGCODE3 varchar(MAX),
      @POINTRATE numeric(10,0),
      @SUBMONEY1 numeric(15,0),
      @SUBMONEY2 numeric(15,0),
      @SUBMONEY3 numeric(15,0),
      @SUBMONEY4 numeric(15,0),
      @SUBMONEY5 numeric(15,0),
      @SUBCODE1 varchar(MAX),
      @SUBCODE2 varchar(MAX),
      @SUBCODE3 varchar(MAX),
      @SUBCODE4 varchar(MAX),
      @SUBCODE5 varchar(MAX),
      @SUBCODE6 varchar(MAX),
      @SUBCODE7 varchar(MAX),
      @SUBCODE8 varchar(MAX),
      @SUBCODE9 varchar(MAX),
      @SUBCODE10 varchar(MAX),
      @SUBTINYINT1 numeric(1,0),
      @SUBTINYINT2 numeric(1,0),
      @SUBTINYINT3 numeric(1,0),
      @SUBTINYINT4 numeric(1,0),
      @SUBTINYINT5 numeric(1,0),
      @SUBTINYINT6 numeric(1,0),
      @SUBTINYINT7 numeric(1,0),
      @SUBTINYINT8 numeric(1,0),
      @SUBTINYINT9 numeric(1,0),
      @SUBINT10 numeric(1,0),
      @INSDATE datetime,
      @UPDDATE datetime,
      @UPDAPPID varchar(MAX),
      @UPDOPECODE varchar(MAX),
      @STOCKTYPE numeric(1,0)


    SET @STOREID = ?
      SET @PLU = ?
    SET @MDINTERNAL = ?
    SET @MDTYPE = ?
    SET @MDVENDER = ?
    SET @DPT = ?
    SET @CLASS = ?
    SET @LINE = ?
    SET @SKU = ?
    SET @ITEMSIZE = ?
    SET @KEYPLU = ?
    SET @MD01 = ?
    SET @MD02 = ?
    SET @MD03 = ?
    SET @MD04 = ?
    SET @MD05 = ?
    SET @MD06 = ?
    SET @MD07 = ?
    SET @MD08 = ?
    SET @MD09 = ?
    SET @MD10 = ?
    SET @MDNAME = ?
    SET @MDNAME1 = ?
    SET @MDNAME2 = ?
    SET @MDKANANAME = ?
    SET @MDKANANAME1 = ?
    SET @MDKANANAME2 = ?
    SET @ORGSALESPRICE1 = ?
    SET @SALESPRICE1 = ?
    SET @SALESPRICE2 = ?
    SET @EMPPRICE1 = ?
    SET @EMPPRICE2 = ?
    SET @EMPPRICE3 = ?
    SET @PUPRICE1 = ?
    SET @PUPRICE2 = ?
    SET @PUPRICECHGDATE1 = ?
    SET @PUPRICECHGDATE2 = ?
    SET @ORGCOSTPRICE1 = ?
    SET @COSTPRICE1 = ?
    SET @COSTPRICE2 = ?
    SET @COSTPRICECHGDATE1 = ?
    SET @COSTPRICECHGDATE2 = ?
    SET @SALESDATE = ?
    SET @MAKERPRICE = ?
    SET @TAXTYPE = ?
    SET @DISCOUNTTYPE = ?
    SET @SEASONTYPE = ?
    SET @PAYMENTTYPE = ?
    SET @ORDERTYPE = ?
    SET @POSMDTYPE = ?
    SET @CATTYPE = ?
    SET @ORDERUNIT = ?
    SET @ORDERPOINT = ?
    SET @BASESTOCKCNT = ?
    SET @CONN1 = ?
    SET @CONNTYPE1 = ?
    SET @CONN2 = ?
    SET @CONNTYPE2 = ?
    SET @VENDERCODE = ?
    SET @VENDERTYPE = ?
    SET @TAGCODE1 = ?
    SET @TAGCODE2 = ?
    SET @TAGCODE3 = ?
    SET @POINTRATE = ?
    SET @SUBMONEY1 = ?
    SET @SUBMONEY2 = ?
    SET @SUBMONEY3 = ?
    SET @SUBMONEY4 = ?
    SET @SUBMONEY5 = ?
    SET @SUBCODE1 = ?
    SET @SUBCODE2 = ?
    SET @SUBCODE3 = ?
    SET @SUBCODE4 = ?
    SET @SUBCODE5 = ?
    SET @SUBCODE6 = ?
    SET @SUBCODE7 = ?
    SET @SUBCODE8 = ?
    SET @SUBCODE9 = ?
    SET @SUBCODE10 = ?
    SET @SUBTINYINT1 = ?
    SET @SUBTINYINT2 = ?
    SET @SUBTINYINT3 = ?
    SET @SUBTINYINT4 = ?
    SET @SUBTINYINT5 = ?
    SET @SUBTINYINT6 = ?
    SET @SUBTINYINT7 = ?
    SET @SUBTINYINT8 = ?
    SET @SUBTINYINT9 = ?
    SET @SUBINT10 = ?
    SET @INSDATE = ?
    SET @UPDDATE = ?
    SET @UPDAPPID = ?
    SET @UPDOPECODE = ?
    SET @DISPLAYPLU = ?
    SET @STOCKTYPE = ?

      IF EXISTS (SELECT Plu FROM RESMaster.dbo.MST_PLU WHERE Plu = @PLU AND StoreId = @STOREID AND DeleteFlag = 0.0)
        UPDATE
          RESMaster.dbo.MST_PLU
        SET
          StoreId = @STOREID,
          Plu = @PLU,
          DisplayPlu = @DISPLAYPLU,
        MdInternal = @MDINTERNAL,
        MdType = @MDTYPE,
        MdVender = @MDVENDER,
        Dpt = @DPT,
        Line = @LINE,
        Class = @CLASS,
        Sku = @SKU,
        ItemSize = @ITEMSIZE,
        KeyPlu = @KEYPLU,
        Md01 = @MD01,
        Md02 = @MD02,
        Md03 = @MD03,
        Md04 = @MD04,
        Md05 = @MD05,
        Md06 = @MD06,
        Md07 = @MD07,
        Md08 = @MD08,
        Md09 = @MD09,
        Md10 = @MD10,
        MdName = @MDNAME,
        MdName1 = @MDNAME1,
        MdName2 = @MDNAME2,
        MdKanaName = @MDKANANAME,
        MdKanaName1 = @MDKANANAME1,
        MdKanaName2 = @MDKANANAME2,
        OrgSalesPrice1 = @ORGSALESPRICE1,
        SalesPrice1 = @SALESPRICE1,
        SalesPrice2 = @SALESPRICE2,
        EmpPrice1 = @EMPPRICE1,
        EmpPrice2 = @EMPPRICE2,
        EmpPrice3 = @EMPPRICE3,
        PuPrice1 = @PUPRICE1,
        PuPrice2 = @PUPRICE2,
        PuPriceChgDate1 = @PUPRICECHGDATE1,
        PuPriceChgDate2 = @PUPRICECHGDATE2,
        OrgCostPrice1 = @ORGCOSTPRICE1,
        CostPrice1 = @COSTPRICE1,
        CostPrice2 = @COSTPRICE2,
        CostPriceChgDate1 = @COSTPRICECHGDATE1,
        CostPriceChgDate2 = @COSTPRICECHGDATE2,
        SalesDate = @SALESDATE,
         MakerPrice = @MAKERPRICE,
        TaxType = @TAXTYPE,
        DiscountType  = @DISCOUNTTYPE,
        SeasonType = @SEASONTYPE,
        PaymentType = @PAYMENTTYPE,
        OrderType = @ORDERTYPE,
        PosMdType = @POSMDTYPE,
        CatType = @CATTYPE,
        OrderUnit = @ORDERUNIT,
        OrderPoint = @ORDERPOINT,
        BaseStockCnt = @BASESTOCKCNT,
        Conn1 = @CONN1,
        ConnType1 = @CONNTYPE1,
        Conn2 = @CONN2,
        ConnType2 = @CONNTYPE2,
        VenderCode = @VENDERCODE,
        VenderType = @VENDERTYPE,
        TagCode1 = @TAGCODE1,
        TagCode2 = @TAGCODE2,
        TagCode3 = @TAGCODE3,
        PointRate = @POINTRATE,
        SubMoney1 = @SUBMONEY1,
        SubMoney2 = @SUBMONEY2,
        SubMoney3 = @SUBMONEY3,
        SubMoney4 = @SUBMONEY4,
        SubMoney5 = @SUBMONEY5,
        SubCode1 = @SUBCODE1,
        SubCode2 = @SUBCODE2,
        SubCode3 = @SUBCODE3,
        SubCode4 = @SUBCODE4,
        SubCode5 = @SUBCODE5,
        SubCode6 = @SUBCODE6,
        SubCode7 = @SUBCODE7,
        SubCode8 = @SUBCODE8,
        SubCode9 = @SUBCODE9,
        SubCode10 = @SUBCODE10,
        SubInt1 = @SUBTINYINT1,
        SubInt2 = @SUBTINYINT2,
        SubInt3 = @SUBTINYINT3,
        SubInt4 = @SUBTINYINT4,
        SubInt5 = @SUBTINYINT5,
        SubInt6 = @SUBTINYINT6,
        SubInt7 = @SUBTINYINT7,
        SubInt8 = @SUBTINYINT8,
        SubInt9 = @SUBTINYINT9,
        SubInt10 = @SUBINT10,
        InsDate = @INSDATE,
        UpdDate = @UPDDATE,
        UpdAppId = @UPDAPPID,
        UpdOpeCode = @UPDOPECODE,
        StockType = @STOCKTYPE

      WHERE
        Plu = @PLU AND StoreId = @STOREID AND DeleteFlag = 0.0
    ELSE
        INSERT INTO RESMaster.dbo.MST_PLU
             (
                 StoreId,
                 Plu,
          MdInternal,
          MdType,
          MdVender,
          Dpt,
          Line,
          Class,
          Sku,
          ItemSize,
          KeyPlu,
          Md01,
          Md02,
          Md03,
          Md04,
          Md05,
          Md06,
          Md07,
          Md08,
          Md09,
          Md10,
          MdName,
          MdName1,
          MdName2,
          MdKanaName,
          MdKanaName1,
          MdKanaName2,
          OrgSalesPrice1,
          SalesPrice1,
          SalesPrice2,
          EmpPrice1,
          EmpPrice2,
          EmpPrice3,
          PuPrice1,
          PuPrice2,
          PuPriceChgDate1,
          PuPriceChgDate2,
          OrgCostPrice1,
          CostPrice1,
          CostPrice2,
          CostPriceChgDate1,
          CostPriceChgDate2,
          SalesDate,
          MakerPrice,
          TaxType,
          DiscountType,
          SeasonType,
          PaymentType,
          OrderType,
          PosMdType,
          CatType,
          OrderUnit,
          OrderPoint,
          BaseStockCnt,
          Conn1,
          ConnType1,
          Conn2,
          ConnType2,
          VenderCode,
          VenderType,
          TagCode1,
          TagCode2,
          TagCode3,
          PointRate,
          SubMoney1,
          SubMoney2,
          SubMoney3,
          SubMoney4,
          SubMoney5,
          SubCode1,
          SubCode2,
          SubCode3,
          SubCode4,
          SubCode5,
          SubCode6,
          SubCode7,
          SubCode8,
          SubCode9,
          SubCode10,
          SubInt1,
          SubInt2,
          SubInt3,
          SubInt4,
          SubInt5,
          SubInt6,
          SubInt7,
          SubInt8,
          SubInt9,
          SubInt10,
          InsDate,
          UpdDate,
          UpdAppId,
          UpdOpeCode,
          DisplayPlu,
          StockType)
         VALUES
            (@STOREID, @PLU, @MDINTERNAL, @MDTYPE, @MDVENDER, @DPT, @LINE, @CLASS, @SKU, @ITEMSIZE, @KEYPLU, @MD01, @MD02, @MD03, @MD04, @MD05, @MD06, @MD07, @MD08, @MD09, @MD10, @MDNAME, @MDNAME1, @MDNAME2, @MDKANANAME, @MDKANANAME1, @MDKANANAME2, @ORGSALESPRICE1, @SALESPRICE1, @SALESPRICE2, @EMPPRICE1, @EMPPRICE2, @EMPPRICE3, @PUPRICE1, @PUPRICE2, @PUPRICECHGDATE1, @PUPRICECHGDATE2, @ORGCOSTPRICE1, @COSTPRICE1, @COSTPRICE2, @COSTPRICECHGDATE1, @COSTPRICECHGDATE2, @SALESDATE, @MAKERPRICE, @TAXTYPE, @DISCOUNTTYPE, @SEASONTYPE, @PAYMENTTYPE, @ORDERTYPE, @POSMDTYPE, @CATTYPE, @ORDERUNIT, @ORDERPOINT, @BASESTOCKCNT, @CONN1, @CONNTYPE1, @CONN2, @CONNTYPE2, @VENDERCODE, @VENDERTYPE, @TAGCODE1, @TAGCODE2, @TAGCODE3, @POINTRATE, @SUBMONEY1, @SUBMONEY2, @SUBMONEY3, @SUBMONEY4, @SUBMONEY5, @SUBCODE1, @SUBCODE2, @SUBCODE3, @SUBCODE4, @SUBCODE5, @SUBCODE6, @SUBCODE7, @SUBCODE8, @SUBCODE9, @SUBCODE10, @SUBTINYINT1, @SUBTINYINT2, @SUBTINYINT3, @SUBTINYINT4, @SUBTINYINT5, @SUBTINYINT6, @SUBTINYINT7, @SUBTINYINT8, @SUBTINYINT9, @SUBINT10, @INSDATE, @UPDDATE, @UPDAPPID, @UPDOPECODE, @DISPLAYPLU, @STOCKTYPE)

</entry>

<entry key="get-cash-balance">
    SELECT
      SUM(Debit) - SUM(Credit) +
      SUM(ChangeFund) - SUM(Pickup) +
      SUM(Loan) + SUM(PayIn) as cashOnHand
    FROM
      RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIAL
    WHERE
      RetailStoreId = ? AND
      TillID = ? AND
      BusinessDayDate = ? AND
      AccountCode IN (301, 201, 202, 203, 801)
    </entry>

    <entry key="get-previous-amount">
    DECLARE
    @storeid varchar(MAX),
    @companyid varchar(MAX)

    SET @companyid = ?
    SET @storeid = ?

  SELECT TOP 1
    CompanyId,
    RetailStoreId,
    TxType,
    BusinessDayDate,
    SystemDateTime,
    Tx
FROM
    RESTransaction.dbo.TXL_SALES_JOURNAL
WHERE
    CompanyId = @companyid AND
    RetailStoreId = @storeid
    AND TxType = 'SOD' order by SystemDateTime desc
</entry>

<!-- ******************* Start of Line **************** -->

<entry key="get-accountancy-report">
    DECLARE @storeid VARCHAR(6),@tillid VARCHAR(40),@businessdaydate VARCHAR(15)
        SET @storeid = LTRIM(RTRIM(?))
        SET @tillid = ?
        SET @businessdaydate = ?
    SELECT
        NT.AccountancyAccount,NT.AccountancyAmount,NT.AccountancyItemName,NT.SalesOrPay
    FROM
        ((SELECT
           <!--1  売上-->
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount,
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)) AS AccountancyAmount,
            'Sales' AS AccountancyItemName,
            '1-01' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--2 売上値引-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '1' AND financiall.AccountCodeExtend NOT IN('3','103') THEN financiall.Count1 ELSE 0 END),0) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) AS AccountancyAmount,
            'SalesDiscount' AS AccountancyItemName,
            '1-02' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--3 取消-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount ,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND financiall.AccountSubCode = '3' THEN financiall.Credit ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)) AS AccountancyAmount ,
            'Cancel' AS AccountancyItemName,
            '1-03' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
        )
       UNION ALL
       (SELECT
         <!--小計-->
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Count1 ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount ,
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode in ( '1','3')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)) AS AccountancyAmount ,
            'SalesSubTotal' AS AccountancyItemName,
            '1-04' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--4  返品売上-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END),0)) AS AccountancyAccount ,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)) AS AccountancyAmount ,
            'ReturnSales' AS AccountancyItemName,
            '1-05' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--5  返品値引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' AND financiall.AccountCodeExtend NOT IN('3','103') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' THEN financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'ReturnDiscount' AS AccountancyItemName,
            '1-06' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--6 返品取消-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Count1 ELSE 0 END),0)+
             ISNULL ( SUM (CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.count1 ELSE 0 END),0)) AS AccountancyAccount ,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '4' THEN financiall.Debit+financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM (CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Debit+financiall.Credit ELSE 0 END),0)) AS AccountancyAmount ,
            'ReturnCancel' AS AccountancyItemName,
            '1-07' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
         <!--小計-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Count1 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.count1 ELSE 0 END),0)) AS AccountancyAccount ,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' THEN financiall.Credit+financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '4' THEN financiall.Debit+financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM (CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Debit+financiall.Credit ELSE 0 END),0)) AS AccountancyAmount ,
            'ReturnSubTotal' AS AccountancyItemName,
            '1-08' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
           <!--7 純売上-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Count1 ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.count1 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5'  THEN financiall.Debit-financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '3' THEN financiall.Credit ELSE 0 END),0)-
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' THEN financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Credit ELSE 0 END),0)) AS AccountancyAmount ,
            'NetSales' AS AccountancyItemName,
            '1-09' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--8  純売上(税抜)-->
            '0' as AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5'  THEN financiall.Debit-financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN('1','4') THEN financiall.Credit ELSE 0 END ),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Credit ELSE 0 END ),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Credit ELSE 0 END),0)
             ) AS AccountancyAmount ,
            'TaxNetSales' AS AccountancyItemName,
            '1-10' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount,
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)) AS AccountancyAmount,
            'TotalSales' AS AccountancyItemName,
            '1-11' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--10  総売上(税抜)-->
             '0' AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END ),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend= '2' AND financiall.AccountSubCode= '1' THEN financiall.Credit ELSE 0 END),0)
             ) AS AccountancyAmount,
            'TaxTotalSales' AS AccountancyItemName,
            '1-12' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--＜税別内訳＞-->
            <!--12 課税(税抜)-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0))
             AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend  in ('0', '1') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND  financiall.AccountSubCode IN ('1','2','3','4') AND financiall.AccountCodeExtend not IN ('101', '102') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) -
           ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Credit ELSE 0 END ),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Credit ELSE 0 END ),0)
            )AS AccountancyAmount,
            'Taxation' AS AccountancyItemName,
            '1-13' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
         INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--13 税-->
             '0'  AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Credit ELSE 0 END ),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Credit ELSE 0 END ),0)
             )AS AccountancyAmount,
            'Tax' AS AccountancyItemName,
            '1-14' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--14免税-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend  not in ('0','1', '2') AND  financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND  financiall.AccountSubCode IN ('1','2','3','4') AND financiall.AccountCodeExtend  in ('101','201') THEN financiall.Debit-financiall.Credit ELSE 0 END),0 )) AS AccountancyAmount,
            'TaxExemption' AS AccountancyItemName,
            '1-15' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
         <!--計-->
         ((ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
           ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) +
         (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
          ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0))) AS AccountancyAccount,
         (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0','1') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0 ) -
          ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND  financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0 ) +
          ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend not in ('0','1','2') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0 ) ) AS AccountancyAmount,
          'AmountSubtoal' AS AccountancyItemName,
          '1-16' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--＜値引内訳＞-->
            <!--16  明細割引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('1','101') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('1','101') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('1','101') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'ItemDiscounts' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
          <!--17  明細値引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('2','102') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('2','102') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('2','102') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'ItemNebiki' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
          <!--18 イベント-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('10', '110') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('10', '110') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('10', '110') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'EventsName' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
          <!--19 社員販売-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('9', '109') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('9', '109') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('9', '109') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'EmployeeSales' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
       <!--20 小計割引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('4', '104') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('4', '104') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('4', '104') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'SubtotalDiscounts' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--21 小計値引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('5', '105') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('5', '105') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('5', '105') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'SubtotaNebiki' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!-- 計-->
            '0' AS AccountancyAccount,
            ISNULL ( SUM (CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '2' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '10' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '9' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '4' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '5' THEN financiall.Debit ELSE 0 END),0)) AS AccountancyAmount,
            'DicountsSubtotal' AS AccountancyItemName,
            '3' AS SalesOrPay
         FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
         AS financiall
         INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--＜ギフトカード販売-->
            <!--23 販売-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('3') THEN financiall.Count1 ELSE 0 END),0) )
              AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1') THEN financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('3') THEN financiall.Debit ELSE 0 END),0) )
             AS AccountancyAmount,
            'Sell' AS AccountancyItemName,
            '1-17' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--24 販売取消-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('4') THEN financiall.Count1 ELSE 0 END),0) )
              AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2') THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('4') THEN financiall.Credit ELSE 0 END),0) )
             AS AccountancyAmount,
            'SellCancel' AS AccountancyItemName,
            '1-18' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--計-->
             (ISNULL ( SUM (CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0)-
              ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            (ISNULL ( SUM (CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Debit ELSE 0 END),0)) AS AccountancyAmount,
            'SellSubtotal' AS AccountancyItemName,
            '1-19' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜前受金＞-->
            <!--26 前受金-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '3' THEN financiall.credit ELSE 0 END),0))AS AccountancyAmount,
            'Advances' AS AccountancyItemName,
            '1-20' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--27 前受金取消-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Credit ELSE 0 END),0)) AS AccountancyAmount,
            'AdvancesCancel' AS AccountancyItemName,
            '1-21' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
        (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--計-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Credit ELSE 0 END),0)) AS AccountancyAmount,
            'AdvancesSubtotal' AS AccountancyItemName,
            '1-22' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
        (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜金種別内訳＞-->
            <!--29 現金-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Count2 ELSE 0 END),0 )) AS AccountancyAccount,
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0 )) AS AccountancyAmount,
            'Cash' AS AccountancyItemName,
             '2-01' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--30 クレジット-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'Credit' AS AccountancyItemName,
            '2-02' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--31 銀聯-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'UnionPay' AS AccountancyItemName,
            '2-03' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--32 ギフトカード-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'GiftCard' AS AccountancyItemName,
            '2-04' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
           (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
       <!--33 商品券-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'GiftCertificates' AS AccountancyItemName,
            '2-05' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--34 振込入金-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'TransferPayment' AS AccountancyItemName,
            '2-06' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!--34 前受金売上-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) AS AccountancyAmount,
            'AdvancesSales' AS AccountancyItemName,
            '2-07' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--計-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Count2 ELSE 0 END),0 )+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1'  THEN financiall.Count2 ELSE 0 END),0)) as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0 )+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0)
             ) AS AccountancyAmount,
            'GoldSpeciesSubtotal' AS AccountancyItemName,
            '2-08' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜商品券内訳＞-->
            <!--47 回収金-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','2') THEN financiall.Amount3 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('4','3') THEN financiall.Amount3 ELSE 0 END),0)) as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount1 ELSE 0 END),0))
AS AccountancyAmount,
            'Collected' AS AccountancyItemName,
            '2-22' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!-- 払戻金-->
       (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('1','2') THEN financiall.Count1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('4','3') THEN financiall.Count1 ELSE 0 END),0)) +
(ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','2') THEN financiall.Count1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('4','3') THEN financiall.Count1 ELSE 0 END),0))
 AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount1 ELSE 0 END),0)) +
(ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount2 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount2 ELSE 0 END),0))
 AS AccountancyAmount,
            'Modokinn' AS AccountancyItemName,
            '2-23' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--48 中止回数-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '900' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) AS AccountancyAccount,
            '0' AS AccountancyAmount,
            'Discontinuation' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--49 両替回数-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '1201' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) AS AccountancyAccount,
            '0' AS AccountancyAmount,
            'Exchange' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜収入印紙＞-->
            <!--50 印紙200-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '200' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '200' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp200' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--51 印紙400-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '400' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '400' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp400' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--52 印紙600-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '600' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '600' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp600' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--53 印紙1000-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '1000' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '1000' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp1000' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
         )
         UNION ALL
       (SELECT
            <!--54 印紙2000-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '2000' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '2000' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp2000' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--55 印紙4000-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '4000' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '4000' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp4000' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜商品券内訳＞-->
            <!--36 買物券-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '91' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '91' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'CommonVoucher' AS AccountancyItemName,
            '2-09' AS SalesOrPay

        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
           UNION ALL
       (SELECT
            <!--37 ギフト券-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '92' THEN giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '92' THEN giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'CommonGift' AS AccountancyItemName,
            '2-10' AS SalesOrPay

        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--38 伊勢丹-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '93' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '93' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'IsetanGift' AS AccountancyItemName,
            '2-11' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
           <!--39 DC-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '01' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '01' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'DC' AS AccountancyItemName,
            '2-12' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--40 AMEX-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '02' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '02' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'AMEX' AS AccountancyItemName,
            '2-13' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--41 JCB-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '03' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '03' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'JCB' AS AccountancyItemName,
            '2-14' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--42 Diners-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '04' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '04' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Diners' AS AccountancyItemName,
            '2-15' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--43 三井-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '06' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '06' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Mitsui' AS AccountancyItemName,
            '2-16' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--44 軽井沢-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '08' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '08' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Prince' AS AccountancyItemName,
            '2-17' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!--45 Chel 2000-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '09' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '09' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Chel2000' AS AccountancyItemName,
            '2-18' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--45 Chel 1000-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '10' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '10' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Chel1000' AS AccountancyItemName,
            '2-19' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!--その他-->
             ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode NOT IN('91','92','93','01','02','03','04','06','08','10','09')  THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode NOT IN('91','92','93','01','02','03','04','06','08','10','09') THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Sonota' AS AccountancyItemName,
            '2-20' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--計-->
            ( ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' THEN  giftcertificate.Count ELSE 0 END),0) ) AS AccountancyAccount,
            ( ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' THEN  giftcertificate.Amount1 ELSE 0 END),0) ) AS AccountancyAmount,
            'GiftCertificatesSubtotal' AS AccountancyItemName,
            '2-21' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_GIFTCERTIFICATE
         AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
           UNION ALL
       (SELECT
            <!--11 客数-->
           (ISNULL  (SUM ( guestTillDay.SalesGuestCnt),0) -
            ISNULL ( SUM ( guestTillDay.ReturnGuestCnt),0) -
            ISNULL ( SUM ( guestTillDay.VoidGuestCnt),0)
            ) AS AccountancyAccount,
            '0' as AccountancyAmount,
            'Customers' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM RESTransaction.dbo.TXU_TOTAL_GUESTTILLDAY
        AS guestTillDay
        INNER JOIN
        (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                        ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                        ELSE COALESCE(storeinfo.StoreType, -1)
                                                        END
                                                        END
         ) storeinfo
         ON storeinfo.StoreId = guestTillDay.RetailStoreId
         WHERE guestTillDay.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN guestTillDay.RetailStoreId
                                       ELSE  @storeid  END
         AND guestTillDay.BusinessDayDate = @businessdaydate
         AND guestTillDay.TillID = CASE WHEN @tillid = '' THEN guestTillDay.TillID ELSE @tillid END

       )
) AS NT
ORDER BY SalesOrPay
</entry>

<entry key="get-guest-order-info-by-sequenceNo">
     DECLARE @RetailStoreId VARCHAR(20),
             @BusinessDate varchar(16),
             @TranNo numeric(5, 0),
             @TerminalNo varchar(6)

     SET @RetailStoreId= LTRIM(RTRIM(?))
   SET @TerminalNo =LTRIM(RTRIM(?))
     SET @TranNo = LTRIM(RTRIM(?))
     SET @BusinessDate = ?

     SELECT TOP 1 ps.GuestNo
     FROM   (
              (
                SELECT ord.GuestNo
              FROM   RESTransaction.dbo.TXL_POS_GUEST_ORDER ord
          WHERE  ord.RetailStoreId = @RetailStoreId
          AND    ord.TerminalNo = @TerminalNo
          AND    ord.TranNo = @TranNo
              AND    ord.BusinessDate = @BusinessDate
          AND    ord.StatusCode = '0'
            )
            UNION ALL
            (
              SELECT res.GuestNo
              FROM   RESTransaction.dbo.TXL_POS_GUEST_RESERVATION res
              WHERE  res.RetailStoreId=@RetailStoreId
            AND    res.TerminalNo=@TerminalNo
              AND    res.TranNo=@TranNo
              AND    res.BusinessDate=@BusinessDate
                AND    res.StatusCode='0'
            )
            ) AS ps
</entry>

<entry key="get-total-amount">
    SELECT
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '801' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.ChangeFund ELSE 0 END),0) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '201' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Loan ELSE 0 END),0) -
      ((ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount1 ELSE 0 END),0)-
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount1 ELSE 0 END),0)) +
      (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount2 ELSE 0 END),0)-
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount2 ELSE 0 END),0))) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS Cash,
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS Credit,
      ISNULL ( SUM ( CASE WHEN gift.AccountSubCode IN ('1','2','3','4') THEN gift.Amount2 ELSE 0 END), 0) AS GiftCard
    FROM RESTransaction.dbo.TXU_TOTAL_DRAWER_FINANCIALALL financiall
    LEFT JOIN RESTransaction.dbo.TXU_GIFTCERTIFICATE gift
    ON   financiall.AccountCode = gift.AccountCode
    AND  financiall.AccountSubCode = gift.AccountSubCode
    AND  financiall.TillID = gift.TillID
    AND  financiall.RetailStoreId = gift.RetailStoreId
    AND  financiall.BusinessDayDate = gift.BusinessDayDate
    WHERE financiall.RetailStoreId = ? AND financiall.TillID = ? AND financiall.BusinessDayDate = ?
</entry>

<entry key="get-premium-flag">
SET NOCOUNT ON
IF OBJECT_ID('tempdb..#TEMPTABLE') IS NOT NULL
BEGIN
    DROP TABLE #TEMPTABLE
END
IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
BEGIN
    DROP TABLE #TEMPLIST
END
IF OBJECT_ID('tempdb..#FLAGTABLE') IS NOT NULL
BEGIN
    DROP TABLE #FLAGTABLE
END
CREATE TABLE #FLAGTABLE
(
    DptId varchar(50),
    Flag varchar(2),
    primary key (DptId)
)
DECLARE
    @CompanyId VARCHAR (20),
    @BizCatId VARCHAR (20),
    @StoreId VARCHAR (20),
    @TerminalId VARCHAR (20),
    @DptId VARCHAR (20),
    @TargetType VARCHAR (20),
    @FLAG VARCHAR (20),
    @DptIdList VARCHAR(1000),
    @i INT,
    @splen INT,
    @spli VARCHAR(10)
SET @CompanyId = LTRIM(RTRIM(?))
SET @StoreId = LTRIM(RTRIM(?))
SET @TerminalId = LTRIM(RTRIM(?))
SET @DptIdList = LTRIM(RTRIM(?))
SELECT
    INFO.CompanyId,
    INFO.RecordId,
    INFO.TargetType,
    INFO.TargetFlag,
    INFO.PremiumName,
    INFO.DptTargetType,
    INFO.BizCatTargetType,
    INFO.StoreTargetType,
    INFO.PosTargetType,
    STORE.BizCatId,
    STORE.StoreId,
    STORE.TerminalId,
    DETAIL.DptId
INTO
     #TEMPTABLE
FROM
    RESMaster.DBO.MST_PREMIUM_INFO INFO
INNER JOIN RESMaster.DBO.MST_PREMIUM_STORE STORE ON INFO.CompanyId = STORE.CompanyId
AND INFO.RecordId = STORE.RecordId
INNER JOIN RESMaster.DBO.MST_PREMIUM_DETAIL DETAIL ON INFO.CompanyId = DETAIL.CompanyId
AND INFO.RecordId = DETAIL.RecordId
WHERE
    INFO.DeleteFlag = 0.0
AND STORE.DeleteFlag = 0.0
AND DETAIL.DeleteFlag = 0.0
AND INFO.CompanyId = @CompanyId

SET @BizCatId = (
        SELECT
            %s
        FROM
            RESMaster.DBO.MST_STOREINFO
        WHERE
            CompanyId = @CompanyId
        AND StoreId = @StoreId
        AND DeleteFlag = 0.0
    )
SET @TargetType =
    (
        CASE
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '4'
            AND BizCatId = @BizCatId
            AND StoreId = @StoreId
            AND TerminalId = @TerminalId
        ) &gt; 0
        THEN
            '4'
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '3'
            AND BizCatId = @BizCatId
            AND StoreId = @StoreId
            AND TerminalId = '0000'
        ) &gt; 0
        THEN
            '3'
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '2'
            AND BizCatId = @BizCatId
            AND StoreId = '0'
            AND TerminalId = '0000'
        ) &gt; 0
        THEN
            '2'
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '1'
            AND BizCatId = '0000'
            AND StoreId = '0'
            AND TerminalId = '0000'
        ) &gt; 0
        THEN
            '1'
        ELSE
            '0'
        END
    )
IF @TargetType &gt; '0'
    BEGIN
        SET @BizCatId = (
            CASE
                WHEN @TargetType = '1'
                THEN
                    '0000'
                ELSE
                    @BizCatId
            END
        )
        SET @StoreId = (
            CASE
                WHEN @TargetType = '1'
                OR @TargetType = '2'
                THEN
                    '0'
                ELSE
                    @StoreId
            END
        )
        SET @TerminalId = (
            CASE
                WHEN @TargetType = '1'
                OR @TargetType = '2'
                OR @TargetType = '3'
                THEN
                    '0000'
                ELSE
                    @TerminalId
            END
        )
        SELECT
            *
        INTO
            #TEMPLIST
        FROM
            #TEMPTABLE
        WHERE
            TargetType = @TargetType
        AND BizCatId = @BizCatId
        AND StoreId = @StoreId
        AND TerminalId = @TerminalId

        SET @spli = ','
        SET @DptIdList = @DptIdList + ','
        SET @splen = len(@spli)
        SET @i = CHARINDEX(@spli,@DptIdList)
        WHILE @i &gt; 0
        BEGIN
            SET @DptId = left(@DptIdList,@i-1)
            IF @DptId &lt;&gt; ''
            BEGIN
                SET @FLAG =
                 CASE
                    WHEN EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 1
                        AND DptTargetType = 1
                    ) THEN
                        '1'
                    WHEN NOT EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 1
                        AND DptTargetType = 1
                    ) THEN
                        '0'
                    WHEN EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 0
                        AND DptTargetType = 1
                    ) THEN
                        '0'
                    WHEN NOT EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 0
                        AND DptTargetType = 1
                    ) THEN
                        '1'
                    WHEN EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            TargetFlag = 0
                        AND DptTargetType = 0
                    ) THEN
                        '0'
                END
                INSERT INTO #FLAGTABLE (DptId,Flag) values (@DptId,@Flag)
            END
            SET @DptIdList = SUBSTRING(@DptIdList,@i+@splen,8000)
            SET @i = CHARINDEX(@spli,@DptIdList)
            END
        END
SELECT DptId,Flag FROM #FLAGTABLE WHERE Flag = 1
</entry>

<entry key="get-card-class-info-list">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @cardClassId varchar(max)

    SET @companyId = ?
    SET @storeId = ?

    SELECT
      CompanyId,
      StoreId,
      CardClassId,
      CardClassName,
      CardClassKanaName,
      CardClassShortName,
      CardClassShortKanaName,
      CreditType,
      MaincardDigitType,
      RankType,
      SubCode1
    FROM
      RESMaster.dbo.MST_CARD_CLASSINFO
    WHERE
      CompanyId = @companyId AND
      (StoreId = @storeId OR StoreId = '0') AND
      DeleteFlag = 0.0
</entry>

<entry key="get-card-class-info-all">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @cardClassId varchar(max)

    SET @companyId = ?
    SET @storeId = ?
    SET @cardClassId = NULLIF(?, '')

    IF NOT EXISTS (
      SELECT
        CompanyId,
        StoreId,
        CardClassId
      FROM
        RESMaster.dbo.MST_CARD_CLASSINFO
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        CardClassId = COALESCE(@cardClassId, CardClassId) AND
        DeleteFlag = 0.0
    )
      SET @storeId = '0'

    SELECT
      CompanyId,
      StoreId,
      CardClassId,
      CardClassName,
      CardClassKanaName,
      CardClassShortName,
      CardClassShortKanaName,
      CreditType,
      MaincardDigitType,
      RankType
    FROM
      RESMaster.dbo.MST_CARD_CLASSINFO
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      CardClassId = COALESCE(@cardClassId, CardClassId) AND
      DeleteFlag = 0.0
</entry>

<entry key="get-card-class-info-member">
    DECLARE
      @companyId varchar(12),
      @storeId varchar(6),
      @membershipId varchar(16),
      @classStoreId varchar(6)

  SET @companyId = ?
  SET @storeId = ?
  SET @membershipId = ?
  SET @classStoreId = @storeId

  IF NOT EXISTS (
     SELECT *
     FROM
       RESMaster.dbo.MST_CARD_TYPEINFO typeInfo
     WHERE
       typeInfo.CompanyId = @companyId AND
       typeInfo.StoreId = @storeId AND
       typeInfo.CardClassId = classInfo.CardClassId AND
       (typeInfo.PrefixCode16From = @membershipId OR
       typeInfo.PrefixCode16To = @membershipId OR
       typeInfo.PrefixCode13 = @membershipId) AND
       typeInfo.DeleteFlag = 0.0
  )
  SET @storeId = '0'

  IF NOT EXISTS (
     SELECT *
     FROM
       RESMaster.dbo.MST_CARD_TYPEINFO typeInfo, RESMaster.dbo.MST_CARD_CLASSINFO classInfo
     WHERE
       classInfo.CompanyId = @companyId AND
       classInfo.StoreId = @classStoreId AND
       typeInfo.CardClassId = classInfo.CardClassId
       (typeInfo.PrefixCode16From = @membershipId OR
       typeInfo.PrefixCode16To = @membershipId OR
       typeInfo.PrefixCode13 = @membershipId) AND
       typeInfo.DeleteFlag = 0.0 AND
       classInfo.DeleteFlag = 0.0
  )
  SET @classStoreId = '0'

  SELECT
    typeInfo.CompanyId,
    typeInfo.StoreId,
    typeInfo.CardClassId,
    typeInfo.CardStatusType,
    classInfo.CardClassName,
    classInfo.CardClassKanaName,
    classInfo.CardClassShortName,
    classInfo.CardClassShortKanaName,
    classInfo.CreditType,
    classInfo.MaincardDigitType,
    classInfo.RankType
  FROM
    RESMaster.dbo.MST_CARD_TYPEINFO typeInfo
  LEFT JOIN RESMaster.dbo.MST_CARD_CLASSINFO classInfo
    ON typeInfo.CompanyId = classInfo.CompanyId AND
    classInfo.StoreId = @classStoreId AND
    typeInfo.CardClassId = classInfo.CardClassId AND
    classInfo.DeleteFlag = 0.0
  WHERE
    typeInfo.CompanyId = @companyId AND
    typeInfo.StoreId = @storeId AND
    typeInfo.CardClassId = classInfo.CardClassId AND
    (typeInfo.PrefixCode16From = @membershipId OR
    typeInfo.PrefixCode16To = @membershipId OR
    typeInfo.PrefixCode13 = @membershipId) AND
    typeInfo.DeleteFlag = 0.0
</entry>

<entry key="get-nationality-info-all">
  DECLARE
      @companyId varchar(max),
      @storeId varchar(max)

    SET @companyId = ?
    SET @storeId = ?

    IF NOT EXISTS (
      SELECT
        *
      FROM
        RESMaster.dbo.MST_NATIONALITYINFO
      WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
    )
      SET @storeId = '0'

    SELECT
      CompanyId,
      StoreId,
      NationalityId,
      NationalityName,
      NationalityKanaName,
      NationalityShortName,
      NationalityShortKanaName
    FROM
      RESMaster.dbo.MST_NATIONALITYINFO
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
</entry>

<entry key="get-customer-class-info-all">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max)

    SET @companyId = ?
    SET @storeId = ?

    IF NOT EXISTS (
      SELECT
        *
      FROM
        RESMaster.dbo.MST_CUSTOMERCLASS
      WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
    )
      SET @storeId = '0'

    SELECT
      CompanyId,
      StoreId,
      CustomerClassId,
      CustomerClassName,
      CustomerClassKanaName,
      GenerationType,
      SexType,
      OtherType
    FROM
      RESMaster.dbo.MST_CUSTOMERCLASS
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
    ORDER BY DisplayOrder
</entry>

<entry key="get-buyadditional-info-all">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max)

    SET @companyId = ?
    SET @storeId = ?

    IF NOT EXISTS (
      SELECT
        *
      FROM
        RESMaster.dbo.MST_BUYADDITIONALINFO
      WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
    )
      SET @storeId = '0'

    SELECT
      CompanyId,
      StoreId,
      BuyAdditionalInfoId,
      BuyAdditionalInfoName,
      BuyAdditionalInfoKanaName,
      BuyAdditionalInfoShortName,
      BuyAdditionalInfoShortKanaName
    FROM
      RESMaster.dbo.MST_BUYADDITIONALINFO
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
</entry>

<entry key="get-barcode-type">
  DECLARE
      @storeId varchar(max),
      @companyId varchar(max),
      @cardType varchar(max),
      @seqNo int,
      @discountType varchar(max)

    SET @storeId = ?
    SET @companyId = ?
    SET @cardType = ?
    SET @seqNo = ?
    SET @discountType = ?

    IF NOT EXISTS (
      SELECT
        *
      FROM
        RESMaster.dbo.MST_PRICE_DISCOUNT
      WHERE
        StoreId = @storeId  AND
        CompanyId = @companyId AND
        CardType = @cardType AND
        SeqNo = @seqNo AND
        DiscountType = @discountType AND
        DeleteFlag = 0.0
    )
      SET @storeId = '0'

  SELECT
    CompanyId,
    StoreId,
    CardType,
    SeqNo,
    SubNo,
    DiscountType,
    DiscountClass,
    Dpt,
    MdInternal,
    DiscountRefType,
    DiscountValue,
    StartDate,
    EndDateRefType,
    EndDate,
    EntryDate,
    DiscountName,
    SubCode1,
    SubCode2,
    SubCode3,
    SubCode4,
    SubCode5,
    SubNum1,
    SubNum2,
    SubNum3,
    SubNum4,
    SubNum5,
    DeleteFlag
  FROM
    RESMaster.dbo.MST_PRICE_DISCOUNT
  WHERE
    StoreId = @storeId AND
    CompanyId = @companyId AND
    CardType = @cardType AND
    SeqNo = @seqNo AND
    DiscountType = @discountType AND
    DeleteFlag = 0.0
</entry>

<entry key="get-voucher-list">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @businessDayDate date,
      @trainingFlag tinyint,
      @origStoreId varchar(max)

    SET @companyId = ?
    SET @storeId = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    SET @origStoreId = @storeId

    IF NOT EXISTS (
      SELECT
        *
      FROM
        RESMaster.dbo.MST_TENDERINFO tender
      WHERE
        tender.CompanyId = @companyId AND
        tender.StoreId = @storeId AND
        tender.TenderType = 1 AND
        tender.DeleteFlag = 0.0
    )
      SET @storeId = '0'

     SELECT
      tender.CompanyId,
      tender.StoreId,
      tender.TenderId,
      tender.TenderType,
      tender.TenderName,
      tender.TenderKanaName
    FROM
      RESMaster.dbo.MST_TENDERINFO tender
    WHERE
      tender.CompanyId = @companyId AND
      tender.StoreId = @storeId AND
      (tender.TenderType = 10 OR
      tender.TenderType = 11 )AND
      tender.DeleteFlag = 0.0
</entry>

<entry key = "get-promotioninfo-type">
DECLARE
    @companyId VARCHAR (MAX),
    @storeId VARCHAR (MAX),
    @promotionId VARCHAR (MAX),
    @discountReason VARCHAR (MAX),
    @discountBarcodeType VARCHAR (MAX),
    @partialFlag VARCHAR (MAX)
SET @companyId = LTRIM(RTRIM(?))
SET @storeId = LTRIM(RTRIM(?))
SET @discountReason = LTRIM(RTRIM(?))
SET @discountBarcodeType = LTRIM(RTRIM(?))
SET @partialFlag = LTRIM(RTRIM(?))

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PRICE_PROMOTION
       WHERE
        PartialFlag = @partialFlag
        AND (
            DiscountReason = @discountReason
        OR  DiscountBarcodeType = @discountBarcodeType
        )
        AND CompanyId = @companyId
        AND StoreId = @storeId
        AND DeleteFlag = 0.0
    )
    SET @storeId = '0'

    SELECT
        CompanyId,
        StoreId,
        PromotionId,
        PromotionName,
        ReceiptName,
        DiscountReason,
        DiscountReasonName,
        PromotionType,
        DiscountType,
        InputFlag,
        PartialFlag,
        RateDiscountFlag,
        PriceDiscountFlag,
        ButtonFlag,
        BarcodeFlag,
        BarcodeDigit,
        BarcodeStartCode,
        BarcodeEndCode,
        BarcodeIdCode1,
        BarcodeIdStartIndex1,
        BarcodeIdStartDigit1,
        BarcodeIdCode2,
        BarcodeIdStartIndex2,
        BarcodeIdStartDigit2,
        PointCombinationUseFlag,
        PointAddFlag,
        DiscountBarcodeType,
        DeleteFlag
    FROM
        RESMaster.dbo.MST_PRICE_PROMOTION
    WHERE
        PartialFlag = @partialFlag
    AND (
        DiscountReason = @discountReason
    OR  DiscountBarcodeType = @discountBarcodeType
    )
    AND CompanyId = @companyId
    AND StoreId = @storeId
    AND DeleteFlag = 0.0
</entry>

<entry key="get-company-info">
      SELECT company.CompanyId,
             company.CompanyName,
             company.CompanyKanaName,
             company.CompanyShortName,
             company.CompanyShortKanaName,
             company.DisplayOrder,
             company.SubCode1,
             company.SubCode2,
             company.SubCode3,
             company.SubCode4,
             company.SubCode5,
             company.SubNum1,
             company.SubNum2,
             company.SubNum3,
             company.SubNum4,
             company.SubNum5
      FROM
        RESMaster.dbo.MST_COMPANYINFO company
      WHERE
        company.DeleteFlag = 0.0
</entry>

<entry key="get-terminal-info">
      DECLARE
        @companyId varchar(max),
        @storeId varchar(max),
        @terminalId varchar(max)

      SET @companyId = ?
      SET @storeId = ?
      SET @terminalId = ?

      SELECT
        term.CompanyId,
        term.StoreId,
        term.TerminalId,
        term.FloorId,
        term.TerminalName,
        term.IPAddress,
        term.StoreClass,
        term.TerminalType,
        term.TillType,
        term.RelationType,
        term.ConnectionFlag1,
        term.ConnectionFlag2,
        term.ConnectionFlag3,
        term.ConnectionFlag4,
        term.ConnectionFlag5,
        term.ConnectionFlag6,
        term.ConnectionFlag7,
        term.ConnectionFlag8,
        term.LogoFileName,
        term.InshiFileName,
        term.SubCode1,
        term.SubCode2,
        term.SubCode5,
        term.Note,
        company.SubCode2 As CompanyName
      FROM
        RESMaster.dbo.MST_TERMINALINFO term
      LEFT JOIN
        RESMaster.dbo.MST_COMPANYINFO company
      ON
      term.CompanyId = company.CompanyId
      AND company.DeleteFlag = 0.0
      WHERE
        term.CompanyId = @companyId AND
        term.StoreId = @storeId AND
        term.TerminalId = @terminalId AND
        term.DeleteFlag = 0.0
</entry>

<entry key="check-floorid-exist">
      DECLARE
        @companyId varchar(max),
        @storeId varchar(max),
        @floorId varchar(max),
        @terminalId varchar(max)

      SET @companyId = ?
      SET @storeId = ?
      SET @floorId = ?
      SET @terminalId = ?

      SELECT
        FloorId
      FROM
        RESMaster.dbo.MST_TERMINALINFO
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        FloorId = @floorId AND
        TerminalId != @terminalId AND
        DeleteFlag = 0.0 AND
        TerminalType = 2
</entry>

<entry key="insert-eventlog">
      DECLARE
        @companyId varchar(8),
        @retailStoreId varchar(8),
        @workstationId varchar(8),
        @training int,
        @sequenceNumber int,
        @childNumber int,
        @businessDayDate varchar(32),
        @log varchar(max)
      SET @companyId = ?
      SET @retailStoreId = ?
      SET @workstationId = ?
      SET @training = ?
      SET @sequenceNumber = ?
      SET @childNumber = ?
      SET @businessDayDate = ?
      SET @log = ?

      insert into RESTransaction.dbo.TXL_ope_event
             (companyId, retailStoreId, workstationId, trainingFlag, sequenceNumber,
                                 childNumber, businessDayDate, log, insDateTime)
      values (@companyId, @retailStoreId, @workstationId, @training, @sequenceNumber,
                                 @childNumber, @businessDayDate, @log, sysdatetime())
</entry>

<entry key="select-eventlog">
      DECLARE
        @companyId varchar(8),
        @retailStoreId varchar(8),
        @workstationId varchar(8),
        @training int,
        @sequenceNumber int
      SET @companyId = ?
      SET @retailStoreId = ?
      SET @workstationId = ?
      SET @training = ?
      SET @sequenceNumber = ?

      select log from RESTransaction.dbo.TXL_ope_event
      where companyId = @companyId and retailStoreId = @retailStoreId and workstationId = @workstationId
        and trainingFlag = @training and sequenceNumber = @sequenceNumber
      order by childNumber asc
</entry>

<entry key="get-transaction-count">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @txtype varchar(max),
      @trainingFlag tinyint

    SET @companyId = ?
    SET @storeId = ?
    SET @txtype = ?
    SET @trainingFlag = ?

    SELECT
      COUNT(*) AS TxCount
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      TxType = @txtype AND
      TrainingFlag = @trainingFlag
</entry>

<entry key="get-tx-count-by-businessdate">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @workStationId varchar(max),
      @txtype varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint

    SET @companyId = ?
    SET @storeId = ?
    SET @workStationId = ?
    SET @txtype = ?
    SET @businessDate = ?
    SET @trainingFlag = ?

    SELECT
      COUNT(*) AS TxCount
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      WorkstationId = @workStationId AND
      TxType = @txtype AND
      BusinessDayDate = @businessDate AND
      TrainingFlag = @trainingFlag
</entry>

<entry key="get-card-type-info">
        DECLARE
          @companyId varchar(max),
          @storeId varchar(max),
          @cardTypeNo varchar(max)

        SET @companyId = ?
        SET @storeId = ?
        SET @cardTypeNo = ?


   IF NOT EXISTS (
      SELECT *
      FROM
        RESMaster.dbo.MST_CARD_TYPEINFO
      WHERE
           CompanyId = @companyId AND
           StoreId = @storeId AND
           CardTypeId = @cardTypeNo AND
           DeleteFlag = 0.0
   )
   SET @storeId = '0'

      SELECT
        CompanyId,
        StoreId,
        CardTypeId,
        CardTypeName,
        CardTypeKanaName,
        CardTypeShortName,
        CardTypeShortKanaName,
        TerminalCompanyId,
        CardClassId,
        MemberType,
        MemberRank,
        NewRegistFlag,
        CardMergeFlag,
        PointExpDatePrintFlag,
        DisplayDigitType,
        PrintDigitType,
        CardCategory,
        PointAllowanceFlag,
        PointExpDateAddMonth,
        SubCode1,
        UCUseArea,
        PrefixCode16From,
        PrefixCode16To,
        PrefixCode13,
        CardStatusType,
        MagneticDataType,
        OwnCreditFlag
      FROM
        RESMaster.dbo.MST_CARD_TYPEINFO
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        CardTypeId = @cardTypeNo AND
        DeleteFlag = 0.0
</entry>

<entry key="get-last-pay-tx-poslog">
  DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint

    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?

    SELECT TOP 1
      Tx,
      InsDateTime
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      WorkStationId = @terminalId AND
      BusinessDayDate = @businessDate AND
      TrainingFlag = @trainingFlag AND
      (LOWER(TxType) = 'payin' OR
      LOWER(TxType) = 'payout')
    ORDER BY
      InsDateTime DESC
</entry>

<entry key="get-last-balancing-tx-poslog">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint

    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?

    SELECT TOP 1
      Tx,
      InsDateTime
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      WorkStationId = @terminalId AND
      BusinessDayDate = @businessDate AND
      TrainingFlag = @trainingFlag AND
      LOWER(TxType) = 'balancing'
    ORDER BY
      InsDateTime DESC
</entry>

<entry key = "get-member-info">
  DECLARE @companyId varchar(max), @storeId varchar(max), @memberId2 varchar(max)
      SET @companyId = ?
      SET @storeId = ?
      SET @memberId2 = ?

  IF NOT EXISTS (
     SELECT *
     FROM
       RESMaster.dbo.MST_MEMBERINFO
     WHERE
       CompanyId = @companyId
       AND StoreId = @storeId
       AND MemberId2 = @memberId2
       AND DeleteFlag = 0.0
  )
  SET @storeId = '0'

  SELECT TOP 1
  CompanyId,
  StoreId,
  MemberId,
  CardCompanyId,
  MemberId1,
  MemberId2,
  CardType,
  MemberRank,
  MemberStatus,
  MemberType,
  MemberTypeNext,
  MemberTypeUpdDate,
  SubCode1,
  SubCode2,
  SubCode3,
  SubCode4,
  SubCode5,
  SubNum1,
  SubNum2,
  SubNum3,
  SubNum4,
  SubNum5
  FROM RESMaster.dbo.MST_MEMBERINFO
  WHERE
  CompanyId = @companyId
  AND StoreId = @storeId
  AND MemberId2 = @memberId2
  AND DeleteFlag = 0.0
</entry>

<entry key = "get-status-info">
  DECLARE @companyId varchar(max), @storeId varchar(max), @memberStatus varchar(max)
      SET @companyId = ?
      SET @storeId = ?
      SET @memberStatus = ?

  IF NOT EXISTS (
     SELECT *
     FROM
       RESMaster.dbo.MST_MEMBERSTATUS
     WHERE
       CompanyId = @companyId
     AND StoreId = @storeId
     AND MemberStatus = @memberStatus
     AND DeleteFlag = 0.0
  )
  SET @storeId = '0'

  SELECT TOP 1
  CompanyId,
  StoreId,
  MemberStatus,
  MemberStatusName,
  RegisterFlag,
  PointAddFlag,
  PointUseFlag,
  SubCode1,
  SubCode2,
  SubCode3,
  SubCode4,
  SubCode5,
  SubNum1,
  SubNum2,
  SubNum3,
  SubNum4,
  SubNum5
  FROM RESMaster.dbo.MST_MEMBERSTATUS
  WHERE
  CompanyId = @companyId
  AND StoreId = @storeId
  AND MemberStatus = @memberStatus
  AND DeleteFlag = 0.0
</entry>

<entry key="get-all-card-type-info">
        DECLARE
          @companyId varchar(max),
          @storeId varchar(max)

        SET @companyId = ?
        SET @storeId = ?

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_CARD_TYPEINFO
       WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
    )
    SET @storeId = '0'

        SELECT
          CompanyId,
          StoreId,
          CardClassId,
          CardTypeId,
          CardTypeName,
          CardTypeKanaName,
          CardTypeShortName,
          CardTypeShortKanaName,
          TerminalCompanyId,
          CardClassId,
          MemberType,
          MemberRank,
          NewRegistFlag,
          CardMergeFlag,
          PointExpDatePrintFlag,
          DisplayDigitType,
          PrintDigitType,
          CardCategory,
          PointAllowanceFlag,
          PointExpDateAddMonth,
          SubCode1,
          UCUseArea,
          PrefixCode16From,
          PrefixCode16To,
          PrefixCode13,
          CardStatusType,
          MagneticDataType,
          OwnCreditFlag
        FROM
          RESMaster.dbo.MST_CARD_TYPEINFO
        WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
</entry>

<entry key="get-lock-status">
    DECLARE
      @companyId varchar(max),
      @retailStoreId varchar(max),
      @workstationId varchar(max),
      @sequenceNumber int,
      @businessDayDate date,
      @trainingFlag tinyint

    SET @companyId = ?
    SET @retailStoreId = ?
    SET @workstationId = ?
    SET @sequenceNumber = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?

    SELECT
      Status
    FROM
      RESTransaction.dbo.TXL_TRAN_LOCK
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @retailStoreId AND
      WorkstationId = @workstationId AND
      SequenceNumber = @sequenceNumber AND
      BusinessDayDate = @businessDayDate AND
      TrainingFlag = @trainingFlag
</entry>

<entry key="insert-lock">
    DECLARE
      @companyId varchar(max),
      @retailStoreId varchar(max),
      @workstationId varchar(max),
      @sequenceNumber int,
      @businessDayDate date,
      @trainingFlag tinyint,
      @callType varchar(max),
      @status tinyint,
      @callerCompanyId varchar(max),
      @callerRetailStoreId varchar(max),
      @callerWorkstationId varchar(max),
      @insAppId varchar(max),
      @insOpeCode varchar(max),
      @updAppId varchar(max),
      @updOpeCode varchar(max)

    SET @companyId = ?
    SET @retailStoreId = ?
    SET @workstationId = ?
    SET @sequenceNumber = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    SET @CallType = ?
    SET @Status = ?
    SET @callerCompanyId = ?
    SET @callerRetailStoreId = ?
    SET @callerWorkstationId = ?
    SET @insAppId = ?
    SET @insOpeCode = ?
    SET @updAppId = ?
    SET @updOpeCode = ?

    INSERT INTO RESTransaction.dbo.TXL_TRAN_LOCK
      (CompanyId,
       RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       TrainingFlag,
       CallType,
       Status,
       CallerCompanyId,
       CallerRetailStoreId,
       CallerWorkstationId,
       InsDate,
       InsAppId,
       InsOpeCode,
       UpdDate,
       UpdAppId,
       UpdOpeCode)
    VALUES
      (@companyId,
       @retailStoreId,
       @workstationId,
       @sequenceNumber,
       @businessDayDate,
       @trainingFlag,
       @callType,
       @status,
       @callerCompanyId,
       @callerRetailStoreId,
       @callerWorkstationId,
       SYSDATETIME(),
       @insAppId,
       @insOpeCode,
       SYSDATETIME(),
       @updAppId,
       @updOpeCode);
</entry>

<entry key="delete-lock">
    DECLARE
      @companyId varchar(max),
      @retailStoreId varchar(max),
      @workstationId varchar(max),
      @sequenceNumber int,
      @businessDayDate date,
      @trainingFlag tinyint

    SET @companyId = ?
    SET @retailStoreId = ?
    SET @workstationId = ?
    SET @sequenceNumber = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    DELETE FROM
      RESTransaction.dbo.TXL_TRAN_LOCK
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @retailStoreId AND
      WorkstationId = @workstationId AND
      SequenceNumber = @sequenceNumber AND
      BusinessDayDate = @businessDayDate AND
      TrainingFlag = @trainingFlag
</entry>

<entry key="get-preset-cm-info">
      DECLARE
      @companyId varchar(12),
      @storeId varchar(10),
      @terminalId varchar(6),
      @bizCatId varchar(20),
      @businessDayDate date

      SET @companyId = ?
      SET @storeId = ?
      SET @terminalId = ?
      SET @businessDayDate = ?
      SET @bizCatId = (
              SELECT %s
              FROM RESMaster.dbo.MST_STOREINFO
              WHERE CompanyId = @companyId AND StoreId = @storeId AND DeleteFlag = 0.0
            )
    SELECT
     TOP 1
      *
    FROM
      RESMaster.dbo.MST_PRESET_CMINFO
    WHERE
      CompanyId = @companyId
    AND
      (@businessDayDate BETWEEN StartDate AND EndDate)
    AND
      DeleteFlag = 0.0
    AND(
         (CMType ='1' AND BizCatId = '0' AND StoreId = '0' AND TerminalId = '0')
        OR (CMType ='2' AND BizCatId = @bizCatId AND StoreId = '0' AND TerminalId = '0')
        OR (CMType ='3' AND BizCatId = @bizCatId AND StoreId = @storeId AND TerminalId = '0')
        OR (CMType ='4' AND BizCatId = @bizCatId AND StoreId = @storeId AND TerminalId = @terminalId)
    )
 ORDER BY CMType DESC,UpdDate DESC

</entry>

<entry key="get-picklist-items">
    DECLARE
      @companyId varchar(12),
      @storeId varchar(10),
      @itemType varchar(10)

      SET @companyId = ?
      SET @storeId = ?
      SET @itemType = ?

  IF NOT EXISTS (
    SELECT
      CompanyId, StoreId, RecordId
    FROM
      RESMaster.dbo.MST_PRESET_TOUCHITEM
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      ItemType = COALESCE(@itemType, ItemType) AND
      DeleteFlag = 0.0
  )
   SET @storeId = '0'

    SELECT
      CompanyId, StoreId, RecordId, ItemType, DisplayOrder, MdInternal, ItemName
    FROM
      RESMaster.dbo.MST_PRESET_TOUCHITEM
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      ItemType = COALESCE(@itemType, ItemType) AND
      DeleteFlag = 0.0
    ORDER BY
      ItemType, DisplayOrder
</entry>

<entry key="get-preset-storeinfo">
    DECLARE @companyId VARCHAR(12),@storeId VARCHAR(10),@TerminalId VARCHAR(6)
    SET @companyId = ?
    SET @storeId = ?
    SET @TerminalId = ?

    SELECT
    company.CompanyName,
    CASE WHEN
    presetStore.ReceiptStoreName IS NOT NULL
    THEN presetStore.ReceiptStoreName
    ELSE store.SubCode15 END ReceiptStoreName,
    CASE WHEN
    presetStore.ReceiptTelNo IS NOT NULL
    THEN presetStore.ReceiptTelNo
    ELSE store.StoreTel END ReceiptTelNo,
    CASE WHEN
    presetStore.FormalReceiptStoreName IS NOT NULL
    THEN presetStore.FormalReceiptStoreName
    ELSE store.SubCode15 END FormalReceiptStoreName,
    CASE WHEN
    presetStore.FormalReceiptTelNo IS NOT NULL
    THEN presetStore.FormalReceiptTelNo
    ELSE store.StoreTel END FormalReceiptTelNo,
    store.StoreName,
    store.StoreShortName,
    store.StoreKubun,
    store.StoreZip,
    store.StoreAddr,
    store.StoreAddr1,
    store.StoreAddr2,
    store.StoreFax,
    store.Ads,
    store.CdMsg,
    store.ElectroFilePath,
    store.StampTaxFilePath,
    store.StoreCompCode,
    store.SubCode1,
    store.SubCode2,
    store.SubCode3,
    store.SubCode4,
    store.SubCode5,
    store.SubCode6,
    store.SubCode7,
    store.SubCode8,
    store.SubCode9,
    store.SubCode10,
    store.SubCode11,
    store.SubCode12,
    store.SubCode13,
    store.SubCode14,
    store.SubCode16,
    store.SubCode17,
    store.SubNum1,
    store.HostUpdDate,
    store.Status
    FROM
     RESMaster.dbo.MST_COMPANYINFO company
    LEFT JOIN
     RESMaster.dbo.MST_STOREINFO store
    ON
    company.CompanyId = store.CompanyId
    AND
    store.StoreId = @storeId
    AND
    store.DeleteFlag = 0.0
    LEFT JOIN
     RESMaster.dbo.MST_PRESET_STOREINFO presetStore
    ON
    store.CompanyId = presetStore.CompanyId
    AND
    store.StoreId = presetStore.StoreId
    AND
    presetStore.TerminalId = @TerminalId
    AND
    presetStore.DeleteFlag = 0.0
    WHERE
    company.CompanyId = @companyId
    AND
    company.DeleteFlag = 0.0
</entry>

<entry key="get-subNum1">
    SELECT
    SubNum1
    FROM
      RESMaster.dbo.MST_DEVICEINFO
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active' AND
      DeleteFlag = 0.0
</entry>

<entry key="update-subNum1">
    UPDATE
    RESMaster.dbo.MST_DEVICEINFO
    SET
      SubNum1 = ?
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active' AND
      DeleteFlag = 0.0
</entry>

<entry key="get-item-byapidata">
DECLARE    @companyId VARCHAR(12), @MdInternal VARCHAR(32)
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @MdInternal = LTRIM(RTRIM(?))
SELECT
       plu.CompanyId,
       plu.StoreId,
       plu.MdInternal,
       plu.MdType,
       plu.MdVender,
       plu.Dpt,
       plu.Line,
       plu.Class,
       plu.Sku,
       plu.Md01,
       plu.Md02,
       plu.Md03,
       plu.Md04,
       plu.Md05,
       plu.Md06,
       plu.Md07,
       plu.Md08,
       plu.Md09,
       plu.Md10,
       plu.Md11,
       plu.Md12,
       plu.Md13,
       plu.Md14,
       plu.Md15,
       plu.Md16,
       plu.MdNameLocal,
       plu.MdKanaName,
       plu.OrgSalesPrice1,
       plu.SalesPrice1,
       plu.SalesPrice2,
       plu.CostPrice1,
       plu.SalesDate,
       plu.MakerPrice,
       plu.TaxType,
       plu.TaxRate,
       plu.DiscountType,
       plu.PaymentType,
       plu.Conn1,
       plu.ConnType1,
       plu.Conn2,
       plu.DiscountFlag,
       plu.SubCode1,
       plu.SubCode2,
       plu.SubCode3,
       plu.SubNum1,
       plu.SubNum2,
       plu.DeleteFlag,
       plu.DelDate,
       plu.DelAppId,
       plu.DelOpeCode,
       plu.InsDate,
       plu.InsAppId,
       plu.InsOpeCode,
       plu.UpdCount,
       plu.UpdDate,
       plu.UpdAppId,
       plu.UpdOpeCode,
       plu.DiscountType,
       colorInfo.Colorkananame,
       sizeInfo.SizeKanaName
FROM
  RESMaster.dbo.MST_PLU plu

LEFT JOIN RESMaster.dbo.MST_COLORINFO colorInfo
ON plu.CompanyId = colorInfo.CompanyId
AND plu.StoreId = colorInfo.StoreId
AND plu.Md01 = colorInfo.ColorId
AND colorInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_SIZEINFO sizeInfo
ON plu.CompanyId = sizeInfo.CompanyId
AND plu.StoreId = sizeInfo.StoreId
AND plu.Md05 = sizeInfo.SizeId

WHERE plu.companyId = @companyId
AND plu.MdInternal = @MdInternal
AND plu.StoreId = '0'
AND plu.DeleteFlag = 0.0
</entry>

<entry key="get-isMemberCard-info">
DECLARE  @MdInternal VARCHAR(32)
    SET  @MdInternal = LTRIM(RTRIM(?))
    SELECT
        CompanyId,
        StoreId,
        CardTypeId,
        PrefixCode13,
        PrefixCode16From,
        PrefixCode16To,
        NewRegistFlag,
        SubCode2,
        SubCode3
    FROM RESMaster.dbo.MST_CARD_TYPEINFO
    WHERE
    DeleteFlag = 0.0

</entry>

<entry key="get-item-price">
DECLARE    @storeId VARCHAR(10), @companyId VARCHAR(12), @MdInternal VARCHAR(32), @businessDate VARCHAR(32),
           @storeStoreId VARCHAR(10)
    SET    @storeId = LTRIM(RTRIM(?))
    SET    @companyId = LTRIM(RTRIM(?))
    SET    @MdInternal = LTRIM(RTRIM(?))
    SET    @businessDate = LTRIM(RTRIM(?))
    SET    @storeStoreId = @storeId

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PLU plu
       WHERE
         plu.CompanyId = @companyId AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
    )
    SET @storeId = '0'

    IF NOT EXISTS (
       SELECT *
       FROM
         RESMaster.dbo.MST_PLU_STORE
       WHERE
         CompanyId = @companyId AND MdInternal = @MdInternal AND StoreId = @storeStoreId AND DeleteFlag = 0.0
    )
    SET @storeStoreId = '0'

    SELECT TOP 1
       plu.CompanyId,
       plu.StoreId,
       plu.MdInternal,
       plu.MdType,
       plu.MdVender,
       plu.Dpt,
       plu.Line,
       plu.Class,
       plu.Sku,
       plu.Md01,
       plu.Md02,
       plu.Md03,
       plu.Md04,
       plu.Md05,
       plu.Md06,
       plu.Md07,
       plu.Md08,
       plu.Md09,
       plu.Md10,
       plu.Md11,
       plu.Md12,
       plu.Md13,
       plu.Md14,
       plu.Md15,
       plu.Md16,
       plu.MdNameLocal,
       plu.MdKanaName,
       plu.OrgSalesPrice1,
       urgent.NewPrice,
       urgent.OldPrice,
       plustore.SalesPrice,
       plu.SalesPrice1,
       plu.SalesPrice2,
       plu.CostPrice1,
       plu.SalesDate,
       plu.MakerPrice,
       plu.TaxType,
       plu.TaxRate,
       plu.DiscountType,
       plu.PaymentType,
       plu.Conn1,
       plu.ConnType1,
       plu.Conn2,
       plu.DiscountFlag,
       plu.SubCode1,
       plu.SubCode2,
       plu.SubCode3,
       plu.SubNum1,
       plu.SubNum2
FROM
  RESMaster.dbo.MST_PLU plu
LEFT JOIN RESMaster.dbo.MST_PLU_STORE plustore
    ON plu.CompanyId = plustore.CompanyId
    AND plustore.StoreId = @storeStoreId
    AND plustore.MdInternal = plu.MdInternal
    AND plustore.DeleteFlag = 0.0
LEFT JOIN  (
    SELECT
        info.CompanyId,
        info.Sku,
        info.SequenceNo,
        info.ColorId,
        info.NewPrice,
        info.OldPrice
    FROM RESMaster.dbo.MST_PRICE_URGENT_INFO_FORSTORE info
    INNER  JOIN RESMaster.dbo.MST_PRICE_URGENT_STORE_FORSTORE store
    ON info.CompanyId  = store.CompanyId
    AND info.RecordId = store.RecordId
    AND store.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN store.StartDate AND store.EndDate
    AND store.TargetStoreType IN ('0','2') OR (store.TargetStoreType = '1' AND store.StoreId = @storeId)
    AND info.DeleteFlag = 0

) urgent
ON
plu.CompanyId  = urgent.CompanyId
AND plu.Sku  = urgent.Sku
AND plu.Md01 = urgent.ColorId

WHERE plu.companyId = @companyId  AND plu.MdInternal = @MdInternal AND plu.StoreId = @storeId AND plu.DeleteFlag = 0.0
ORDER BY urgent.SequenceNo DESC
</entry>

<entry key="insert-offline-credit">
insert into RESTransaction.dbo.TXL_offline_credit
    (CompanyId, RetailStoreId, WorkstationId, SequenceNumber, BusinessDayDate, TrainingFlag,
     IV, Body, InsDateTIme)
  values
    (?, ?, ?, ?, ?, ?, ?, ?, sysdatetime())
</entry>

<entry key="get-credit-card-company">
  SELECT
     CompanyId,
       CreditCompanyId,
     CreditCompanyName,
       CreditCompanyShortName
    FROM
       [RESMaster].[dbo].[MST_COMPINFO]
    WHERE
       CompanyId = ?
</entry>

<entry key="get-report-items">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @retailstoreid varchar(max),
      @tillId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint

    SET @companyId = ?
    SET @storeId = ?
    SET @tillId = NULLIF(?, '')
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @retailstoreid = @storeId

    IF NOT EXISTS(SELECT DataType FROM RESMaster.dbo.MST_NAME_DAILYREPORT WHERE StoreId = @storeId AND DeleteFlag = 0.0)
      SET @storeId = '0'

    SELECT
      a.CompanyId,
      a.StoreId,
      a.DataType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      a.ItemName,
      a.DisplayOrder,
      @tillId as TillId,
      (CASE
        WHEN @tillId IS NULL
        THEN (
          SELECT
            SUM(TranCnt)
          FROM
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @retailstoreId AND
            ItemLevel1 = a.ItemLevel1 AND
            ItemLevel2 = a.ItemLevel2 AND
            ItemLevel3 = a.ItemLevel3 AND
            ItemLevel4 = a.ItemLevel4 AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag)
        ELSE (
          SELECT
            SUM(TranCnt)
          FROM
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @retailstoreId AND
            ItemLevel1 = a.ItemLevel1 AND
            ItemLevel2 = a.ItemLevel2 AND
            ItemLevel3 = a.ItemLevel3 AND
            ItemLevel4 = a.ItemLevel4 AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag AND
            WorkstationId IN (
                SELECT distinct TerminalId FROM RESMaster.dbo.MST_DEVICEINFO
                    WHERE
                    CompanyId = @companyId and
                    StoreId = @retailstoreid and
                    Training = @trainingFlag and
                    TillId = @tillId and
                    DeleteFlag = 0.0
            )
        )
      END) AS ItemCnt,
      (CASE
        WHEN @tillId IS NULL
        THEN (
          SELECT
            SUM(ItemAmt)
          FROM
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @retailstoreId AND
            ItemLevel1 = a.ItemLevel1 AND
            ItemLevel2 = a.ItemLevel2 AND
            ItemLevel3 = a.ItemLevel3 AND
            ItemLevel4 = a.ItemLevel4 AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag)
        ELSE (
          SELECT
            SUM(ItemAmt)
          FROM
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @retailstoreId AND
            ItemLevel1 = a.ItemLevel1 AND
            ItemLevel2 = a.ItemLevel2 AND
            ItemLevel3 = a.ItemLevel3 AND
            ItemLevel4 = a.ItemLevel4 AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag AND
            WorkstationId IN (
                SELECT distinct TerminalId FROM RESMaster.dbo.MST_DEVICEINFO
                    WHERE
                    CompanyId = @companyId and
                    StoreId = @retailstoreid and
                    Training = @trainingFlag and
                    TillId = @tillId and
                    DeleteFlag = 0.0
            )
        )
      END) AS ItemAmt
    FROM
      RESMaster.dbo.MST_NAME_DAILYREPORT a
    WHERE
      a.CompanyId = @companyId AND
      a.StoreId = @storeId AND
      a.DeleteFlag = 0.0
    ORDER BY
      cast(a.DataType as int),
      cast(a.ItemLevel1 as int),
      cast(a.ItemLevel2 as int),
      cast(a.ItemLevel3 as int),
      a.ItemLevel4,
      a.DisplayOrder ASC
</entry>

<entry key="get-point-item-campaign-rate">
  DECLARE
  @companyId varchar(12),
  @storeId varchar(10),
  @businessDate date

  SET @companyId = ?
  SET @storeId = ?
  SET @businessDate = ?

  SELECT
    base.PointType,
    base.BasePrice,
    base.RecordId,
    base.BasePoint,
    base.PointTender,
    base.TenderSettingFlag,
    base.BasePointCash,
    base.BasePointAffiliate,
    base.BasePointNonAffiliate,
    base.TargetDaySettingFlag,
    base.TargetDay1,
    base.TargetDay2,
    base.TargetDay3,
    base.TargetDay4,
    base.TargetDay5,
    base.TargetDay6,
    base.TargetDay7,
    base.TargetDay8,
    base.TargetDay9,
    base.DayOfWeekSettingFlag,
    base.DayOfWeekMonFlag,
    base.DayOfWeekTueFlag,
    base.DayOfWeekWedFlag,
    base.DayOfWeekThuFlag,
    base.DayOfWeekFriFlag,
    base.DayOfWeekSatFlag,
    base.DayOfWeekSunFlag,
    base.CardSettingFlag,
    base.TargetStoreType,
    base.ItemSettingFlag,
    base.DptSettingFlag,
    pointcard.CardClassId,
    tender.TenderId,
    tender.TenderType,
    iteminfo.GroupTargetType,
    iteminfo.GroupIdStart,
    iteminfo.GroupIdEnd,
    iteminfo.DptTargetType,
    iteminfo.DptStart,
    iteminfo.DptEnd,
    iteminfo.BrandTargetType,
    iteminfo.BrandIdStart,
    iteminfo.BrandIdEnd,
    iteminfo.SkuTargetType,
    iteminfo.SkuStart,
    iteminfo.SkuEnd,
    iteminfo.BasePoint as InfoBasePoint,
    itemdetail.BasePoint as DetailBasePoint,
    itemdetail.TargetType,
    itemdetail.TargetId
  FROM
    RESMaster.dbo.MST_CAMPAIGN_INFO base
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_ITEM_INFO iteminfo
  ON
    base.RecordId = iteminfo.RecordId
    AND
    base.CompanyId = iteminfo.CompanyId
    AND
    base.ItemSettingFlag = '1'
    AND
    iteminfo.DeleteFlag = 0.0
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_ITEM_DETAIL itemdetail
  ON
    base.RecordId = itemdetail.RecordId
    AND
    base.CompanyId = itemdetail.CompanyId
    AND
    itemdetail.DeleteFlag = 0.0
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_CARD pointcard
  ON
    base.RecordId = pointcard.RecordId
    AND
    base.CompanyId = pointcard.CompanyId
    AND
    pointcard.DeleteFlag = 0.0
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_STORE store
  ON
    base.RecordId = store.RecordId
    AND
    base.CompanyId = store.CompanyId
    AND
    store.DeleteFlag = 0.0
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_TENDER tender
  ON
    base.RecordId = tender.RecordId
    AND
    base.CompanyId = tender.CompanyId
    AND
    tender.DeleteFlag = 0.0
  WHERE
    base.CompanyId = @companyId
    AND
    CONVERT(DATE,@businessDate) BETWEEN base.StartDate AND base.EndDate
    AND
    base.DeleteFlag = 0.0
    AND
    ((base.TargetStoreType = '1' AND store.StoreId = @storeId)
    OR base.TargetStoreType = '0' OR base.TargetStoreType = '2')
</entry>

<entry key="get-point-tran-rate">
  DECLARE
  @companyId varchar(12),
  @bizCategoryId varchar(20),
  @storeId varchar(10),
  @targetType varchar(10),
  @cardClassId varchar(10),
  @businessDate date

  SET @companyId = ?
  SET @businessDate = ?

    SELECT TOP 1
      base.PointFlag,
      base.BasePrice,
      base.RecordId,
      base.BasePoint,
      base.CashingUnit,
      base.BasePointCash,
      base.BasePointAffiliate,
      base.BasePointNonAffiliate,
      base.PointCalcType,
      base.TaxCalcType,
      base.RoundType,
      base.CardSettingFlag,
      base.DptSettingFlag
    FROM
      RESMaster.dbo.MST_POINT_INFO base
    WHERE
      base.CompanyId = @companyId
      AND
      base.TargetType = '1'
      AND
      (base.BizCatId = '0000' OR base.BizCatId = '0')
      AND
      (base.StoreId = '0000' OR base.StoreId = '0')
      AND
      CONVERT(DATE,@businessDate) >= base.StartDate
      AND
      base.PointFlag = '1'
      AND
      base.DeleteFlag = 0.0
    ORDER BY base.StartDate DESC
</entry>

<entry key="get-report-item">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint,
      @dataType varchar(max),
      @itemLevel1 varchar(max)

    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @dataType = ?
    SET @itemLevel1 = ?

   SELECT
      a.CompanyId,
      a.RetailStoreId,
      a.BusinessDayDate,
      a.TrainingFlag,
      a.ItemType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      a.WorkstationId,
      a.ItemCnt,
      a.ItemAmt,
       (SELECT
            SUM(ItemCnt)
          FROM
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @storeId AND
            ItemType = @dataType AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag AND
            ItemLevel1 = @itemLevel1
            Group by CompanyId, RetailStoreId, BusinessDayDate, ItemType, TrainingFlag, ItemLevel1, ItemLevel2
            ) as CntSum,
      (SELECT
            SUM(ItemAmt)
          FROM
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @storeId AND
            ItemType = @dataType AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag AND
            ItemLevel1 = @itemLevel1
            Group by CompanyId, RetailStoreId, BusinessDayDate, ItemType, TrainingFlag, ItemLevel1, ItemLevel2
            ) as AmtSum

      FROM RESTransaction.dbo.TXU_TOTAL_DAILYREPORT a
      WHERE
       a.CompanyId = @companyId AND
       a.RetailStoreId = @storeId AND
       a.WorkstationId = @terminalId AND
       a.BusinessDayDate = @businessDate  AND
       a.ItemType = @dataType AND
       a.itemLevel1 = @itemLevel1 AND
       a.TrainingFlag = @trainingFlag

</entry>

<entry key="get-report-item-tillId">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint,
      @dataType varchar(max),
      @itemLevel1 varchar(max),
      @tillId varchar(max)

    SET @companyId = ?
    SET @storeId = ?
    SET @tillId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @dataType = ?
    SET @itemLevel1 = ?

   SELECT
      a.CompanyId,
      a.RetailStoreId,
      a.BusinessDayDate,
      a.TrainingFlag,
      a.ItemType,
      a.ItemLevel1,
      a.ItemLevel2,
      SUM(a.ItemCnt) AS CntSum,
    SUM(a.ItemAmt) AS AmtSum
      FROM RESTransaction.dbo.TXU_TOTAL_DAILYREPORT a
      WHERE
       a.CompanyId = @companyId AND
       a.RetailStoreId = @storeId AND
       a.WorkstationId  IN (
       SELECT distinct TerminalId FROM [RESMaster].[dbo].[MST_DEVICEINFO]
      WHERE
      CompanyID = @companyId and
      StoreId = @storeId and
      Training = @trainingFlag and
      TillId = @tillId and
            DeleteFlag = 0.0
     ) AND
       a.BusinessDayDate = @businessDate  AND
       a.ItemType = @dataType AND
       a.itemLevel1 = @itemLevel1 AND
       a.TrainingFlag = @trainingFlag
     GROUP BY
     a.CompanyId,
       a.RetailStoreId,
     BusinessDayDate,
     ItemType,
     itemLevel1,
     itemLevel2,
     TrainingFlag
</entry>

<entry key="get-voucher-details">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint,
      @tenderId varchar(max)

    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @tenderId = ?

   SELECT
      a.CompanyId,
      a.RetailStoreId,
      a.BusinessDayDate,
      a.TrainingFlag,
      a.ItemType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      a.WorkstationId,
      a.ItemCnt,
      a.ItemAmt
      FROM RESTransaction.dbo.TXU_TOTAL_DAILYREPORT a
      WHERE
       a.CompanyId = @companyId AND
       a.RetailStoreId = @storeId AND
       a.WorkstationId = @terminalId AND
       a.BusinessDayDate = @businessDate  AND
       a.ItemType = '2' AND
       (a.itemLevel1 = '01' OR a.itemLevel1 = '02') AND
       a.itemLevel3 = @tenderId AND
       a.TrainingFlag = @trainingFlag AND
       a.itemLevel2 in ('01', '12', '13', '14', '15')
       ORDER BY a.ItemLevel2 ASC
</entry>

<entry key="get-voucher-details-tillId">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @tillId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint,
      @tenderId varchar(max)

    SET @companyId = ?
    SET @storeId = ?
    SET @tillId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @tenderId = ?

   SELECT
      a.CompanyId,
      a.RetailStoreId,
      a.BusinessDayDate,
      a.TrainingFlag,
      a.ItemType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      SUM(a.ItemCnt) AS ItemCnt,
      SUM(a.ItemAmt) AS ItemAmt
      FROM RESTransaction.dbo.TXU_TOTAL_DAILYREPORT a
      WHERE
       a.CompanyId = @companyId AND
       a.RetailStoreId = @storeId AND
       a.WorkstationId IN (
         SELECT distinct TerminalId FROM [RESMaster].[dbo].[MST_DEVICEINFO]
      WHERE
      CompanyID = @companyId and
      StoreId = @storeId and
      Training = @trainingFlag and
      TillId = @tillId and
      DeleteFlag = 0.0
     ) AND
       a.BusinessDayDate = @businessDate  AND
       a.ItemType = '2' AND
       (a.itemLevel1 = '01' OR a.itemLevel1 = '02') AND
       a.itemLevel3 = @tenderId AND
       a.TrainingFlag = @trainingFlag AND
       a.itemLevel2 in ('01', '12', '13', '14', '15')
     GROUP BY
     a.CompanyId,
       a.RetailStoreId,
       a.BusinessDayDate,
       a.TrainingFlag,
       a.ItemType,
       a.ItemLevel1,
       a.ItemLevel2,
     a.ItemLevel3,
     a.ItemLevel4
</entry>

<entry key="get-postpoint-status">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @workstationId varchar(max),
      @businessDate varchar(max),
      @txId varchar(max),
      @trainingFlag tinyint

    SET @companyId = ?
    SET @storeId = ?
    SET @workstationId = ?
    SET @businessDate = ?
    SET @txId = ?
    SET @trainingFlag = ?

    SELECT
      CompanyId,
      RetailStoreId,
      WorkstationId,
      SequenceNumber,
      BusinessDayDate,
      TrainingFlag,
      SalesAmt,
      ForPointAmt,
      AddPoint,
      BeforePoint,
      AfterPoint,
      MemberId,
      OriginalSequenceNumber
    FROM
      RESTransaction.dbo.TXL_POINT_AFTERADD
    WHERE
        OriginalCompanyId = @companyId
      AND  OriginalRetailStoreId = @storeId
      AND  OriginalWorkStationId = @workstationId
      AND  OriginalBusinessDayDate = @businessDate
      AND  OriginalSequenceNumber = @txId
      AND  TrainingFlag = @trainingFlag
</entry>

<entry key="get-store-info">
    DECLARE
    @companyid varchar(12)

    SET @companyid = ?

     SELECT
       CompanyId
      ,StoreId
      ,StoreName
      ,StoreShortName
      ,StoreType
      ,StoreKubun
      ,StoreZip
      ,StoreAddr
      ,StoreAddr1
      ,StoreAddr2
      ,StoreTel
      ,StoreFax
      ,StoreUrl
      ,SalesSpaceName
      ,EventName
      ,Ads
      ,CdMsg
      ,ElectroFilePath
      ,StampTaxFilePath
      ,StoreCompCode
      ,SubCode1
      ,SubCode2
      ,SubCode3
      ,SubCode4
      ,SubCode5
      ,SubCode6
      ,SubCode7
      ,SubCode8
      ,SubCode9
      ,SubCode10
      ,SubCode11
      ,SubCode12
      ,SubCode13
      ,SubCode14
      ,SubCode15
      ,SubCode16
      ,SubCode17
      ,SubCode18
      ,SubCode19
      ,SubCode20
      ,SubCode21
      ,SubCode22
      ,SubCode23
      ,SubCode24
      ,SubCode25
      ,SubNum1
      ,SubNum2
      ,SubNum3
      ,SubNum4
      ,SubNum5
      ,SubNum6
      ,SubNum7
      ,SubNum8
      ,SubNum9
      ,SubNum10
      ,SubNum11
      ,SubNum12
      ,SubNum13
      ,SubNum14
      ,SubNum15
      ,HostUpdDate
      ,Status
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      CompanyId = @companyid AND
      DeleteFlag = 0.0
    ORDER BY
      CompanyId
</entry>

<entry key="get-store-total">
    DECLARE
    @companyid varchar(12),
    @storeid varchar(10)

    SET @companyid = ?
    SET @storeid = ?

    SELECT SubNum2
      FROM RESMaster.dbo.MST_STOREINFO
     WHERE
      CompanyId = @companyid AND
      StoreId = @storeid AND
      DeleteFlag = 0
</entry>

<entry key="update-store-total">
    UPDATE
    RESMaster.dbo.MST_STOREINFO
    SET
      SubNum2 = (CASE WHEN subnum2 IS NULL THEN 1 WHEN subnum2 IS NOT NULL THEN subnum2 + 1 END)
    WHERE
      StoreId = ? AND
      CompanyId = ? AND
      DeleteFlag = 0
</entry>

<!-- *************************  ENTRY KEY FOR DEVICE INFO  ************************* -->
<entry key="get-posctrl-openclose-status">
      SELECT
        OpenCloseStat,
        SodTime
      FROM
        RESTransaction.dbo.TXU_POS_CTRL
      WHERE
        CompanyId = ? AND
        StoreId = ? AND
        TerminalNo = ? AND
        SodTime >= ?
</entry>

<entry key="get-working-device-status">
      SELECT
        AD.CompanyId,
        AD.StoreId,
        AD.TerminalId,
        DI.TillId,
        DI.DeviceName,
        PC.OpenCloseStat,
        PC.SodTime,
        PC.EodTime
      FROM
        RESMaster.dbo.AUT_DEVICES AD
          INNER JOIN RESTransaction.dbo.TXU_POS_CTRL PC ON
            AD.CompanyId = PC.CompanyId AND
            AD.StoreId = PC.StoreId AND
            AD.TerminalId = PC.TerminalNo
          INNER JOIN RESMaster.dbo.MST_DEVICEINFO DI ON
            AD.CompanyId = DI.CompanyId AND
            AD.StoreId = DI.StoreId AND
            AD.TerminalId = DI.TerminalId AND
            DI.Training = 0 AND
            DI.DeleteFlag = 0.0
</entry>

<entry key="get-device-indicators">
      SELECT DisplayName,CheckInterval,NormalValue,Request,RequestType,ReturnKey,URL,DisplayOrder
        FROM RESMaster.dbo.PRM_DEVICE_INDICATOR
       WHERE AttributeId = ?
       ORDER BY DisplayOrder
</entry>

<!-- *************************  ENTRY KEY FOR ConvertCode INFO  ************************* -->
<entry key="convert-ccode-to-dpt">
  DECLARE
      @companyId varchar(max), @ccode varchar(20), @storeId varchar(max)

SET @companyId = ?
SET @ccode = ?
SET @storeId = ?

IF NOT EXISTS (
  SELECT Dpt
    FROM RESMaster.dbo.MST_CCODEINFO
   WHERE CompanyId = @companyId
     AND CCode = @ccode
     AND StoreId = @storeId
     AND DeleteFlag = 0.0
)
SET @storeId = '0'

SELECT Dpt
  FROM RESMaster.dbo.MST_CCODEINFO
 WHERE CompanyId = @companyId
   AND CCode = @ccode
   AND StoreId = @storeId
   AND DeleteFlag = 0.0
</entry>

<entry key="convert-magcode-to-dpt">
DECLARE
    @companyId varchar(max), @magcode varchar(20), @storeId varchar(max)

SET @companyId = ?
SET @magcode = ?
SET @storeId = ?

IF NOT EXISTS (
  SELECT Dpt
    FROM RESMaster.dbo.MST_MAGCODEINFO
   WHERE CompanyId = @companyId
     AND MagCode = @magcode
     AND StoreId = @storeId
     AND DeleteFlag = 0.0
)
SET @storeId = '0'

SELECT Dpt
  FROM RESMaster.dbo.MST_MAGCODEINFO
 WHERE CompanyId = @companyId
   AND MagCode = @magcode
   AND StoreId = @storeId
   AND DeleteFlag = 0.0
</entry>

<entry key="count-unsend-poslog">
DECLARE
    @companyId varchar(12), @businessDayDate DATE, @retailStoreId varchar(6), @status char(1)

SET @companyId = ?
SET @retailStoreId = ?
SET @businessDayDate = ?
SET @status = CAST('0' AS char(1))
SELECT
    COUNT(*) as UnsendCount
FROM
    RESTransaction.dbo.TXL_SALES_JOURNAL
WHERE
  BusinessDayDate = @businessDayDate
  AND
  CompanyId = @companyId
  AND
  RetailStoreId = @retailStoreId
  AND
  %s =  @status;

</entry>
<entry key="count-failed-poslog">
DECLARE
    @companyId varchar(12), @businessDayDate DATE, @retailStoreId varchar(6)

SET @companyId = ?
SET @retailStoreId = ?
SET @businessDayDate = ?
SELECT
  COUNT(*) as FailedCount
FROM
  RESTransaction.dbo.TXL_SALES_JOURNAL
WHERE
  CompanyId = @companyId
  AND
  RetailStoreId = @retailStoreId
  AND
  (DATEDIFF(day,BusinessDayDate,@businessDayDate) &lt;= 1)
  AND
  %s = 2;
</entry>
<entry key="get-unsend-and-failed-poslog">
DECLARE
    @companyId varchar(12), @businessDayDate DATE, @retailStoreId varchar(6)

SET @companyId = ?
SET @retailStoreId = ?
SET @businessDayDate = ?
SELECT
  BusinessDayDate,
  SequenceNumber,
  %s
FROM
  RESTransaction.dbo.TXL_SALES_JOURNAL
WHERE
  CompanyId = @companyId
  AND
  RetailStoreId = @retailStoreId
  AND
  (DATEDIFF(day,BusinessDayDate,@businessDayDate) &lt;= 1)
  AND
  (%s = 2 OR %s = 0);
</entry>
<entry key="retry-failed-poslog">
DECLARE
    @companyId varchar(12), @businessDayDate DATE, @retailStoreId varchar(6)

SET @companyId = ?
SET @retailStoreId = ?
SET @businessDayDate = ?

UPDATE
  RESTransaction.dbo.TXL_SALES_JOURNAL
SET
  %s = 0
WHERE
  CompanyId = @companyId
  AND
  RetailStoreId = @retailStoreId
  AND
  (DATEDIFF(day,BusinessDayDate,@businessDayDate) &lt;= 1)
  AND
  %s = 2;
</entry>

<entry key="get-server-list">
    SELECT
      Name,
      Type,
      Url
    FROM
    RESMaster.dbo.PRM_SERVER_TBL
</entry>

<!-- *************************  ENTRY KEY FOR POS MAIL INFO  ************************* -->
<entry key="get-pos-mail-info">
  DECLARE
    @companyId VARCHAR(12),
    @retailStoreId VARCHAR(10),
    @workstationId VARCHAR(6),
    @businessDate DATE

    SET @companyId = LTRIM(RTRIM(?))
    SET @retailStoreId = LTRIM(RTRIM(?))
    SET @workstationId = LTRIM(RTRIM(?))
    SET @businessDate = LTRIM(RTRIM(?))
  SELECT
    PMI.RecordId,
    PMI.MailSubject,
    PMI.StartDate,
    PMI.EndDate,
    PMI.MailBody,
    PMI.RegOpeCode,
    PMI.RegOpeName
  FROM
    RESMaster.dbo.MST_POSMAIL_INFO PMI
  LEFT JOIN
    RESMaster.dbo.MST_POSMAIL_STORE PMS
      ON
        PMS.CompanyId = PMI.CompanyId AND
        PMS.RecordId = PMI.RecordId AND
        PMS.DeleteFlag = PMI.DeleteFlag
  WHERE
    @companyId = PMI.CompanyId AND
    (PMI.TargetStoreType = '0' OR PMI.TargetStoreType = '2' OR (PMI.TargetStoreType = '1' AND PMS.StoreId = @retailStoreId)) AND
    @businessDate BETWEEN PMI.StartDate AND PMI.EndDate AND
    PMI.DeleteFlag = 0.0
  ORDER BY
    PMI.UpdDate DESC, RecordId ASC
</entry>

<entry key="get-payment-amt-by-terminalid">
DECLARE @companyId varchar(MAX),
        @storeId varchar(MAX),
    @tenderStoreId varchar(MAX),
        @businessDate DATE,
        @trainingflag tinyint,
        @terminalId varchar(6)

    SET @companyid = ?;
    SET @storeid = ?;
    SET @businessDate = ?;
    SET @trainingflag = ?;
    SET @terminalId = ?;
  SET @tenderStoreId = @storeid;

IF NOT EXISTS (
 SELECT *

   FROM RESMaster.dbo.MST_TENDERINFO tender
  INNER JOIN RESTransaction.dbo.TXL_TRAN_PAYMENT parment
     ON tender.CompanyId = parment.CompanyId
    AND tender.StoreId = @tenderStoreId
    AND tender.TenderId = parment.TenderId
    AND tender.TenderType = parment.TenderType
  WHERE parment.CompanyId = @companyid
    AND parment.RetailStoreId = @storeid
    AND parment.WorkstationId = @terminalId
    AND parment.BusinessDayDate = @businessDate
    AND parment.ValidFlag = '1'
    AND parment.CancelFlag = '0'
    AND parment.DataKind = '0'
    AND parment.TrainingFlag = @trainingflag
    AND parment.TenderType IN ('8','9','10','11')
  AND tender.DeleteFlag = 0.0
)
SET @tenderStoreId = '0'

SELECT parment.TenderId,
       tender.TenderName,
       tender.TenderType,
       tender.TenderIdentification,
       SUM(
      CASE WHEN parment.ReturnFlag = '1' THEN parment.Amt * -1
           WHEN parment.VoidFlag = '1'   THEN parment.Amt * -1
         ELSE parment.Amt
      END
     ) AS SumAmt,
       tender.DisplayOrder

 FROM RESMaster.dbo.MST_TENDERINFO tender
INNER JOIN RESTransaction.dbo.TXL_TRAN_PAYMENT parment
   ON tender.CompanyId = parment.CompanyId
  AND tender.StoreId = @tenderStoreId
  AND tender.TenderId = parment.TenderId
  AND tender.TenderType = parment.TenderType
WHERE parment.CompanyId = @companyid
  AND parment.RetailStoreId = @storeid
  AND parment.WorkstationId = @terminalId
  AND parment.BusinessDayDate = @businessDate
  AND parment.ValidFlag = '1'
  AND parment.CancelFlag = '0'
  AND parment.DataKind = '0'
  AND parment.TrainingFlag = @trainingflag
  AND parment.TenderType IN ('8','9','10','11')
  AND tender.DeleteFlag = 0.0
GROUP BY parment.TenderId,tender.TenderName,tender.TenderType,tender.TenderIdentification,tender.DisplayOrder
ORDER BY tender.DisplayOrder,cast(tender.TenderType as int)
</entry>

<entry key="get-payment-amt-by-txtype">
DECLARE @companyId varchar(MAX),
     @storeId varchar(MAX),
     @tenderStoreId varchar(MAX),
     @businessDate DATE,
     @bizCatId varchar(20),
     @trainingflag tinyint,
     @txType varchar(6) 
SET @companyid = ? ; 
SET @storeid = ? ; 
SET @businessDate = ? ; 
SET @trainingflag = ? ; 
SET @txType = ? ; 
SET @tenderStoreId = @storeid;
SET @bizCatId = (
        SELECT SubCode6
        FROM RESMaster.dbo.MST_STOREINFO
        WHERE CompanyId = @companyId AND StoreId = @storeId AND DeleteFlag = 0.0
      );
IF NOT EXISTS
(SELECT *
FROM RESMaster.dbo.MST_TENDERINFO tender
INNER JOIN RESTransaction.dbo.TXL_TRAN_PAYMENT parment
  ON tender.CompanyId = parment.CompanyId
    AND parment.RetailStoreId = @storeid
    AND tender.TenderId = parment.TenderId
    AND tender.TenderType = parment.TenderType
WHERE parment.CompanyId = @companyid
    AND tender.StoreId = @tenderStoreId
    AND parment.BusinessDayDate = @businessDate
    AND parment.ValidFlag = '1'
    AND parment.CancelFlag = '0'
    AND parment.VoidFlag = '0'
    AND parment.ReturnFlag = '0'
    AND parment.DataKind = '8'
    AND parment.TrainingFlag = @trainingflag
    AND parment.TxType = @txType
    AND parment.TenderType IN('8', '9', '10', '11')
    AND tender.DeleteFlag = 0.0 )
BEGIN
  SET @tenderStoreId = '0'
  IF NOT EXISTS
  (SELECT *
  FROM RESMaster.dbo.MST_TENDERINFO tender
  INNER JOIN RESTransaction.dbo.TXL_TRAN_PAYMENT parment
    ON tender.CompanyId = parment.CompanyId
      AND parment.RetailStoreId = @storeid
      AND tender.TenderId = parment.TenderId
      AND tender.TenderType = parment.TenderType
  WHERE parment.CompanyId = @companyid
      AND tender.SubCode2 = @bizCatId
      AND tender.StoreId = @tenderStoreId
      AND parment.BusinessDayDate = @businessDate
      AND parment.ValidFlag = '1'
      AND parment.CancelFlag = '0'
      AND parment.VoidFlag = '0'
      AND parment.ReturnFlag = '0'
      AND parment.DataKind = '8'
      AND parment.TrainingFlag = @trainingflag
      AND parment.TxType = @txType
      AND parment.TenderType IN('8', '9', '10', '11')
      AND tender.DeleteFlag = 0.0 )
  SET @bizCatId = '0'
END

SELECT parment.TenderId,
   tender.TenderName,
   tender.TenderType,
   tender.TenderIdentification,
   SUM(ISNULL(parment.BalancingRegisterAmt, 0)) AS SumBalancingRegisterAmt,
   SUM(ISNULL(parment.BalancingCurrentAmt, 0)) AS SumBalancingCurrentAmt,
   SUM(ISNULL(parment.BalancingDifferenceAmt, 0)) AS SumBalancingDifferenceAmt
FROM RESMaster.dbo.MST_TENDERINFO tender
INNER JOIN RESTransaction.dbo.TXL_TRAN_PAYMENT parment
    ON tender.CompanyId = parment.CompanyId
    AND tender.StoreId = @tenderStoreId
    AND (tender.SubCode2 = case @tenderStoreId when '0' then @bizCatId else '0' end)
    AND tender.TenderId = parment.TenderId
    AND tender.TenderType = parment.TenderType
    AND parment.BusinessDateTime = 
    (SELECT MAX(parment2.BusinessDateTime)
    FROM RESTransaction.dbo.TXL_TRAN_PAYMENT parment2
    WHERE parment2.CompanyId = @companyid
      AND parment2.RetailStoreId = @storeId
      AND parment2.BusinessDayDate = @businessDate
      AND parment2.ValidFlag = '1'
      AND parment2.CancelFlag = '0'
      AND parment2.VoidFlag = '0'
      AND parment2.ReturnFlag = '0'
      AND parment2.DataKind = '8'
      AND parment2.TrainingFlag = @trainingflag
      AND parment2.TxType = @txType
      AND parment2.TenderType IN('8', '9', '10', '11')
      AND tender.DeleteFlag = 0.0
    GROUP BY  parment2.WorkstationId
    HAVING parment.WorkstationId = parment2.WorkstationId)
WHERE parment.CompanyId = @companyid
    AND parment.RetailStoreId = @storeId
    AND parment.BusinessDayDate = @businessDate
    AND parment.ValidFlag = '1'
    AND parment.CancelFlag = '0'
    AND parment.VoidFlag = '0'
    AND parment.ReturnFlag = '0'
    AND parment.DataKind = '8'
    AND parment.TrainingFlag = @trainingflag
    AND parment.TxType = @txType
    AND parment.TenderType IN('8', '9', '10', '11')
    AND tender.DeleteFlag = 0.0
GROUP BY  parment.TenderId, tender.TenderName, tender.TenderType, tender.TenderIdentification, tender.DisplayOrder
ORDER BY  DisplayOrder, cast(tender.TenderType AS int) 
</entry>

<entry key="get-employee-list-by-companyId">
 SELECT empinfo.EmpCode,
        empinfo.OpeCode,
     empinfo.StoreId,
     empinfo.OpeName
  FROM RESMaster.dbo.MST_EMPINFO empinfo
 WHERE empinfo.CompanyId = ?
   AND empinfo.SecLevel2 = 1
ORDER BY empinfo.EmpCode;
</entry>

<entry key="update-bussiness-date">
    DECLARE
     @companyId varchar(12)
    ,@storeId varchar(10)
  ,@bizDate date
  ,@clsName varchar(40)

    set @companyId=?
    set @storeId=?
    set @bizDate=?
    set @clsName=?

  IF @storeId = '0'
    IF EXISTS (SELECT CompanyId FROM RESMaster.dbo.MST_BIZDAY WHERE DeleteFlag = 0.0)
      UPDATE RESMaster.dbo.MST_BIZDAY
      SET
      TodayDate = @bizDate
      ,UpdCount = UpdCount + 1
      ,UpdDate = getdate()
      ,UpdAppId = @clsName
      WHERE DeleteFlag = 0.0
    ELSE
      INSERT INTO RESMaster.dbo.MST_BIZDAY(
      CompanyId
      ,StoreId
      ,TodayDate
      ,SwitchTime
      ,Skip
      ,DeleteFlag
      ,InsDate
      ,InsAppId
      ,InsOpeCode
      ,UpdCount
      ,UpdDate
      ,UpdAppId
      ,UpdOpeCode
      ) VALUES (
      @companyId
      ,@storeId
      ,@bizDate
      ,'00:00am'
      ,'0'
      ,0
      ,getdate()
      ,@clsName
      ,'system'
      ,0
      ,getdate()
      ,@clsName
      ,'system'
      );
  ELSE
    IF EXISTS (SELECT CompanyId FROM RESMaster.dbo.MST_BIZDAY
        WHERE CompanyId = @companyId AND StoreId = @storeId AND DeleteFlag = 0.0)
      UPDATE RESMaster.dbo.MST_BIZDAY
      SET
      TodayDate = @bizDate
      ,UpdCount = UpdCount + 1
      ,UpdDate = getdate()
      ,UpdAppId = @clsName
      WHERE CompanyId = @companyId AND StoreId = @storeId AND DeleteFlag = 0.0
    ELSE
      INSERT INTO RESMaster.dbo.MST_BIZDAY(
      CompanyId
      ,StoreId
      ,TodayDate
      ,SwitchTime
      ,Skip
      ,DeleteFlag
      ,InsDate
      ,InsAppId
      ,InsOpeCode
      ,UpdCount
      ,UpdDate
      ,UpdAppId
      ,UpdOpeCode
      ) VALUES (
      @companyId
      ,@storeId
      ,@bizDate
      ,'00:00am'
      ,'0'
      ,0
      ,getdate()
      ,@clsName
      ,'system'
      ,0
      ,getdate()
      ,@clsName
      ,'system'
      );
</entry>

<entry key="save-forward-poslog-include-tag">
    DECLARE
      @CompanyId varchar(12),
      @RetailStoreId varchar(MAX),
      @WorkstationId varchar(MAX),
      @SequenceNumber varchar(MAX),
      @Queue varchar(MAX),
      @BusinessDayDate varchar(MAX),
      @TrainingFlag NUMERIC(1,0),
      @BusinessDateTime varchar(MAX),
      @OperatorId varchar(MAX),
      @SalesTotalAmt NUMERIC(15,0),
      @SalesTotalQty NUMERIC(15,0),
      @PosTermId varchar(MAX),
      @Status varchar(MAX),
      @Tx varchar(MAX),
      @LayawayFlag NUMERIC(1,0),
      @TxType varchar(50),
      @Tag varchar(50)

    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @WorkstationId = ?
    SET @SequenceNumber = ?
    SET @Queue = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @BusinessDateTime = ?
    SET @OperatorId = ?
    SET @SalesTotalAmt = ?
    SET @PosTermId = ?
    SET @Status = ?
    SET @Tx = ?
    SET @LayawayFlag = ?
    SET @TxType = ?
    SET @SalesTotalQty = ?
    SET @Tag = ?

    IF NOT EXISTS (SELECT CompanyId FROM RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE CompanyId = @CompanyId
    AND RetailStoreId = @RetailStoreId
    AND BusinessDayDate = @BusinessDayDate
    AND Ext1 = @Tag AND Status IN ('0','1')
    AND TrainingFlag = @TrainingFlag)
      INSERT INTO RESTransaction.dbo.TXL_FORWARD_ITEM
      (CompanyId
      ,RetailStoreId
      ,WorkstationId
      ,SequenceNumber
      ,Queue
      ,BusinessDayDate
      ,TrainingFlag
      ,BusinessDateTime
      ,OperatorId
      ,SalesTotalAmt
      ,SalesTotalQty
      ,PosTermId
      ,Status
      ,Tx
      ,LayawayFlag
      ,TxType
      ,Ext1)
      VALUES
      (@CompanyId
      ,@RetailStoreId
      ,@WorkstationId
      ,@SequenceNumber
      ,@Queue
      ,@BusinessDayDate
      ,@TrainingFlag
      ,@BusinessDateTime
      ,@OperatorId
      ,@SalesTotalAmt
      ,@SalesTotalQty
      ,@PosTermId
      ,@Status
      ,@Tx
      ,@LayawayFlag
      ,@TxType
      ,@Tag)
</entry>

<entry key="get-columnname">
    SELECT value
    FROM [RESMaster].[dbo].[PRM_SYSTEM_CONFIG]
    WHERE Category = 'StoreEODCount'
    AND
    KeyId = 'Column'
</entry>

<entry key="get-tablename">
    SELECT value
    FROM [RESMaster].[dbo].[PRM_SYSTEM_CONFIG]
    WHERE Category = 'StoreEODCount'
    AND
    KeyId = 'Table'
</entry>

<entry key="get-store-total-param">
    DECLARE @TableName VARCHAR(max),@ColumnName VARCHAR(max),@companyid
    VARCHAR(12), @storeid VARCHAR(10),@sql NVARCHAR(max);
    SET @TableName = '[RESMaster].[dbo].' + QUOTENAME(?)
    SET @ColumnName = QUOTENAME(?)
    SET @companyid = ?
    SET @storeid = ?
    SET @sql = 'SELECT' + @ColumnName + 'FROM' + @TableName + ' WHERE
    CompanyId = '+CAST(@companyid AS VARCHAR(12)) +'AND StoreId = '+
    CAST(@storeid AS VARCHAR(10)) + 'AND DeleteFlag = 0'
    EXEC sp_executesql @sql
</entry>

<entry key="update-store-total-param">
    DECLARE @TableName VARCHAR(max),@ColumnName VARCHAR(max),@companyid
    VARCHAR(12), @storeid VARCHAR(10),@sql NVARCHAR(max);
    SET @TableName = '[RESMaster].[dbo].' + QUOTENAME(?)
    SET @ColumnName = QUOTENAME(?)
    SET @companyid = ?
    SET @storeid = ?
    SET @sql = 'UPDATE' + @TableName + 'SET' + @ColumnName
    + '= (CASE WHEN' + @ColumnName + 'IS NULL THEN 1 WHEN' + @ColumnName
    +'IS NOT NULL THEN' + @ColumnName + ' + 1 END)'
    + 'WHERE StoreId =' + CAST(@storeid AS VARCHAR(10)) + 'AND CompanyId ='
    + CAST(@companyid AS VARCHAR(10)) + 'AND DeleteFlag = 0'
    EXEC sp_executesql @sql
</entry>

<entry key="get-taxrate-info-list">
  DECLARE @businessDate VARCHAR(32)
  SET @businessDate = LTRIM(RTRIM(?))

  SELECT TaxId
         ,StartDate
         ,EndDate
         ,TaxRate
         ,SubCode1
         ,SubNum1
         ,SubNum2
  FROM [RESMaster].[dbo].[MST_TAXRATE]
  WHERE CONVERT(DATE, @businessDate) BETWEEN StartDate AND EndDate
</entry>

<entry key="get-dptinfo-subnum5">
    DECLARE @storeId VARCHAR(10),@companyId VARCHAR(12),@dpt VARCHAR(20)
    SET @companyId = LTRIM(RTRIM(?))
    SET @storeId = LTRIM(RTRIM(?))
    SET @dpt = LTRIM(RTRIM(?))

    IF NOT EXISTS (
        SELECT %s
               ,TaxType
      FROM [RESMaster].[dbo].[MST_DPTINFO]
      WHERE CompanyId = @companyId AND StoreId = @storeId AND Dpt = @dpt
    )
    SET @storeId = '0'

    SELECT %s
           ,TaxType
    FROM [RESMaster].[dbo].[MST_DPTINFO]
    WHERE CompanyId = @companyId AND StoreId = @storeId AND Dpt = @dpt
</entry>

<entry key="get-business-registration-no">
      SELECT %s
      FROM %s
      WHERE %s
</entry>

<entry key="get-name-system-info">
        SELECT
          CompanyId,
          StoreId,
          NameCategory,
          NameId,
          NameText
        FROM
          RESMaster.dbo.MST_NAME_SYSTEM
        WHERE
          DeleteFlag = 0.0
</entry>

<entry key="get-ej-info">
     DECLARE
        @companyId varchar(12),
        @storeId varchar(10),
        @workstationId varchar(6),
        @txType varchar(50),
        @sequencenumberFrom NUMERIC(5,0),
        @sequencenumberTo NUMERIC(5,0),
        @businessDateTimeFrom VARCHAR(32),
        @businessDateTimeTo VARCHAR(32),
        @operatorId varchar(20),
        @salesPersonId varchar(10),
        @trainingFlag NUMERIC(1,0)

      SET @companyId =LTRIM(RTRIM(?))
      SET @storeId = LTRIM(RTRIM(?))
      SET @WorkstationId = LTRIM(RTRIM(?))
      SET @TxType = LTRIM(RTRIM(?))
      SET @SequencenumberFrom = ?
      SET @SequencenumberTo = ?
      SET @BusinessDateTimeFrom = LTRIM(RTRIM(?))
      SET @BusinessDateTimeTo = LTRIM(RTRIM(?))
      SET @OperatorId = LTRIM(RTRIM(?))
      SET @SalesPersonId = LTRIM(RTRIM(?))
      SET @TrainingFlag = ?

        SELECT DISTINCT
          tr.TxType,
          tr.WorkstationId,
          tr.SequenceNumber,
          tr.BillingAmt,
          CONVERT(VARCHAR(19),tr.BusinessDateTimeStart,120) BusinessDateTimeStart
        FROM
          RESTransaction.dbo.TXL_TRAN AS tr
           LEFT JOIN
          RESTransaction.dbo.TXL_TRAN_DETAIL detail
          ON
          tr.CompanyId = detail.CompanyId
          AND
          tr.RetailStoreId = detail.RetailStoreId
          AND
          tr.WorkstationId = detail.WorkstationId
          AND
          tr.BusinessDayDate = detail.BusinessDayDate
          AND
          tr.SequenceNumber = detail.SequenceNumber
          AND
          tr.TrainingFlag = detail.TrainingFlag
        WHERE
          tr.CompanyId = @companyId AND
          tr.RetailStoreId = @storeId AND
          tr.WorkstationId = @workstationId AND
          tr.SequenceNumber &gt;= @sequencenumberFrom AND
          tr.SequenceNumber &lt;=  @SequencenumberTo AND
          tr.BusinessDateTimeStart BETWEEN CONVERT(DATETIME,@businessDateTimeFrom) AND CONVERT(DATETIME,@businessDateTimeTo)
          %s
        ORDER BY tr.SequenceNumber DESC
</entry>

<entry key="get-poslog-xml-by-companyid-storeid-workstationid-bussinessdate-seqnum-trainningflag">
      DECLARE
        @companyId varchar(12),
        @storeId varchar(10),
        @workstationId varchar(6),
        @sequencenumber NUMERIC(5,0),
        @businessDate VARCHAR(32),
        @trainingFlag NUMERIC(1,0)

      SET @companyId =LTRIM(RTRIM(?))
      SET @storeId = LTRIM(RTRIM(?))
      SET @workstationId = LTRIM(RTRIM(?))
      SET @sequencenumber = ?
      SET @businessDate = ?
      SET @trainingFlag = LTRIM(RTRIM(?))

     SELECT Tx
     FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
     WHERE
        CompanyId = @companyId
        AND
        RetailStoreId = @storeId
        AND
        WorkstationId = @workstationId
        AND
        BusinessDayDate = CONVERT(DATE,@businessDate)
        AND
        SequenceNumber = @sequencenumber
        AND
        TrainingFlag = @trainingFlag
</entry>

<entry key="get-self-mode-status">
  DECLARE @companyId VARCHAR(12)
  DECLARE @retailStoreId VARCHAR(10)
  DECLARE @workstationId VARCHAR(6)
  SET @companyId = LTRIM(RTRIM(?))
  SET @retailStoreId = LTRIM(RTRIM(?))
  SET @workstationId = LTRIM(RTRIM(?))
  SELECT
    CompanyId,
    RetailStoreId,
    WorkstationId,
    Status,
    Message,
    Alert,
    UpdateDateTime,
  FROM [RESTransaction].[dbo].[TXL_SELFMODE_STATE]
  WHERE
    ((@companyId IS NULL OR LEN(@companyId) = 0) OR (CompanyId = @companyId )) AND
    ((@retailStoreId IS NULL OR LEN(@retailStoreId) = 0) OR (RetailStoreId = @retailStoreId )) AND
    ((@workstationId IS NULL OR LEN(@workstationId) = 0) OR (WorkstationId = @workstationId ))
  group by CompanyId, RetailStoreId, WorkstationId
  </entry>

<entry key="update-self-mode-status">
DECLARE @companyId varchar(12),
    @retailStoreId varchar(10),
    @workstationId varchar(6),
    @training int,
    @status int,
    @detail int,
    @printer int,
    @cashChanger int,
    @cashChangerCount varchar(max),
    @cashChangerCountStatus varchar(max),
    @message varchar(max),
    @alert int,
    @updateDateTime DateTime
SET @companyId = LTRIM(RTRIM(?))
SET @retailStoreId = LTRIM(RTRIM(?))
SET @workstationId = LTRIM(RTRIM(?))
SET @training = LTRIM(RTRIM(?))
SET @status = LTRIM(RTRIM(?))
SET @detail = LTRIM(RTRIM(?))
SET @printer = LTRIM(RTRIM(?))
SET @cashChanger = LTRIM(RTRIM(?))
SET @cashChangerCount = LTRIM(RTRIM(?))
SET @cashChangerCountStatus = LTRIM(RTRIM(?))
SET @message = LTRIM(RTRIM(?))
SET @alert = LTRIM(RTRIM(?))
SET @updateDateTime = LTRIM(RTRIM(?))

IF NOT EXISTS (
  SELECT
    CompanyId
  FROM RESTransaction.dbo.TXL_SELFMODE_STATE
  WHERE
    CompanyId= @companyId
    AND
    RetailStoreId = @retailStoreId
    AND
    WorkstationId = @workstationId
)
  INSERT INTO RESTransaction.dbo.TXL_SELFMODE_STATE(
    CompanyId,
    RetailStoreId,
    WorkstationId,
    Training,
    Status,
    Detail,
    Printer,
    CashChanger,
    CashChangerCount,
    CashChangerCountStatus,
    Message,
    Alert,
    UpdateDateTime)
  VALUES(
    @companyId,
    @retailStoreId,
    @workstationId,
    @training,
    @status,
    @detail,
    @printer,
    @cashChanger,
    @cashChangerCount,
    @cashChangerCountStatus,
    @message,
    @alert,
    @updateDateTime
  );
ELSE
  UPDATE RESTransaction.dbo.TXL_SELFMODE_STATE
  SET
    CompanyId = @companyId,
    RetailStoreId = @retailStoreId,
    WorkstationId = @workstationId,
    Training = @training,
    Status = @status,
    Detail = @detail,
    Printer = @printer,
    CashChanger = @cashChanger,
    CashChangerCount = @cashChangerCount,
    CashChangerCountStatus = @cashChangerCountStatus,
    Message = @message,
    Alert = @alert,
    UpdateDateTime = @updateDateTime
  WHERE
    CompanyId= @companyId
    AND
    RetailStoreId = @retailStoreId
    AND
    WorkstationId = @workstationId
</entry>
<entry key="get-self-mode-status">
  DECLARE @companyId VARCHAR(12),
     @retailStoreId VARCHAR(10),
     @workstationId VARCHAR(6)
  SET @companyId = LTRIM(RTRIM(?))
  SET @retailStoreId = LTRIM(RTRIM(?))
  SET @workstationId = LTRIM(RTRIM(?))
  SELECT
    CompanyId,
    RetailStoreId,
    WorkstationId,
    Training,
    Status,
    Detail,
    Printer,
    CashChanger,
    CashChangerCount,
    CashChangerCountStatus,
    Message,
    Alert,
    UpdateDateTime
  FROM RESTransaction.dbo.TXL_SELFMODE_STATE
  WHERE
    ((@companyId IS NULL OR LEN(@companyId) = 0) OR (CompanyId = @companyId )) AND
    ((@retailStoreId IS NULL OR LEN(@retailStoreId) = 0) OR (RetailStoreId = @retailStoreId )) AND
    ((@workstationId IS NULL OR LEN(@workstationId) = 0) OR (WorkstationId = @workstationId ))
</entry>

</properties>
