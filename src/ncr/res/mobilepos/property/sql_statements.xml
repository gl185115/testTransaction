<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
  <!-- start item sqlstatements block -->
    <!-- 前受金番号 -->
    <entry key="get-advance-payment">
        DECLARE
            @typeId VARCHAR(4),@typeNo VARCHAR(9),
            @typeNoNextValue INT,@typeNoMaxLength INT,
      @typeNoMaxValue INT
        SET @typeId = ?
            
    IF @typeId = '0001'
      SET @typeNoMaxLength = 8
    ELSE IF @typeId = '0002' OR @typeId = '0003' OR @typeId = '0004'
      SET @typeNoMaxLength = 9
    ELSE
      SET @typeNoMaxLength = 9

    SET @typeNoMaxValue = CONVERT(INT,REPLICATE('9', @typeNoMaxLength))   
        SET @typeNo = ( SELECT seq.SequenceNo FROM   RESMaster.dbo.MST_SEQUENCE seq
                        WHERE  seq.SequenceTypeId = @typeId)
        SET @typeNoNextValue = CONVERT(INT,@typeNo) + 1

        IF @typeNoNextValue &lt;= @typeNoMaxValue AND @typeNoNextValue > 0
            BEGIN
                SET @typeNo = RIGHT( REPLICATE('0', @typeNoMaxLength) + CONVERT(VARCHAR,@typeNoNextValue), @typeNoMaxLength)       
                UPDATE RESMaster.dbo.MST_SEQUENCE SET SequenceNo = @typeNo
                OUTPUT INSERTED.SequenceTypeId,INSERTED.SequenceNo,INSERTED.SequenceTypeName
                WHERE SequenceTypeId = @typeId
            END
        ELSE IF @typeNoNextValue > @typeNoMaxValue
            BEGIN
        SET @typeNo = REPLICATE('0', @typeNoMaxLength - 1) + '1'
        UPDATE RESMaster.dbo.MST_SEQUENCE SET SequenceNo = @typeNo
        OUTPUT INSERTED.SequenceTypeId,INSERTED.SequenceNo,INSERTED.SequenceTypeName
        WHERE SequenceTypeId = @typeId
            END
        ElSE
            BEGIN
        SELECT seq.SequenceTypeId,seq.SequenceNo,seq.SequenceTypeName
                FROM   RESMaster.dbo.MST_SEQUENCE seq
                WHERE  seq.SequenceTypeId = @typeId
            END
  </entry>
 <entry key="get-item">

DECLARE    @storeId VARCHAR(10) ,@companyId VARCHAR(12), @MdInternal VARCHAR(32), @businessDate VARCHAR(32)
    SET        @storeId = LTRIM(RTRIM(?))
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @MdInternal = LTRIM(RTRIM(?))
     SET       @businessDate = LTRIM(RTRIM(?))
SELECT TOP 1
       plu.CompanyId,
       plu.StoreId,
       plu.MdInternal,
       plu.MdType,
       plu.MdVender,
       plu.Dpt,
       plu.Line,
       plu.Class,
       plu.Sku,
       plu.Md01,
       plu.Md02,
       plu.Md03,
       plu.Md04,
       plu.Md05,
       plu.Md06,
       plu.Md07,
       plu.Md08,
       plu.Md09,
       plu.Md10,
       plu.Md11,
       plu.Md12,
       plu.Md13,
       plu.Md14,
       plu.Md15,
       plu.Md16,
       plu.MdNameLocal,
       plu.MdKanaName,
       plu.OrgSalesPrice1,
       urgent.NewPrice,
       urgent.OldPrice,
       plustore.SalesPrice,
       plu.SalesPrice1,
       plu.SalesPrice2,
       plu.CostPrice1,
       plu.SalesDate,
       plu.MakerPrice,
       plu.TaxType,
       plu.TaxRate,
       plu.DiscountType,
       plu.PaymentType,
       plu.Conn1,
       plu.ConnType1,
       plu.Conn2,
       plu.DiscountFlag,
       plu.SubCode1,
       plu.SubCode2,
       plu.SubCode3,
       plu.SubNum1,
       plu.SubNum2,
       plu.DeleteFlag,
       plu.DelDate,
       plu.DelAppId,
       plu.DelOpeCode,
       plu.InsDate,
       plu.InsAppId,
       plu.InsOpeCode,
       plu.UpdCount,
       plu.UpdDate,
       plu.UpdAppId,
       plu.UpdOpeCode,
       classInfo.ClassNameLocal,
       dpt.DiscountType dptDiscountType,
       dpt.DptNameLocal,
       dpt.SubCode1 dptSubCode1,
       groupInfo.GroupName,
       groupInfo.GroupId,
       system.NameText,
       plu.DiscountType DiscountType,
       colorInfo.Colorkananame,
       sizeInfo.SizeKanaName
FROM 
  RESMaster.dbo.MST_PLU plu
LEFT JOIN RESMaster.dbo.MST_PLU_STORE plustore
    ON plu.CompanyId = plustore.CompanyId
    AND plustore.StoreId = @storeId
    AND plustore.MdInternal = plu.MdInternal
    AND plustore.DeleteFlag = 0.0 
LEFT JOIN RESMaster.dbo.MST_DPTINFO dpt
ON plu.CompanyId = dpt.CompanyId
AND  dpt.StoreId = plu.StoreId
AND plu.Dpt = dpt.Dpt
AND dpt.DeleteFlag =0.0
LEFT JOIN RESMaster.dbo.MST_GROUPINFO groupInfo
ON   plu.CompanyId = groupInfo.CompanyId
AND  plu.StoreId = groupInfo.StoreId
AND  dpt.SubCode1 = groupInfo.GroupId
AND groupInfo.DeleteFlag =0.0
LEFT JOIN RESMaster.dbo.MST_CLASSINFO classInfo
ON plu.Class = classInfo.Class
AND plu.CompanyId = classInfo.CompanyId
AND plu.StoreId = classInfo.StoreId
AND plu.dpt = classInfo.dpt
AND plu.line = classInfo.line
AND classInfo.DeleteFlag =0.0
LEFT JOIN RESMaster.dbo.MST_NAME_SYSTEM system
ON plu.CompanyId = system.CompanyId
AND plu.StoreId = system.StoreId
AND system.NameId = plu.TaxType
AND system.NameCategory = '0060'
AND system.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_COLORINFO colorInfo 
ON plu.CompanyId = colorInfo.CompanyId
AND plu.StoreId = colorInfo.StoreId
AND plu.Md01 = colorInfo.ColorId
AND colorInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_SIZEINFO sizeInfo
ON plu.CompanyId = sizeInfo.CompanyId
AND plu.StoreId = sizeInfo.StoreId
AND plu.Md05 = sizeInfo.SizeId

LEFT JOIN  (
    SELECT 
        info.CompanyId,
        info.Sku,
        info.SequenceNo,
        info.ColorId,
        info.NewPrice,
        info.OldPrice
    FROM RESMaster.dbo.MST_PRICE_URGENT_INFO_FORSTORE info
    INNER  JOIN RESMaster.dbo.MST_PRICE_URGENT_STORE_FORSTORE store 
    ON info.CompanyId  = store.CompanyId 
    AND info.RecordId = store.RecordId
    AND store.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN store.StartDate AND store.EndDate 
    AND store.TargetStoreType IN ('0','2') OR (store.TargetStoreType = '1' AND store.StoreId = @storeId)
    AND info.DeleteFlag = 0.0
    
) urgent ON 
plu.CompanyId  = urgent.CompanyId 
AND plu.Sku  = urgent.Sku 
AND plu.Md01 = urgent.ColorId 
 
WHERE plu.companyId = @companyId  AND plu.MdInternal = @MdInternal AND plu.StoreId = '0' AND plu.DeleteFlag = 0.0
ORDER BY urgent.SequenceNo DESC

</entry>

<entry key="get-price-ReplaceSupport-info">


DECLARE    @storeId VARCHAR(10) ,@companyId VARCHAR(12), @sku VARCHAR(32), @businessDate VARCHAR(32)
    SET        @storeId = LTRIM(RTRIM(?))
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))

IF NOT EXISTS (
    SELECT
        TOP 1
        info.PromotionId 
    FROM  RESMaster.dbo.MST_REPLACESUPPORT_INFO info 
    INNER  JOIN RESMaster.dbo.MST_REPLACESUPPORT_DETAIL detail 
        ON info.companyId = detail.companyId 
        AND info.PromotionId = detail.PromotionId
        AND detail.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0 AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
        AND info.companyId =  @companyId 
        AND detail.sku = @sku 
        AND info.TargetStoreType = '1'
        ORDER BY info.UpdDate DESC)

    SELECT 
        TOP 1
        info.CompanyId,
        info.PromotionName, 
        detail.Sku, 
        detail.DiscountAmt,
        info.PromotionId
    FROM  RESMaster.dbo.MST_REPLACESUPPORT_INFO info 
    INNER  JOIN RESMaster.dbo.MST_REPLACESUPPORT_DETAIL detail 
        ON info.companyId = detail.companyId 
        AND info.PromotionId = detail.PromotionId 
        AND detail.DeleteFlag = 0.0
    WHERE 
        info.DeleteFlag = 0.0 
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
        AND info.companyId =  @companyId 
        AND detail.sku = @sku
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
        ORDER BY info.UpdDate DESC

ELSE

     SELECT 
        TOP 1
        info.CompanyId ,
        info.PromotionName, 
        detail.Sku, detail.DiscountAmt,
        info.PromotionId 
     FROM  RESMaster.dbo.MST_REPLACESUPPORT_INFO info 
     INNER  JOIN RESMaster.dbo.MST_REPLACESUPPORT_DETAIL detail 
        ON info.companyId = detail.companyId 
        AND info.PromotionId = detail.PromotionId 
        AND detail.DeleteFlag = 0.0
     INNER JOIN RESMaster.dbo.MST_REPLACESUPPORT_STORE store
        ON info.companyId = store.companyId 
        AND info.PromotionId = store.PromotionId
        AND store.StoreId = @storeId AND store.DeleteFlag = 0.0
    WHERE 
        info.DeleteFlag = 0.0 
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
        AND info.companyId = @companyId 
        AND detail.sku = @sku
        AND info.TargetStoreType = '1'
        ORDER BY info.UpdDate DESC
        

</entry>

<entry key="get-price-prom-info">

DECLARE    @storeId VARCHAR(10) ,
           @companyId VARCHAR(12), 
           @sku VARCHAR(32), 
           @businessDate VARCHAR(32),
           @dpt VARCHAR(32), 
           @BrandId VARCHAR(32), 
           @class VARCHAR(32)

    SET       @storeId = LTRIM(RTRIM(?))
    SET       @companyId = LTRIM(RTRIM(?))
    SET       @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
    SET       @dpt = LTRIM(RTRIM(?))
    SET       @BrandId = LTRIM(RTRIM(?))
    SET       @class = LTRIM(RTRIM(?))
IF NOT EXISTS (
SELECT   
    TOP 1
    info.PromotionNo
FROM RESMaster.dbo.MST_PRICE_PROM_INFO info 
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail 
    ON info.companyId = detail.companyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate 
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
    AND info.companyId = @companyId 
    AND info.TargetStoreType = '1'
    AND ((PromotionType ='1' AND detail.Dpt = @dpt ) 
        OR (PromotionType ='2' AND  detail.Class = @class)
        OR (PromotionType ='3' AND detail.sku = @sku ))
        AND ((BrandFlag = '1' AND (detail.BrandId = @BrandId OR detail.BrandId IS NULL)) OR BrandFlag = '0')
        ORDER BY info.UpdDate DESC)


SELECT 
    TOP 1
    info.PromotionNo,
    info.PromotionName,
    detail.PromotionDetailNo,
    detail.BrandFlag,
    detail.DiscountClass,
    detail.DiacountRate,
    detail.DiscountAmt,
    detail.DiscountClass
 FROM  RESMaster.dbo.MST_PRICE_PROM_INFO info 
 INNER  JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail 
    ON info.companyId = detail.companyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate 
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
    AND info.companyId = @companyId 
    AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
    AND ((PromotionType ='1' AND detail.Dpt = @dpt ) 
        OR (PromotionType ='2' AND  detail.Class = @class)
    OR (PromotionType ='3' AND detail.sku = @sku ))
   AND ((BrandFlag = '1' AND (detail.BrandId = @BrandId OR detail.BrandId IS NULL)) OR BrandFlag = '0')
    ORDER BY info.UpdDate DESC

ELSE

SELECT  
    TOP 1
    store.CompanyId,
    info.PromotionNo,
    info.PromotionName,
    detail.PromotionDetailNo,
    detail.BrandFlag,
    detail.DiacountRate,
    detail.DiscountAmt,
    detail.DiscountClass
   
FROM  RESMaster.dbo.MST_PRICE_PROM_INFO info 
INNER  JOIN RESMaster.dbo.MST_PRICE_PROM_DETAIL detail 
    ON info.companyId = detail.companyId AND info.PromotionNo = detail.PromotionNo
    AND detail.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN detail.StartDate AND detail.EndDate 
INNER JOIN RESMaster.dbo.MST_PRICE_PROM_STORE store
   ON info.companyId = store.companyId
   AND info.PromotionNo = store.PromotionNo
   AND store.StoreId = @storeId
   AND store.DeleteFlag = 0.0
WHERE info.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
    AND info.companyId = @companyId 
    AND info.TargetStoreType = '1'
    AND ((PromotionType ='1' AND detail.Dpt = @dpt ) 
        OR (PromotionType ='2'  AND  detail.Class = @class)
    OR (PromotionType ='3'  AND detail.sku = @sku ))
    AND ((BrandFlag = '1' AND (detail.BrandId = @BrandId OR detail.BrandId IS NULL)) OR BrandFlag = '0')
        ORDER BY info.UpdDate DESC

</entry>

<entry key="get-price-mm-info">
DECLARE    @storeId VARCHAR(10) ,@companyId VARCHAR(12), @sku VARCHAR(32), @businessDate VARCHAR(32)
    SET        @storeId = LTRIM(RTRIM(?))
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
IF NOT EXISTS (
    SELECT 
        TOP 1
        info.MMNo 
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info 
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail 
        ON info.companyId = detail.companyId 
        AND info.MMNo = detail.MMNo
        AND detail.DeleteFlag = 0.0
    WHERE 
        info.DeleteFlag = 0.0 
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
        AND info.companyId =  @companyId 
        AND detail.sku = @sku 
        AND info.TargetStoreType = '1')

    SELECT 
        TOP 1
        info.CompanyId,  
        info.Note,
        info.ConditionCount1,
        info.ConditionPrice1,
        info.DecisionPrice1 ,
        info.AveragePrice1  ,
        info.ConditionCount2,
        info.ConditionPrice2,
        info.DecisionPrice2 ,
        info.AveragePrice2  ,
        info.ConditionCount3,
        info.ConditionPrice3,
        info.DecisionPrice3,
        info.AveragePrice3,
        info.MMNo
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info 
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail 
        ON info.companyId = detail.companyId 
        AND info.MMNo = detail.MMNo 
        AND detail.DeleteFlag = 0.0
    WHERE 
        info.DeleteFlag = 0.0 
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
        AND info.companyId =  @companyId 
        AND detail.sku = @sku
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
        

ELSE

    SELECT 
        TOP 1
        info.CompanyId,  
        info.Note,
        info.ConditionCount1,
        info.ConditionPrice1,
        info.DecisionPrice1 ,
        info.AveragePrice1  ,
        info.ConditionCount2,
        info.ConditionPrice2,
        info.DecisionPrice2 ,
        info.AveragePrice2  ,
        info.ConditionCount3,
        info.ConditionPrice3,
        info.DecisionPrice3,
        info.AveragePrice3,
        info.MMNo
    FROM  RESMaster.dbo.MST_PRICE_MM_INFO info 
    INNER  JOIN RESMaster.dbo.MST_PRICE_MM_DETAIL detail 
        ON info.companyId = detail.companyId 
        AND info.MMNo = detail.MMNo 
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_PRICE_MM_STORE store
        ON info.companyId = store.companyId 
        AND info.MMNo = store.MMNo
        AND store.StoreId = @storeId 
        AND store.DeleteFlag = 0.0
    WHERE 
        info.DeleteFlag = 0.0 
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
        AND info.companyId =  @companyId 
        AND detail.sku = @sku
        AND info.TargetStoreType = '1'
        

</entry>

<entry key="get-coupon-info">
DECLARE    @storeId VARCHAR(10) ,
           @companyId VARCHAR(12), 
           @sku VARCHAR(32), 
           @businessDate VARCHAR(32),
           @dpt VARCHAR(32),
           @BrandId VARCHAR(32)

    SET       @storeId = LTRIM(RTRIM(?))
    SET       @companyId = LTRIM(RTRIM(?))
    SET       @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
    SET       @dpt = LTRIM(RTRIM(?))
    SET       @BrandId = LTRIM(RTRIM(?))
IF NOT EXISTS (
    SELECT
        TOP 1
        info.CouponNo
    FROM  RESMaster.dbo.MST_COUPON_INFO info 
    INNER  JOIN RESMaster.dbo.MST_COUPON_DETAIL detail 
        ON info.companyId = detail.companyId
        AND info.CouponNo = detail.CouponNo
        AND detail.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
     AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
     
     AND info.companyId = @companyId
     AND info.TargetStoreType = '1'
         AND ((CouponType = '1' AND detail.Dpt = @dpt AND (detail.BrandId = @BrandId OR detail.BrandId IS null)) OR
          (CouponType = '2' AND detail.sku = @sku ))
         ORDER BY info.UpdDate DESC)

    SELECT   
        TOP 1
        info.CouponNo,
        info.EvenetName , 
        info.ReceiptName,
        info.UnitPrice,
        info.IssueCount,
        info.IssueType,
        detail.CouponDetailNo,
        detail.CouponType,
        detail.Dpt,detail.Sku,
        detail.BrandId
    FROM  RESMaster.dbo.MST_COUPON_INFO info 
    INNER  JOIN RESMaster.dbo.MST_COUPON_DETAIL detail 
        ON info.companyId = detail.companyId
        AND info.CouponNo = detail.CouponNo
        AND detail.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
        AND info.companyId = @companyId
        AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
         AND ((CouponType = '1' AND detail.Dpt = @dpt AND (detail.BrandId = @BrandId OR detail.BrandId IS null)) OR
          (CouponType = '2' AND detail.sku = @sku ))
         ORDER BY info.UpdDate DESC
ELSE

    SELECT   
        TOP 1
        info.CouponNo,
        info.EvenetName , 
        info.ReceiptName,
        info.UnitPrice,
        info.IssueCount,
        info.IssueType,
        detail.CouponDetailNo,detail.CouponType,
        detail.Dpt,detail.Sku,detail.BrandId
     FROM  RESMaster.dbo.MST_COUPON_INFO info 
     INNER  JOIN RESMaster.dbo.MST_COUPON_DETAIL detail 
        ON info.companyId = detail.companyId
        AND info.CouponNo = detail.CouponNo
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_COUPON_STORE store
        ON info.companyId = store.companyId
        AND info.CouponNo = store.CouponNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
        AND info.companyId = @companyId
        AND info.TargetStoreType = '1'
        AND ((CouponType = '1' AND detail.Dpt = @dpt AND (detail.BrandId = @BrandId OR detail.BrandId IS null)) OR
          (CouponType = '2' AND detail.sku = @sku ))
            ORDER BY info.UpdDate DESC
        
</entry>

<entry key="get-premiumitem-info">
DECLARE    @storeId VARCHAR(10) ,
           @companyId VARCHAR(12), 
           @sku VARCHAR(32), 
           @businessDate VARCHAR(32),
           @dpt VARCHAR(32),
           @brandId VARCHAR(32),
           @conn VARCHAR(32)

    SET       @storeId = LTRIM(RTRIM(?))
    SET       @companyId = LTRIM(RTRIM(?))
    SET       @sku = LTRIM(RTRIM(?))
    SET       @businessDate = LTRIM(RTRIM(?))
    SET       @dpt = LTRIM(RTRIM(?))
    SET       @brandId = LTRIM(RTRIM(?))
    SET       @conn = LTRIM(RTRIM(?))
SELECT * FROM (

   SELECT   
       info.UpdDate,
       info.PremiumItemNo, 
       detail.Dpt,
       detail.Sku,
       detail.BrandId,
       detail.ConnCode,
       info.PremiumItemName,
       info.TargetPrice,
       info.TargetCount
   FROM  RESMaster.dbo.MST_PREMIUMITEM_INFO info 
   INNER  JOIN RESMaster.dbo.MST_PREMIUMITEM_DETAIL detail 
       ON info.companyId = detail.companyId
       AND info.PremiumItemNo = detail.PremiumItemNo
       AND detail.DeleteFlag = 0.0
   WHERE info.DeleteFlag = 0.0
       AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
       AND info.companyId = @companyId
       AND (info.TargetStoreType = '0' OR info.TargetStoreType = '2')
       AND ((detail.PreminumItemType = '1' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL)) 
             OR (detail.PreminumItemType = '2' AND detail.Dpt = @dpt  AND( detail.BrandId = @brandId OR  detail.BrandId IS NULL)) 
             OR(detail.PreminumItemType = '3'  AND detail.sku = @sku  ))
       
UNION
     SELECT   
         info.UpdDate,
         info.PremiumItemNo, 
         detail.Dpt,
         detail.Sku,
         detail.BrandId,
         detail.ConnCode,
         info.PremiumItemName,
        info.TargetPrice,
        info.TargetCount
      
     FROM  RESMaster.dbo.MST_PREMIUMITEM_INFO info 
     INNER  JOIN RESMaster.dbo.MST_PREMIUMITEM_DETAIL detail 
         ON info.companyId = detail.companyId
        AND info.PremiumItemNo = detail.PremiumItemNo
        AND detail.DeleteFlag = 0.0
    INNER JOIN RESMaster.dbo.MST_PREMIUMITEM_STORE store
        ON info.companyId = store.companyId
        AND info.PremiumItemNo = store.PremiumItemNo
        AND store.StoreId = @storeId
        AND store.DeleteFlag = 0.0
    WHERE info.DeleteFlag = 0.0
        AND CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate  
        AND info.companyId = @companyId
        AND info.TargetStoreType = '1'
        AND ((detail.PreminumItemType = '1' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL)) 
             OR (detail.PreminumItemType = '2' AND detail.Dpt = @dpt  AND( detail.BrandId = @brandId OR  detail.BrandId IS NULL)) 
             OR(detail.PreminumItemType = '3'  AND detail.sku = @sku  ))
) PREMIUMITEM   ORDER BY PREMIUMITEM.UpdDate DESC
</entry>

<entry key="get-taxrate-info">
  DECLARE @businessDate VARCHAR(32)
          
    SET  @businessDate = LTRIM(RTRIM(?))
  
  SELECT TaxRate , 2 as TaxRateFlag FROM  RESMaster.dbo.MST_TAXRATE 
  WHERE 
    CONVERT(DATE,@businessDate) BETWEEN StartDate AND EndDate
  UNION ALL

 SELECT TaxRate , 3 as TaxRateFlag FROM  RESMaster.dbo.MST_TAXRATE 
  WHERE  CONVERT(DATE,@businessDate) &lt; StartDate
 UNION ALL
 SELECT TaxRate , 1 as TaxRateFlag FROM  RESMaster.dbo.MST_TAXRATE 
  WHERE  CONVERT(DATE,@businessDate) &gt; EndDate
 


</entry>

<entry key="get-qrcode-info">

DECLARE @companyId VARCHAR(32),
        @dpt VARCHAR(32),
        @brandId VARCHAR(32),
        @class VARCHAR(32), 
        @sku VARCHAR(32),
        @storeId VARCHAR(32),
        @businessDate VARCHAR(10), 
        @conn VARCHAR(32)

SET @companyId =LTRIM(RTRIM(?))
SET @dpt =LTRIM(RTRIM(?))
SET @brandId =LTRIM(RTRIM(?))
SET @class =LTRIM(RTRIM(?))
SET @sku =LTRIM(RTRIM(?))
SET @storeId =LTRIM(RTRIM(?))
SET @businessDate =LTRIM(RTRIM(?))
SET @conn =LTRIM(RTRIM(?))
SELECT * FROM(

SELECT 
    info.PromotionId QRPromotionId,
    info.PromotionName QRPromotionName,
    info.MinimumPrice,
    info.OutputTargetValue,
    info.BMPFileName,
    info.BMPFileFlag,
    info.BMPFileCount,
    info.OutputType,
    info.DisplayOrder
FROM 
    RESMaster.dbo.MST_QRCODE_INFO info
INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
    ON info.CompanyId = detail.CompanyId
    AND info.PromotionId = detail.PromotionId
    AND detail.DeleteFlag = 0.0
WHERE 
    CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
    AND info.DeleteFlag = 0.0 
    AND info.CompanyId = @CompanyId
    AND (detail.PromotionType = '1' 
             OR (detail.PromotionType = '2' AND detail.Dpt = @dpt )
             OR (detail.PromotionType = '3' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL))
             OR (detail.PromotionType = '4' AND detail.Dpt = @dpt  AND (detail.BrandId = @brandId OR detail.BrandId IS NULL))
             OR (detail.PromotionType = '5' AND detail.Class = @class )
             OR (detail.PromotionType = '6' AND detail.Sku = @sku)
    )
    AND info.TargetStoreType IN ('0','2') 

UNION 

SELECT 
    info.PromotionId QRPromotionId,
    info.PromotionName QRPromotionName,
    info.MinimumPrice,
    info.OutputTargetValue,
    info.BMPFileName,
    info.BMPFileFlag,
    info.BMPFileCount,
    info.OutputType,
    info.DisplayOrder
FROM 
    RESMaster.dbo.MST_QRCODE_INFO info
INNER JOIN RESMaster.dbo.MST_QRCODE_DETAIL detail
    ON info.CompanyId = detail.CompanyId
    AND info.PromotionId = detail.PromotionId
    AND detail.DeleteFlag = 0.0
INNER JOIN RESMaster.dbo.MST_QRCODE_STORE store
    ON info.CompanyId = store.CompanyId
    AND store.DeleteFlag = 0.0
    AND store.PromotionId = info.PromotionId
    AND store.StoreId = @storeId
WHERE 
    CONVERT(DATE,@businessDate) BETWEEN info.StartDate AND info.EndDate 
    AND info.DeleteFlag = 0.0 
    AND info.CompanyId = @CompanyId
    AND (detail.PromotionType = '1' 
             OR (detail.PromotionType = '2' AND detail.Dpt = @dpt )
             OR (detail.PromotionType = '3' AND detail.Dpt = @dpt  AND (detail.ConnCode = @conn OR detail.ConnCode IS NULL))
             OR (detail.PromotionType = '4' AND detail.Dpt = @dpt  AND (detail.BrandId = @brandId OR detail.BrandId IS NULL))
             OR (detail.PromotionType = '5' AND detail.Class = @class )
             OR (detail.PromotionType = '6' AND detail.Sku = @sku)
    )
    
) A ORDER BY DisplayOrder

</entry>

<entry key="get-guest-order-info">
  SELECT pos.GuestNo ,
  pos.Line ,
  pos.RetailStoreId ,
  pos.BusinessDate ,
  pos.BusinessDateTime ,
  pos.TranNo ,
  pos.TerminalNo ,
  pos.OpeCode ,
  pos.OpeName ,
  pos.KaiinNo ,
  pos.KaiinNoSeiSan ,
  pos.OrderKbn ,
  pos.MdInternal ,
  pos.Md1 ,
  pos.Md2 ,
  pos.Md3 ,
  pos.Md4 ,
  pos.Md5 ,
  pos.Md6 ,
  pos.Md7 ,
  pos.Md8 ,
  pos.Md9 ,
  pos.Md10 ,
  pos.MdName ,
  pos.SalesCnt ,
  pos.SalesPrice ,
  pos.SalesAmt ,
  pos.DepositAmt ,
  pos.TelKakuninFlag ,
  pos.SeisanDate ,
  pos.SeisanDateTime ,
  pos.CommitSalesAmt ,
  pos.RepayAmt ,
  pos.BalanceAmt ,
  pos.StatusCode ,
  pos.POSFlag ,
  pos.PluFlag ,
  pos.Memo ,
  pos.MerchandiseHierarchy1 ,
  pos.MerchandiseHierarchy2 ,
  pos.MerchandiseHierarchy3 ,
  pos.MerchandiseHierarchy4 ,
  pos.MerchandiseHierarchy5 ,
  pos.TaxType ,
  pos.PosMdType ,
  pos.TagType ,
  pos.KeyPlu ,
  pos.MdType ,
  pos.Plu ,
  pos.Flag1 ,
  pos.Flag2 ,
  pos.Type1 ,
  pos.Type2 ,
  pos.InsDate ,
  pos.UpdDate ,
  pos.UpdAppId ,
  pos.UpdOpeCode,
  COALESCE(dpt.DptName, '') DptName,
  COALESCE(dpt.DptNameLocal, '') DptNameLocal
  FROM TXL_POS_GUEST_ORDER pos
  LEFT JOIN
  RESMaster.dbo.MST_DPTINFO dpt ON dpt.StoreId = CASE WHEN EXISTS ( SELECT Dpt
                                    FROM RESMaster.dbo.MST_DPTINFO
                                    WHERE Dpt = pos.MerchandiseHierarchy1
                                      AND StoreId = pos.RetailStoreId ) 
                                THEN pos.RetailStoreId
                            ELSE '0'
                           END
  AND pos.MerchandiseHierarchy1 = dpt.Dpt
  WHERE pos.GuestNo = LTRIM(RTRIM(?))
  AND pos.StatusCode = '0'
  ORDER BY Line
  </entry>

  <entry key="get-reservation-info">
    SELECT      res.GuestNo,
                res.Line,
                res.RetailStoreId,
                res.BusinessDate,
                res.BusinessDateTime,
                res.TranNo,
                res.TerminalNo,
                res.OpeCode,
                res.OpeName,
                res.KaiinNo,
                res.KaiinNoSeiSan,
                res.OrderKbn,
                res.MdInternal,
                res.Md1,
                res.Md2,
                res.Md3,
                res.Md4,
                res.Md5,
                res.Md6,
                res.Md7,
                res.Md8,
                res.Md9,
                res.Md10,
                res.MdName,
                res.SalesCnt,
                res.SalesPrice,
                res.SalesAmt,
                res.DepositAmt,
                res.TelKakuninFlag,
                res.SeisanDate,
                res.SeisanDateTime,
                res.CommitSalesAmt,
                res.RepayAmt,
                res.BalanceAmt,
                res.StatusCode,
                res.POSFlag,
                res.PluFlag,
                res.Memo,
                res.MerchandiseHierarchy1,
                res.MerchandiseHierarchy2,
                res.MerchandiseHierarchy3,
                res.MerchandiseHierarchy4,
                res.MerchandiseHierarchy5,
                res.TaxType,
                res.PosMdType,
                res.TagType,
                res.KeyPlu,
                res.MdType,
                res.Plu,
                res.Flag1,
                res.Flag2,
                res.Flag3,
                res.Flag4,
                res.Flag5,
                res.Type1,
                res.Type2,
                res.InsDate,
                res.UpdDate,
                res.UpdAppId,
                res.UpdOpeCode,
                COALESCE(dpt.DptName, '') DptName,
                COALESCE(dpt.DptNameLocal, '') DptNameLocal
    FROM        TXL_POS_GUEST_RESERVATION res
                LEFT JOIN
                RESMaster.dbo.MST_DPTINFO dpt ON dpt.StoreId = CASE WHEN EXISTS (
                                                                                    SELECT  Dpt
                                                                                    FROM    RESMaster.dbo.MST_DPTINFO
                                                                                    WHERE   Dpt = res.MerchandiseHierarchy1
                                                                                    AND     StoreId = res.RetailStoreId
                                                                                ) THEN res.RetailStoreId
                                                                    ELSE '0'
                                                               END
                AND res.MerchandiseHierarchy1 = dpt.Dpt
    WHERE       res.GuestNo = LTRIM(RTRIM(?))
    AND         res.StatusCode = '0'
    ORDER BY    Line
  </entry>
  
  <entry key="get-reservation-max-line">
   SELECT  MAX(Line)  AS maxLine
   FROM    TXL_POS_GUEST_RESERVATION
   WHERE   GuestNo = ?
  </entry>
  
  <entry key="get-till-information-list">
  DECLARE    @storeId VARCHAR(6)
  SET        @storeId = LTRIM(RTRIM(?))
  SELECT     StoreId,
               TillId,
             TerminalId,
             BusinessDayDate,
             SodFlag,
             EodFlag
    FROM RESMaster.dbo.MST_TILLIDINFO
    WHERE StoreId = @storeId
    ORDER BY StoreId
  </entry>

    <entry key="get-print-report-value">

        SELECT
           RetailStoreId
             ,TillID,AccountCode,AccountSubCode,BusinessDayDate,TotalNumber,TotalMoney
        FROM
            TXU_TOTAL_DRAWER_FINANCIAL
        WHERE
            BusinessDayDate=? and RetailStoreId=?;

    </entry>

  <entry key="get-item-without-enterprise">
    DECLARE @plu varchar(32), @storeid varchar(10)
    SET @plu = ?
    SET @storeid = ?

    SELECT DISTINCT
      plu.Plu,
      plu.StoreId,
      plu.MdInternal
    FROM
      RESMaster.dbo.MST_PLU plu
    LEFT JOIN
      RESMaster.dbo.MST_DPTINFO dpt
    ON
      dpt.Dpt = plu.Dpt AND dpt.StoreId = plu.StoreId
    WHERE
      plu.MdInternal= @plu AND plu.StoreId = @storeid
  </entry>

  <entry key="set-itemPrice">
    DECLARE
      @salesprice numeric(15, 0),
      @plu varchar(max),
      @storeid varchar(max),
      @updappid varchar(max),
      @updopecode varchar(max)

    SET @salesprice=?
    SET @plu=?
    SET @storeid=?
    SET @updappid=?
    SET @updopecode=?

    IF NOT EXISTS(SELECT MdInternal FROM RESMaster.dbo.MST_PLU WHERE MdInternal = @plu AND StoreId = @storeid)
          SET @storeid='0'

    UPDATE
      RESMaster.dbo.MST_PLU
    SET
      SalesPrice1 = @salesprice,
      UpdDate = GETDATE(),
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode
    OUTPUT
      INSERTED.MdInternal,
      INSERTED.MdName,
      INSERTED.MdNameLocal,
      INSERTED.SalesPrice1,
      INSERTED.Dpt,
      INSERTED.Line,
      INSERTED.Class,
      INSERTED.DiscountType,
      INSERTED.AgeRestrictedFlag
    WHERE
      MdInternal = @plu AND
      StoreId = @storeid;
  </entry>

  <entry key="get-item-for-searchproduct">
  DECLARE @plu VARCHAR(32),
      @mdname VARCHAR(80),
      @md01 VARCHAR(10),
      @md03 VARCHAR(10),
      @itemsize VARCHAR(20),
      @dpt VARCHAR(20),
      @vendercode VARCHAR(20),
      @md05 VARCHAR(10)

    SET @plu = ISNULL(?, '')
    SET @mdname = ISNULL(?, '')
    SET @md01 = ISNULL(?, '')
    SET @md03 = ISNULL(?, '')
    SET @itemsize = ISNULL(?, '')
    SET @dpt = ISNULL(?, '')
    SET @vendercode = ISNULL(?, '')
    SET @md05 = ISNULL(?, '')

  SELECT  PLU.MdInternal,
      ISNULL(PLU.MdNameLocal, '') MdNameLocal,
      ISNULL(PLU.MdName, '') MdName,
      PLU.TaxType,
      PLU.TaxRate,
      PLU.DiscountType,
      PLU.DiscountFlag,
      PLU.DiscountRate,
      PLU.DiscountAmt,
          CASE WHEN ISNULL(PRICE.SalesPrice, 0) = 0 THEN ISNULL(PLU.SalesPrice1, 0)
               ELSE PRICE.SalesPrice
          END SalesPrice
  FROM    RESMaster.dbo.MST_PLU PLU
  LEFT JOIN RESMaster.dbo.MST_MD_PRICE PRICE
  ON      PRICE.StoreId = CASE WHEN EXISTS ( SELECT StoreId
                                               FROM   RESMaster.dbo.MST_MD_PRICE
                                               WHERE  StoreId = PLU.StoreId ) THEN PLU.StoreId
                                 ELSE '0'
                            END
          AND PRICE.StartDateId = ( SELECT    MAX(StartDateId)
                                      FROM      RESMaster.dbo.MST_MD_PRICE
                                      WHERE     MdInternal = PLU.MdInternal)
          AND PRICE.SkuFlag = 1
          AND PLU.MdInternal = PRICE.MdInternal
  WHERE   ISNULL(LOWER(PLU.MdNameLocal), '') LIKE '%' + LOWER(@mdname) + '%'
          AND ISNULL(PLU.Md01, '') LIKE @md01 + '%'
          AND ISNULL(PLU.Md03, '') = CASE WHEN @md03 &lt;&gt; '' THEN @md03 ELSE ISNULL(PLU.Md03, '') END
          AND ISNULL(PLU.ItemSize, '') = CASE WHEN @itemsize &lt;&gt; '' THEN @itemsize ELSE ISNULL(PLU.ItemSize, '') END
          AND ISNULL(PLU.MdInternal, '') LIKE @plu + '%'
          AND ISNULL(PLU.Dpt, '') = CASE WHEN @dpt &lt;&gt; '' THEN @dpt ELSE ISNULL(PLU.Dpt, '') END
          AND ISNULL(PLU.VenderCode, '') = CASE WHEN @vendercode &lt;&gt; '' THEN @vendercode ELSE ISNULL(PLU.VenderCode, '') END
          AND ISNULL(PLU.Md05, '') = CASE WHEN @md05 &lt;&gt; '' THEN @md05 ELSE ISNULL(PLU.Md05, '') END
  </entry>
  
  <entry key="get-brand-product-info">
    DECLARE @dpt VARCHAR(20),
            @vendercode VARCHAR(20),
            @md05 VARCHAR(10),
            @md14 VARCHAR(10),
            @groupId VARCHAR(10),
            @line VARCHAR(20)

    SET @dpt = ISNULL(?, '')
    SET @vendercode = ISNULL(?, '')
    SET @md05 = ISNULL(?, '')
    SET @md14 = ISNULL(?, '')
    SET @groupId = ISNULL(?, '')
    SET @line = ISNULL(?, '')
    
    SELECT  ISNULL(NAME.Name, '') BrandName,
            ISNULL(PLU.Md01, '') Md01,
            ISNULL(PLU.MdShortName, '') MdShortName,
            PLU.TaxType,
            PLU.TaxRate,
            PLU.DiscountType,
      PLU.DiscountFlag,
      PLU.DiscountRate,
      PLU.DiscountAmt,
            CASE WHEN ISNULL(PRICE.SalesPrice, 0) = 0 THEN ISNULL(PLU.SalesPrice1, 0)
               ELSE PRICE.SalesPrice
          END SalesPrice,
          PLU.Line,
      count(*) Cnt
    FROM    RESMaster.dbo.MST_PLU PLU
    LEFT JOIN RESMaster.dbo.PRM_SYS_NAMETBL NAME
    ON      NAME.Target = PLU.VenderCode
            AND NAME.NameTypeId = 'brand_list'
    LEFT JOIN RESMaster.dbo.MST_MD_PRICE PRICE
    ON      PRICE.StoreId = CASE WHEN EXISTS ( SELECT   StoreId
                                               FROM     RESMaster.dbo.MST_MD_PRICE
                                               WHERE    StoreId = PLU.StoreId ) THEN PLU.StoreId
                                 ELSE '0'
                            END
            AND PRICE.StartDateId = ( SELECT    MAX(StartDateId)
                                      FROM      RESMaster.dbo.MST_MD_PRICE
                                      WHERE     PRICE.MdInternal = plu.MdInternal )
            AND PRICE.SkuFlag = 1
            AND PLU.MdInternal = PRICE.MdInternal
    WHERE PLU.Dpt = CASE WHEN @dpt &lt;&gt; '' THEN @dpt ELSE PLU.Dpt END
  AND   ISNULL(PLU.VenderCode, '') = CASE WHEN @vendercode &lt;&gt; '' THEN @vendercode ELSE ISNULL(PLU.VenderCode, '') END
  AND   ISNULL(PLU.Md05, '') = CASE WHEN @md05 &lt;&gt; '' THEN @md05 ELSE ISNULL(PLU.Md05, '') END
  AND   ISNULL(PLU.Md14, 0) = CASE WHEN @md14 &lt;&gt; '' THEN @md14 ELSE ISNULL(PLU.Md14, 0) END
  AND   ISNULL(PLU.SubCode1, '') = CASE WHEN @groupId &lt;&gt; '' THEN @groupId ELSE ISNULL(PLU.SubCode1, '') END
  AND   RIGHT(PLU.Line, LEN(@line)) = CASE WHEN @line &lt;&gt; '' THEN @line ELSE RIGHT(PLU.Line, LEN(@line)) END
  GROUP BY PLU.Md01, 
           CASE WHEN ISNULL(PRICE.SalesPrice, 0) = 0 THEN ISNULL(PLU.SalesPrice1, 0)
               ELSE PRICE.SalesPrice
           END,
           NAME.Name,
             PLU.MdShortName,
             PLU.TaxType,
             PLU.TaxRate,
             PLU.DiscountType,
       PLU.DiscountFlag,
       PLU.DiscountRate,
       PLU.DiscountAmt,
       PLU.Line
  ORDER BY PLU.Md01, 
           CASE WHEN ISNULL(PRICE.SalesPrice, 0) = 0 THEN ISNULL(PLU.SalesPrice1, 0)
               ELSE PRICE.SalesPrice
           END,
           NAME.Name,
             PLU.MdShortName,
             PLU.TaxType,
             PLU.TaxRate,
             PLU.DiscountType,
       PLU.DiscountFlag,
       PLU.DiscountRate,
       PLU.DiscountAmt,
       PLU.Line
  </entry>
  
  <entry key="get-group-line">
    SELECT  LTRIM(RTRIM(GROUPTBL.KeyId)) GroupId,
            GROUPTBL.Value GroupName,
            RIGHT(LINEINFO.Line, 3) Line,
            LINEINFO.LineNameLocal
    FROM    ( SELECT    Line,
                        LineNameLocal
              FROM      RESMaster.dbo.MST_LINEINFO
              GROUP BY  Line,
                        LineNameLocal ) AS LINEINFO,
            ( SELECT    KeyId,
                        Value
              FROM      RESMaster.dbo.PRM_SYSTEM_CONFIG
              WHERE      LTRIM(RTRIM(Category)) = 'GroupReport'
              GROUP BY  KeyId,
                        Value ) AS GROUPTBL
    GROUP BY GROUPTBL.KeyId,
             GROUPTBL.Value,
             RIGHT(LINEINFO.Line, 3),
             LINEINFO.LineNameLocal
    ORDER BY GROUPTBL.KeyId
  </entry>

  <entry key="count-item">
    SELECT count(*) FROM RESMaster.dbo.MST_PLU
          WHERE PLU LIKE ? AND CORPID = ? AND STOREID = ?;
  </entry>

  <entry key="get-all-items">
    SELECT
          MdInternal, item.StoreId, dpt.DptName,
          CASE WHEN(LEN(item.MdName) > 0)
            THEN COALESCE(item.MdName, '')
            ELSE COALESCE(dpt.DptName, '')
          END MdName,
          CASE WHEN(LEN(item.MdNameLocal) > 0)
            THEN COALESCE(item.MdNameLocal, '')
            ELSE COALESCE(dpt.DptNameLocal, '')
          END MdNameLocal,
          SalesPrice1, item.Dpt, Line, Class, item.DiscountType, item.DiscountRate, item.DiscountAmt, DiscountFlag, item.TaxType,
          item.MMCode, item.SubInt10, ROW_Number() OVER (PARTITION BY MdInternal ORDER BY item.StoreId DESC) AS rownumber, item.AgeRestrictedFlag, item.Md32
        FROM
          RESMaster.dbo.MST_PLU item
        LEFT JOIN
          RESMaster.dbo.MST_DPTINFO dpt
        ON
          dpt.Dpt = item.Dpt AND dpt.StoreId = item.StoreId
        ORDER BY item.StoreId ASC, MdInternal ASC

  </entry>

  <entry key="get-all-guestzone">
        SELECT GuestCode,
               GuestZoneName,
               GuestZoneKanaName,
               GuestGen,
               GuestSex,
               GuestType,
               SubCode
        FROM
               RESMaster.dbo.PRM_GUEST;
   </entry>

   <entry key="get-goldcertificate-type">
        SELECT  CrCompCode ,
                CrCompName ,
                CrCompKanaName ,
                Subcode1
        FROM    RESMaster.dbo.MST_COMPINFO
        WHERE CrCompCat= LTRIM(RTRIM(?))
   </entry>
<entry key="get-tenderinfo-type">
DECLARE
    @companyId VARCHAR (12),
    @storeId VARCHAR (10),
    @tenderType VARCHAR (50)
SET @storeId = LTRIM(RTRIM(?))
SET @companyId = LTRIM(RTRIM(?))
SET @tenderType = LTRIM(RTRIM(?)) 
    
IF NOT EXISTS (
  SELECT
    *
  FROM 
    RESMaster.dbo.MST_TENDERINFO
  WHERE 
    TenderType IN (
        SELECT
            TenderType
        FROM
            RESMaster.dbo.MST_TENDERINFO
        WHERE
            CHARINDEX(TenderType,@tenderType) &gt; 0
    )
    AND DeleteFlag = 0.0
    AND StoreId = @storeId
    AND CompanyId = @companyId
)
  SET @storeId = '0000'
  
SELECT
    CompanyId,
    StoreId,
    TenderType,
    TenderId,
    TenderName,
    TenderKanaName,
    StampType,
    PointType,
    ChangeType,
    UnitPrice,
    DisplayOrder
FROM
    RESMaster.dbo.MST_TENDERINFO
WHERE
    TenderType IN (
        SELECT
            TenderType
        FROM
            RESMaster.dbo.MST_TENDERINFO
        WHERE
            CHARINDEX(TenderType,@tenderType) &gt; 0
    )
AND DeleteFlag = 0.0
AND StoreId = @storeId
AND CompanyId = @companyId
ORDER BY
    DisplayOrder,
    TenderType
</entry>

<entry key="get-tender-info">
DECLARE
    @companyId VARCHAR (12),
    @storeId VARCHAR (10),
    @tenderType VARCHAR (50),
    @tenderId VARCHAR(20)
SET @storeId = LTRIM(RTRIM(?))
SET @companyId = LTRIM(RTRIM(?))
SET @tenderType = LTRIM(RTRIM(?)) 
SET @tenderId = LTRIM(RTRIM(?)) 
    
IF NOT EXISTS (
  SELECT
    *
  FROM 
    RESMaster.dbo.MST_TENDERINFO
  WHERE 
    TenderType = @tenderType
    AND DeleteFlag = 0.0
    AND StoreId = @storeId
    AND CompanyId = @companyId
    AND TenderId = @tenderId
)
  SET @storeId = '0000'
  
SELECT
    CompanyId,
    StoreId,
    TenderType,
    TenderId,
    TenderName,
    TenderKanaName,
    StampType,
    PointType,
    ChangeType,
    UnitPrice,
    DisplayOrder
FROM
    RESMaster.dbo.MST_TENDERINFO
WHERE
 TenderType = @tenderType
AND DeleteFlag = 0.0
AND StoreId = @storeId
AND CompanyId = @companyId
AND TenderId = @tenderId
ORDER BY
    DisplayOrder,
    TenderType
</entry>


<entry key="get-cashAbstract-type">
DECLARE
    @companyId VARCHAR (12),
    @storeId VARCHAR (10),
    @cashFlowDirection VARCHAR (50),
    @tenderId VARCHAR (50),
    @tenderType VARCHAR (50)
SET @storeId = LTRIM(RTRIM(?))
SET @companyId = LTRIM(RTRIM(?))
SET @cashFlowDirection = LTRIM(RTRIM(?))
SET @tenderId = LTRIM(RTRIM(?))
SET @tenderType = LTRIM(RTRIM(?))
SELECT
    a.CompanyId,
    a.StoreId,
    a.CashFlowDirection,
    a.CashFlowType,
    a.RemarksId,
    a.RemarksCol,
    a.RemarksKanaCol
FROM
    RESMaster.dbo.MST_CASHFLOW_REMARKS a,
    RESMaster.dbo.MST_TENDERINFO b
WHERE
    a.StoreId = @storeId
AND a.CompanyId = @companyId
AND a.CashFlowDirection = @cashFlowDirection
AND b.TenderId = @tenderId
AND b.TenderType = @tenderType
AND b.TenderId = a.CashFlowType
ORDER BY
    a.CashFlowDirection
</entry>
   <entry key="get-event-list">
   DECLARE @eventId VARCHAR(20), @eventKbn int, @businessDateId int,
           @storeId VARCHAR(6), @pluCode VARCHAR(32)
   SET @eventId = LTRIM(RTRIM(?))
   SET @eventKbn = LTRIM(RTRIM(?))
   SET @businessDateId = LTRIM(RTRIM(?))
   SET @storeId = LTRIM(RTRIM(?))
   SET @pluCode = LTRIM(RTRIM(?))
   IF NOT EXISTS(
                     SELECT EventId,
                    COALESCE(EventName, '') EventName,
                    StartDateId,
                    EndDateId,
                    MdInternal,
                    SalesPrice
                     FROM   RESMaster.dbo.MST_EVENT_PRICE
                     WHERE  @businessDateId &lt;= EndDateId
           AND    EventId = CASE WHEN @eventId &lt;&gt; '' THEN @eventId ELSE EventId END
           AND    StoreId = @storeId
           AND    MdInternal = CASE WHEN @pluCode &lt;&gt; '' THEN @pluCode ELSE MdInternal END
           AND    COALESCE(DelFlag, '0')! = '1'
        )
  SET @storeId = '0'
  SELECT   EventId,
         COALESCE(EventName, '') EventName,
         StartDateId,
         EndDateId,
         MdInternal,
         SalesPrice
  FROM     RESMaster.dbo.MST_EVENT_PRICE 
  WHERE    @businessDateId &lt;= EndDateId
  AND      EventId = CASE WHEN @eventId &lt;&gt; '' THEN @eventId ELSE EventId END
  AND      EventKbn = @eventKbn
  AND      StoreId = @storeId
  AND      MdInternal = CASE WHEN @pluCode &lt;&gt; '' THEN @pluCode ELSE MdInternal END
  AND      COALESCE(DelFlag, '0') != '1'
  ORDER BY StartDateId, EndDateId
   </entry>

  <entry key="get-event-for-eventcheck">
    DECLARE   @eventId VARCHAR(20),
              @storeId VARCHAR(6)
              
    SET @eventId = LTRIM(RTRIM(?))
    SET @storeId = LTRIM(RTRIM(?))
    IF NOT EXISTS(SELECT TOP 1*
                  FROM   RESMaster.dbo.MST_EVENT_PRICE 
                  WHERE  EventId =  @eventId 
          AND    StoreId = @storeId
          AND    COALESCE(DelFlag, '0')! = '1')
        SET @storeId = '0'
        
    SELECT Top 1*
    FROM   RESMaster.dbo.MST_EVENT_PRICE 
    WHERE  EventId =  @eventId 
  AND    StoreId = @storeId
    AND    COALESCE(DelFlag, '0')! = '1'
  </entry>

  <entry key="get-items-by-plu-prefix">
    DECLARE @plu varchar(max), @storeid varchar(max)
    SET @plu = ?
    SET @storeid = ?

    ;WITH itemselectedtable AS
    (
      SELECT
        item.MdInternal,
        item.StoreId,
        CASE WHEN(LEN(item.MdName) > 0) THEN COALESCE(item.MdName, '')
          ELSE COALESCE(dpt.DptName, '')
        END MdName,
        CASE WHEN(LEN(item.MdNameLocal) > 0) THEN COALESCE(item.MdNameLocal, '')
          ELSE COALESCE(dpt.DptNameLocal, '')
        END MdNameLocal,
        item.SalesPrice1,
        item.Dpt,
        item.Line,
        item.Class,
        item.DiscountRate,
        item.DiscountType,
        item.DiscountFlag,
        item.DiscountAmt,
        item.MMCode,
        item.SubInt10,
        item.TaxType,
        ROW_Number() OVER (PARTITION BY item.MdInternal ORDER BY item.StoreId DESC) AS rownumber,
        item.AgeRestrictedFlag,
        item.Md32
      FROM
        RESMaster.dbo.MST_PLU item
      LEFT JOIN
        RESMaster.dbo.MST_DPTINFO dpt
      ON
        dpt.Dpt=item.Dpt AND dpt.StoreId=item.StoreId
      WHERE
        (item.MdInternal LIKE @plu) AND (item.StoreId = @storeid OR item.StoreId = '0')
    )

    SELECT TOP (?) MdInternal, StoreId, MdName, MdNameLocal, SalesPrice1, Dpt, Line, Class, DiscountType, DiscountRate, DiscountFlag, DiscountAmt, TaxType, MMCode, SubInt10, AgeRestrictedFlag, Md32
      FROM  itemselectedtable WHERE rownumber = 1
    ORDER BY MdInternal ASC;
  </entry>

  <entry key="get-items-by-mdname">
    DECLARE @mdname varchar(max), @storeid varchar(max)
    SET @mdname = ?
    SET @storeid = ?

    ;WITH itemselectedtable AS
      (
        SELECT
          MdInternal, item.StoreId, dpt.DptName,
          CASE WHEN(LEN(item.MdName) > 0)
            THEN COALESCE(item.MdName, '')
            ELSE COALESCE(dpt.DptName, '')
          END MdName,
          CASE WHEN(LEN(item.MdNameLocal) > 0)
            THEN COALESCE(item.MdNameLocal, '')
            ELSE COALESCE(dpt.DptNameLocal, '')
          END MdNameLocal,
          SalesPrice1, item.Dpt, Line, Class, item.DiscountType, item.DiscountRate, item.DiscountAmt, DiscountFlag, item.TaxType,
          item.MMCode, item.SubInt10, ROW_Number() OVER (PARTITION BY MdInternal ORDER BY item.StoreId DESC) AS rownumber, item.AgeRestrictedFlag, item.Md32
        FROM
          RESMaster.dbo.MST_PLU item
        LEFT JOIN
          RESMaster.dbo.MST_DPTINFO dpt
        ON
          dpt.Dpt = item.Dpt AND dpt.StoreId = item.StoreId
        WHERE
          ((LOWER(MdName) LIKE '%' + LOWER(@mdname) + '%' OR LOWER(dpt.DptName) LIKE '%' + LOWER(@mdname) + '%') OR
          (LOWER(MdNameLocal) LIKE '%' + LOWER(@mdname) + '%' OR LOWER(dpt.DptNameLocal) LIKE '%' + LOWER(@mdname) + '%')) AND
          (item.StoreId = @storeid OR item.StoreId = '0')
        )

      SELECT
        TOP (?) MdInternal, StoreId, MdName, MdNameLocal, SalesPrice1, Dpt, Line, Class, DiscountType, DiscountRate, DiscountFlag, DiscountAmt, TaxType, MMCode, SubInt10, AgeRestrictedFlag, Md32
      FROM
        itemselectedtable WHERE rownumber = 1
      ORDER BY
        MdName ASC;
  </entry>

  <entry key="get-item-list">
  DECLARE @plu varchar(MAX), @storeid varchar(MAX), @limit int, @name varchar(MAX)
    SET @limit = ?
    SET @storeid = ?
    SET @plu = ?
    SET @name = ?

    SET @limit = (CASE
           WHEN(@limit > -1)
               THEN @limit
               ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_PLU)
           END)

    ;WITH itemselectedtable AS
    (
      SELECT  DISTINCT
        item.MdInternal,
        item.StoreId,
        item.MdName,
        item.MdNameLocal,
        item.SalesPrice1,
        item.Dpt,
        item.Line,
        item.Class,
        item.DiscountRate,
        item.DiscountType,
        item.DiscountFlag,
        item.DiscountAmt,
        item.MMCode,
        item.SubInt10,
        item.TaxType,
        item.TaxRate,
        item.AgeRestrictedFlag,
        item.Md32,
        item.PosMdType,
        item.InheritFlag
      FROM
        RESMaster.dbo.MST_PLU item
      LEFT JOIN
        RESMaster.dbo.MST_DPTINFO dpt
      ON
        dpt.Dpt=item.Dpt
      WHERE
        (((@storeid IS NULL OR LEN(@storeid) = 0) OR (
            item.StoreId = @storeid )) AND
        ((@plu IS NULL OR LEN(@plu) = 0) OR (item.MdInternal LIKE @plu {ESCAPE '\'})) AND     
        ((@name IS NULL OR LEN(@name) = 0) OR 
          (((LOWER(MdName) LIKE  LOWER(@name)  {ESCAPE '\'} ) OR 
          (LOWER(MdNameLocal) LIKE LOWER(@name) {ESCAPE '\'} )))             

    )))

    SELECT TOP (@limit) MdInternal,
    StoreId,
    MdName,
    MdNameLocal,
    SalesPrice1,
    Dpt,
    Line,
    Class,
    DiscountType,
    DiscountRate,
    DiscountFlag,
    DiscountAmt,
    TaxType,
    TaxRate,
    MMCode,
    SubInt10,
    AgeRestrictedFlag,
    Md32,
    PosMdType,
    InheritFlag
      FROM  itemselectedtable
    ORDER BY
      StoreId,
      CASE
        WHEN (len(@name) &gt; 0 AND (@plu IS NULL OR len(@plu) &lt; 0))
          THEN MdName
           END,
      MdInternal
  </entry>

    <entry key="get-items-by-key-name">
        DECLARE 
            @limit int, 
            @storeid varchar(MAX), 
            @plu varchar(MAX), 
            @name varchar(MAX)
        
        SET @limit = ?
        SET @storeid = ?
        SET @plu = ?
        SET @name = ?
        
        SET @limit = (
            CASE 
                WHEN(@limit > -1) 
                THEN @limit 
                ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_PLU) 
            END
        )

        ;WITH itemselectedtable AS (
            SELECT  DISTINCT
                item.MdInternal, 
                item.StoreId, 
                item.MdName, 
                item.MdNameLocal, 
                item.SalesPrice1, 
                item.Dpt, 
                item.Line, 
                item.Class, 
                item.DiscountRate, 
                item.DiscountType, 
                item.DiscountFlag, 
                item.DiscountAmt, 
                item.MMCode, 
                item.SubInt10, 
                item.TaxType, 
                item.TaxRate, 
                item.AgeRestrictedFlag, 
                item.Md32,
                item.PosMdType,
        item.InheritFlag 
            FROM 
                RESMaster.dbo.MST_PLU item 
            LEFT JOIN 
                RESMaster.dbo.MST_DPTINFO dpt 
            ON 
                dpt.Dpt = item.Dpt AND dpt.StoreId = item.StoreId 
            WHERE 
                ((@storeid IS NULL OR LEN(@storeid) = 0) OR (item.StoreId = @storeid OR item.StoreId = 0)) AND 
                ((@plu IS NULL OR LEN(@plu) = 0) OR item.MdInternal LIKE @plu + '%') AND 
                ((@name IS NULL OR LEN(@name) = 0) OR (
                    (LOWER(item.MdName) LIKE '%' + LOWER(@name) + '%') OR 
                    (LOWER(item.MdNameLocal) LIKE '%' + LOWER(@name) + '%') OR 
                    (LOWER(dpt.DptName) LIKE '%' + LOWER(@name) + '%') OR 
                    (LOWER(dpt.DptNameLocal) LIKE '%' + LOWER(@name) + '%')
                ))
        )
        
        SELECT TOP (@limit) 
            MdInternal, 
            StoreId, 
            MdName, 
            MdNameLocal, 
            SalesPrice1, 
            Dpt, 
            Line, 
            Class, 
            DiscountType, 
            DiscountRate, 
            DiscountFlag, 
            DiscountAmt, 
            TaxType, 
            TaxRate, 
            MMCode, 
            SubInt10, 
            AgeRestrictedFlag, 
            Md32,
            PosMdType,
      InheritFlag 
        FROM 
            itemselectedtable 
        ORDER BY 
            StoreId, 
            CASE 
                WHEN (@name IS NOT NULL AND @plu IS NULL) 
                THEN MdName 
            END, 
            MdInternal
    </entry>

  <entry key="get-items-paging">
    SELECT * FROM (
      SELECT top ? * FROM (
        SELECT TOP ? *
                 FROM RESMaster.dbo.MST_PLU
                 WHERE PLU LIKE ? AND CORPID = ? AND STOREID = ?
               ORDER BY PLU asc) as foo
           ORDER BY PLU desc) as bar
       ORDER BY PLU asc;
  </entry>

  <entry key="insert-item">
    DECLARE @storeid varchar(max),
        @plu varchar(max),
        @displayplu varchar(max),
        @dpt varchar(max),
        @discountrate numeric(8,3),
        @salesprice1 numeric(15,0),
        @mdinternal varchar(max),
        @mdname varchar(max),
        @mdnamelocal varchar(max),
        @class varchar(max),
        @discounttype int,
        @line varchar(max),
        @discountflag numeric(1,0),
        @taxrate numeric(8,3),
        @taxtype int,
        @agerestricted numeric(1,0),
        @updappid varchar(max),
        @updopecode varchar(max),
        @couponflag varchar(max),
        @discountamt numeric(10,0),
        @posmdtype numeric(1,0),
        @inheritflag numeric(1,0),
        @subint10 numeric(10,0)

    SET @storeid=?
    SET @plu=?
    SET @displayplu=?
    SET @dpt=?
    SET @discountrate=?
    SET @salesprice1=?
    SET @mdinternal=?
    SET @mdname=?
    SET @mdnamelocal=?
    SET @class=?
    SET @discounttype = ?
    SET @line=?
    SET @discountflag=?
    SET @taxrate=?
    SET @taxtype=?
    SET @agerestricted=?
    SET @updappid=?
    SET @updopecode=?
    SET @couponflag=?
    SET @discountamt=?
    SET @posmdtype=?
    SET @inheritflag=?
    SET @subint10=?



    INSERT INTO RESMaster.dbo.MST_PLU
           (StoreId
           ,Plu
           ,DisplayPlu
           ,Dpt
           ,DiscountRate
           ,SalesPrice1
           ,MdInternal
           ,MdName
           ,MdNameLocal
       ,Class
       ,DiscountType
           ,UpdDate
           ,InsDate
           ,Line
           ,DiscountFlag
           ,TaxRate
           ,TaxType
           ,AgeRestrictedFlag
           ,UpdAppId
           ,UpdOpeCode
           ,Md32
           ,DiscountAmt
           ,PosMdType
           ,InheritFlag
           ,SubInt10)
       VALUES
           (@storeid
      ,@plu
      ,@displayplu
      ,@dpt
      ,@discountrate
      ,@salesprice1
      ,@mdinternal
      ,@mdname
      ,@mdnamelocal
      ,CASE
        WHEN @class IS NULL THEN '0'
        ELSE @class
             END
      ,@discounttype
      ,GETDATE()
      ,GETDATE()
      ,CASE
        WHEN @line IS NULL THEN '0'
        ELSE @line
             END
      ,@discountflag
      ,@taxrate
      ,@taxtype
      ,@agerestricted
      ,@updappid
      ,@updopecode
      ,@couponflag
      ,@discountamt
      ,CASE
        WHEN @posmdtype IS NULL THEN 0
        ELSE @posmdtype
             END
      ,CASE
        WHEN @inheritflag IS NULL THEN 0
        ELSE @inheritflag
             END
      ,CASE
        WHEN @subint10 IS NULL THEN 0
        ELSE @subint10
             END);
    </entry>

    <entry key="update-item">
      DECLARE @dpt varchar(max),
        @discountrate numeric(8,3),
        @salesprice1 numeric(15,0),
        @mdname varchar(max),
        @mdnamelocal varchar(max),
        @plunew varchar(max),
        @discounttype int,
        @pluold varchar(max),
        @storeid varchar(max),
        @agerestricted numeric(1,0),
        @updappid varchar(max),
        @updopecode varchar(max),
        @couponflag varchar(max),
        @discountamt numeric(10,0),
        @discountflag numeric(1,0),
        @taxtype int,
        @oldstoreid varchar(max),
        @line varchar(max),
        @class varchar(max),
        @taxrate numeric(8,3),
        @posmdtype numeric(1,0),
        @inheritflag numeric(1,0),
        @subint10 numeric(10,0)

    SET @dpt=?
    SET @discountrate=?
    SET @salesprice1=?
    SET @mdname=?
    SET @mdnamelocal=?
    SET @plunew=?
    SET @discounttype = ?
    SET @storeid=?
    SET @pluold=?
    SET @agerestricted=?
    SET @updappid=?
    SET @updopecode=?
    SET @couponflag=?
    SET @discountamt=?
    SET @discountflag=?
    SET @taxtype=?
    SET @oldstoreid=?
      SET @line=?
      SET @class=?
      SET @taxrate=?
    SET @posmdtype=?
    SET @inheritflag=?
    SET @subint10=?

      UPDATE
        RESMaster.dbo.MST_PLU
      SET
        StoreId=
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,
        Dpt=
        CASE
        WHEN len(@dpt) > 0 THEN @dpt
        ELSE Dpt
      END,
      DiscountRate= @discountrate,
      SalesPrice1=
        CASE
          WHEN @salesprice1 > 0 THEN @salesprice1
          ELSE SalesPrice1
        END,
        MdName=
          CASE
          WHEN (len(@mdname) > 0 OR @mdname='') THEN @mdname
          ELSE MdName
        END,
        MdNameLocal=
          CASE
          WHEN (len(@mdnamelocal) > 0 OR @mdnamelocal='') THEN @mdnamelocal
          ELSE MdNameLocal
        END,
        Plu=
          CASE
          WHEN len(@plunew) > 0 THEN @plunew
          ELSE Plu
        END,
      MdInternal=
          CASE
          WHEN len(@plunew) > 0 THEN @plunew
          ELSE MdInternal
        END,
      DisplayPlu=
        CASE
          WHEN len(@plunew) > 0 THEN @plunew
          ELSE DisplayPlu
        END,
      DiscountType=@discounttype,
      DiscountAmt=@discountamt,
      DiscountFlag=@discountflag,
      AgeRestrictedFlag=
          CASE
            WHEN (@agerestricted >= 0) THEN @agerestricted
            ELSE AgeRestrictedFlag
          END,
        UpdDate = GETDATE(),
      UpdAppId=@updappid,
      UpdOpeCode=@updopecode,
      Md32=@couponflag,
      TaxType=@taxtype,
      Line =
        CASE
          WHEN @line IS NULL THEN Line
          ELSE @line
        END,
      Class =
          CASE
          WHEN @class IS NULL THEN Class
          ELSE @class
        END,
      TaxRate =
        CASE
          WHEN @taxrate IS NULL THEN TaxRate
          ELSE @taxrate
        END,
      PosMdType =
        CASE
          WHEN @posmdtype IS NULL THEN PosMdType
          ELSE @posmdtype
        END,
      InheritFlag =
        CASE
          WHEN @inheritflag IS NULL THEN InheritFlag
          ELSE @inheritflag
        END,
      SubInt10 =
        CASE
          WHEN @subint10 IS NULL THEN SubInt10
          ELSE @subint10
        END

      OUTPUT INSERTED.MdInternal, INSERTED.MdName, INSERTED.MdNameLocal, INSERTED.SalesPrice1, INSERTED.Dpt,
      INSERTED.DiscountRate, INSERTED.DiscountType, INSERTED.AgeRestrictedFlag, INSERTED.Md32, INSERTED.DiscountAmt,
      INSERTED.DiscountFlag, INSERTED.TaxType, INSERTED.StoreId,
      INSERTED.Line, INSERTED.Class, INSERTED.TaxRate, INSERTED.PosMdType, INSERTED.InheritFlag, INSERTED.SubInt10

      WHERE
         StoreId = @oldstoreid AND MdInternal = @pluold
    </entry>

<!-- *************************  ENTRY KEY FOR POSLOG JOURNALIZATION     *************************  -->

  <entry key="save-poslog">
    INSERT INTO TXL_SALES_JOURNAL
           (RetailStoreId
           ,WorkstationId
           ,SequenceNumber
           ,BusinessDayDate
           ,SystemDateTime
           ,Tx
           ,TxType
           ,Status
           ,Guid
           ,ServerId
           ,CompanyId
           ,TrainingFlag)
       VALUES
         (?,?,?,?,?,?,?,?,?,?,?,?);
  </entry>
  <entry key="update-software-version">
    DECLARE
      @companyId varchar(12)
     ,@storeId varchar(6)
     ,@terminalId varchar(6)
     ,@container varchar(256)
     ,@mobileShop varchar(50)
     ,@resTransaction varchar(50)
     ,@resTabletUi varchar(50)
     ,@resUiConfig varchar(50)     

  set @companyId=?
    set @storeId=?
    set @terminalId=?
    set @container=?
    set @mobileShop=?
    set @resTransaction=?
    set @resTabletUi=?
    set @resUiConfig=?    

    IF EXISTS (select container from txu_software_version
               where storeId=@storeId and terminalId=@terminalId and companyId=@companyId)
      UPDATE txu_software_version
       SET
       companyId = @companyId
       ,storeId = @storeId
       ,terminalId = @terminalId
       ,container = @container
       ,mobileShop = @mobileShop
       ,resTransaction = @resTransaction
       ,resTabletUi = @resTabletUi
       ,resUiConfig = @resUiConfig
      WHERE storeId=@storeId and terminalId=@terminalId and companyId=@companyId
    ELSE
      INSERT INTO txu_software_version (
        companyId
       ,storeId
       ,terminalId
       ,container
       ,mobileShop
       ,resTransaction
       ,resTabletUi
       ,resUiConfig
      ) VALUES (
        @companyId
       ,@storeId
       ,@terminalId
       ,@container
       ,@mobileShop
       ,@resTransaction
       ,@resTabletUi
       ,@resUiConfig
      );
  </entry>
  <entry key="get-poslog-xml-txtype">
        SELECT
          TxType
        FROM
          TXL_SALES_JOURNAL
        WHERE
          RetailStoreId = ? AND
          WorkstationId = ? AND
          SequenceNumber = ? AND
          BusinessDayDate = ?;
  </entry>
  <entry key="check-poslog-duplicate">
        SELECT
          COUNT(*) AS [rowcount]
        FROM
          TXL_SALES_JOURNAL
        WHERE
          CompanyId = ? AND
          RetailStoreId = ? AND
          WorkstationId = ? AND
          SequenceNumber = ? AND
          BusinessDayDate = ? AND
          TrainingFlag = ?;
  </entry>
  <entry key="get-poslog-xml-byType">
        SELECT
          tx,
          txtype
    FROM
      TXL_POSLOG
    WHERE
      termid = ? AND txid = ? AND (txtype = ? OR txtype = 'NR');
  </entry>
  <entry key="get-poslog-xml">
        SELECT
          tx,
          txtype
    FROM
      TXL_POSLOG
    WHERE
      termid = ? AND txid = ?;
  </entry>
  <entry key="update-poslog-txtype">
        UPDATE
      TXL_SALES_JOURNAL
    SET
      TxType = ?
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ?;
  </entry>

  <entry key="get-poslog-xml-by-id">
    SELECT tx FROM TXL_POSLOG
        WHERE
          corpid = ? AND
      storeid = ? AND
      termid = ? AND
      summarydateid = ? AND
      txid = ?;
  </entry>

  <entry key="get-poslog-xml-by-terminalid-storeid-txid">
    SELECT
      TOP 1 Tx
    FROM
      TXL_SALES_JOURNAL
        WHERE
          RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      TrainingFlag = ?
    ORDER BY JournalLine DESC;
  </entry>
  <entry key="get-poslog-xml-by-companyid-terminalid-storeid-txid">
    SELECT
      TOP 1 Tx
    FROM
      TXL_SALES_JOURNAL
      WHERE        
        CompanyId = ? AND
        RetailStoreId = ? AND
        WorkstationId = ? AND
        BusinessDayDate = ? AND
        SequenceNumber = ? AND
        TrainingFlag = ? AND
        TxType = COALESCE(?, TxType)
    ORDER BY JournalLine DESC;
  </entry>
  <entry key="get-poslog-xml-by-terminalid-storeid-txid-summarydateid">
    SELECT TOP 1 tx FROM TXL_SALES_JOURNAL
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TrainingFlag = ?
    ORDER BY JournalLine DESC;
  </entry>

  <entry key="get-last-transaction-poslog">
    SELECT
      Tx
    FROM
      TXL_SALES_JOURNAL
    WHERE
      JournalLine = (
        SELECT
          MAX(JournalLine)
        FROM
          TXL_SALES_JOURNAL
        WHERE
          RetailStoreId = ? AND
          WorkstationId = ? AND
          TxType = 'Sale')
  </entry>

  <entry key="get-bussiness-date">
    SELECT DISTINCT TOP 1
      StoreId, TodayDate 
    FROM 
      RESMaster.dbo.MST_BIZDAY
    WHERE
      CompanyId = ? AND StoreId in (?, '0')
    ORDER BY
      StoreId DESC
  </entry>
  <entry key="select-txs-by-txid">
    SELECT
      TOP(?) Tx
    FROM
      TXL_SALES_JOURNAL
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber LIKE ? + '%' AND
      (LOWER(TxType) = 'sale' OR LOWER(TxType) = 'void')
    ORDER BY
      SequenceNumber ASC
  </entry>
  <entry key="select-txs-by-summarydate">
    SELECT
      TOP(?) Tx
    FROM
      TXL_SALES_JOURNAL
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      BusinessDayDate = ? AND
      (LOWER(TxType) = 'sale' OR LOWER(TxType) = 'void')
    ORDER BY
      SequenceNumber ASC
  </entry>
  <entry key="select-transactions">
    DECLARE
      @limit INT,
      @limitFrom INT,
      @storeid VARCHAR(max),
      @terminalid VARCHAR(max),
      @itemname VARCHAR(max),
      @itemid VARCHAR(max),
      @transactionNumberFrom NUMERIC(5,0),
      @transactionNumberTo NUMERIC(5,0),
      @businessDate DATE,
      @fromdate DATETIME2,
      @todate DATETIME2,
      @type VARCHAR(max),
      @subcode4 varchar(max),
      @journalline BIGINT,
      @companyid VARCHAR(12),
      @trainingflag tinyint

    SET @limit = ?
    SET @storeid = ?
    SET @terminalid = ?
    SET @itemname = ?
    SET @itemid = ?
    SET @transactionNumberFrom = ?
    SET @transactionNumberTo = ?
    SET @businessDate = ?
    SET @fromdate = ?
    SET @todate = ?
    SET @type = ?
    SET @subcode4 = ?
  SET @limitFrom = ?
    set @journalline = ?
    SET @companyid = ?
    SET @trainingflag = ?
    ;with searcedList as
    (select journal.Tx, journal.TxType, journal.journalLine,
            row_number() over (order by 
                journal.JournalLine DESC,
                journal.RetailStoreId ASC,
                journal.WorkstationId ASC,
                journal.SequenceNumber ASC,
                journal.SystemDateTime ASC
            ) as row_num, journal.companyId, journal.TrainingFlag
        FROM 
            TXL_SALES_JOURNAL journal LEFT JOIN
            TXL_SALES_LEDGER ledger ON
            journal.BusinessDayDate = ledger.BusinessDayDate AND
            journal.RetailStoreId = ledger.RetailStoreId AND
            journal.WorkstationId = ledger.WorkstationId AND
            journal.SequenceNumber = ledger.SequenceNumber AND
            journal.CompanyId = ledger.CompanyId
        WHERE
          (@journalline is null or @journalline &gt;= journal.journalLine)
          AND
          (@itemname IS NULL OR (
            LOWER(ledger.MdName) LIKE '%' + LOWER(@itemname) + '%' AND
            (ledger.Account = 1 OR ledger.Account = 8 OR ledger.Account = 13 OR ledger.Account = 11)
          )) AND
          (@subcode4 IS NULL OR ledger.SubCode4 = @subcode4) AND
          (@itemid IS NULL OR (
            ledger.ItemId LIKE @itemid + '%' AND
            (ledger.Account = 1 OR ledger.Account = 8 
             OR ledger.Account = 13 OR ledger.Account = 11)
          )) AND
          (@storeid IS NULL OR journal.RetailStoreId = @storeid) AND
          (@terminalid IS NULL OR journal.WorkstationId = @terminalid) AND
          (@transactionNumberFrom IS NULL OR journal.SequenceNumber &gt;= @transactionNumberFrom) AND
          (@transactionNumberTo IS NULL OR journal.SequenceNumber &lt;= @transactionNumberTo) AND
          (@businessDate IS NULL OR journal.BusinessDayDate = @businessDate) AND
          (@fromdate IS NULL OR SystemDateTime &gt;= @fromdate) AND
          (@todate IS NULL OR SystemDateTime &lt;= @todate) AND
          (@type IS NULL OR LOWER(journal.TxType) = LOWER(@type) AND
          (@companyid IS NULL OR journal.CompanyId = @companyid) AND
          (@trainingflag IS NULL OR journal.TrainingFlag = @trainingflag))
        GROUP BY
          journal.BusinessDayDate,
          journal.RetailStoreId,
          journal.WorkstationId,
          journal.SequenceNumber,
          journal.Tx,
          journal.SystemDateTime,
          journal.TxType,
          journal.JournalLine,
          journal.CompanyId,
          journal.TrainingFlag
    )
    SELECT
      top (@limit) *
    FROM searcedList
    WHERE row_num >= @limitfrom AND TrainingFlag = @trainingflag AND CompanyId = @companyid
    order by row_num asc
  </entry>
  <entry key="save-void-details">
    INSERT INTO TXL_SALES_VOIDED
      (RetailStoreId,
      WorkstationId,
      SequenceNumber,
      BusinessDayDate,
      TxType,
      CompanyId,
      TrainingFlag)
    VALUES
      (?,?,?,?,?,?,?)
  </entry>
  <entry key="save-TxuTotalGuestTillDay-details">
    DECLARE
      @storeId varchar(MAX),
      @tillId varchar(MAX),
      @BusinessDayDate DATE,
      @SalesGuestCnt NUMERIC(10, 0),
      @ReturnGuestCnt NUMERIC(10, 0),
      @VoidGuestCnt NUMERIC(10, 0)

    SET @storeId=?
    SET @tillId=?
    SET @BusinessDayDate=?
    SET @SalesGuestCnt=?
    SET @ReturnGuestCnt=?
    SET @VoidGuestCnt=?

    IF EXISTS (
                 SELECT RetailStoreId
                 FROM   TXU_TOTAL_GUESTTILLDAY
                 WHERE  RetailStoreId=@storeId
                 AND    TillID=@tillId
                 AND    BusinessDayDate=@BusinessDayDate
              )
      UPDATE TXU_TOTAL_GUESTTILLDAY
      SET    SalesGuestCnt = SalesGuestCnt + @SalesGuestCnt,
             ReturnGuestCnt = ReturnGuestCnt + @ReturnGuestCnt,
             VoidGuestCnt = VoidGuestCnt + @VoidGuestCnt
      WHERE  RetailStoreId=@storeId
      AND    TillID=@tillId
      AND    BusinessDayDate=@BusinessDayDate
    ELSE
      INSERT INTO TXU_TOTAL_GUESTTILLDAY (
        RetailStoreId,
        TillID,
        BusinessDayDate,
        SalesGuestCnt,
        ReturnGuestCnt,
        VoidGuestCnt
      ) VALUES (
        @storeId,
        @tillId,
        @BusinessDayDate,
        @SalesGuestCnt,
        @ReturnGuestCnt,
        @VoidGuestCnt
      );
  </entry>
  <entry key="get-void-details">
    SELECT 
      COUNT(*) AS [rowcount] 
    FROM 
      TXL_SALES_VOIDED
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TxType LIKE '%' + ? + '%' AND
      CompanyId = ? AND
      TrainingFlag = ?;
  </entry>
  <entry key="save-summary-receipt-details">
    INSERT INTO TXL_SUMMARYRECEIPT_HISTORY
      (CompanyId,
       RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       TrainingFlag,
       IssuedRetailStoreId,
       IssuedWorkstationId,
       IssuedSequenceNumber,
       IssuedBusinessDayDate,
       InsDateTime
       )
    VALUES
      (?,?,?,?,?,?,?,?,?,?,?);
  </entry>
  <entry key="save-receipt-reprint-details">
    INSERT INTO TXL_RECEIPTREPRINT_HISTORY
      (RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       IssuedRetailStoreId,
       IssuedWorkstationId,
       IssuedSequenceNumber,
       IssuedBusinessDayDate,
       CompanyId,
       TrainingFlag)
    VALUES
      (?,?,?,?,?,?,?,?,?,?);
  </entry>
  <entry key="get-summary-receipt-count">
    SELECT
      COUNT(*) as count
    FROM
      TXL_SUMMARYRECEIPT_HISTORY
    WHERE
      CompanyId = ? AND
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ?;
  </entry>

<!-- *************************  ENTRY KEY FOR CUSTOMER INFORMATION      ************************* -->
  <entry key="get-customer-partial">
      SELECT TOP 1 * FROM RESMaster.dbo.MST_CUSTINFO
          WHERE CustomerId LIKE ?;
  </entry>

  <entry key="get-customer-complete">
      SELECT * FROM RESMaster.dbo.MST_CUSTINFO
          WHERE CustomerId = ?;
  </entry>

<!-- *************************  ENTRY KEY FOR CREDENTIAL SERVICE      ************************* -->
  <!--  CREDENTIAL SPART LOG IN-->
  <entry key="get-operator-from-spart">
    SELECT
      ope.EmpCode, ope.Password, ope.OpeType, ope.OpeName, ope.SubChar1, ope.SubChar2, ope.SecLevel1, ope.SecLevel2
    FROM
      RESMaster.dbo.MST_USER_CREDENTIALS users
    LEFT JOIN
      RESMaster.dbo.MST_EMPINFO ope
    ON
      ope.Password = users.PassCode
    WHERE
      users.OperatorNo = ? AND ope.EmpCode = users.OperatorNo;
  </entry>

    <entry key="get-status-of-operator">
        SELECT    users.OperatorName, ope.OpeKanaName, ope.SecLevel2, ope.OpeType
        FROM      RESMaster.dbo.MST_EMPINFO ope,
                  RESMaster.dbo.MST_USER_CREDENTIALS users
        WHERE     ope.EmpCode = users.OperatorNo AND
                  ope.CompanyId = LTRIM(RTRIM(?)) AND
                  ope.EmpCode = LTRIM(RTRIM(?))
    </entry>

    <entry key="get-systemnames">
      DECLARE
        @companyId varchar(max),
        @storeId varchar(max),
        @nameCategory varchar(max)
        
      SET @companyId = ?
      SET @storeId = ?
      SET @nameCategory = ?
      
      IF NOT EXISTS (
        SELECT
          CompanyId,
          StoreId,
          NameCategory,
          NameId
        FROM
          RESMaster.dbo.MST_NAME_SYSTEM
        WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          NameCategory = @nameCategory AND
          DeleteFlag = 0.0
      )
        SET @storeId = '0'
      
      SELECT
        CompanyId,
        StoreId,
        NameCategory,
        NameId,
        NameText,
        NameIdName
      FROM
        RESMaster.dbo.MST_NAME_SYSTEM
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        NameCategory = @nameCategory AND
        DeleteFlag = 0.0
      ORDER BY DisplayOrder
    </entry>

 <entry key="get-all-salesPerson">
       SELECT
             OpeKanaName,
             EmpCode,
             OpeName
       FROM RESMaster.dbo.MST_EMPINFO
       WHERE OpeKanaName LIKE  ? + '%' COLLATE Japanese_CI_AS
       ORDER BY OpeKanaName;
</entry>

<entry key="get-subtotalDiscount">
       SELECT
           DiscountReason,
           DiscountReasonName
       FROM RESMaster.dbo.MST_PRICE_PROMOTION
       ORDER BY PromotionId;
</entry>

<entry key="select-divHourlyReport">
 DECLARE @BusinessDayDate varchar(16),@storeid varchar(6),@Dpt varchar(10)
    SET @BusinessDayDate = ?
    SET @storeid =  LTRIM(RTRIM(?))
    SET @Dpt =  LTRIM(RTRIM(?))
    SELECT
            dpts.Dpt,
            COALESCE(dptinfo.DptName, '') DptName,
            dpts.TimeZoneCode,
           SUM( guestCNT.SalesGuestCnt) SalesGuestCnt,
           SUM( dpts.SalesItemCnt) SalesItemCnt,
           SUM( dpts.SalesSalesAmt) SalesSalesAmt
    FROM
    ((SELECT    RetailStoreId,
                BusinessDayDate,
                Dpt,
                TimeZoneCode,
                (SUM(SalesGuestCnt) - SUM(VoidGuestCnt) - SUM(ReturnGuestCnt)) SalesGuestCnt
    FROM        TXU_TOTAL_GUESTDPTDAY AS guest

    GROUP BY    RetailStoreId,
                BusinessDayDate,
                Dpt,
                TimeZoneCode) guestCNT
    INNER JOIN
                TXU_TOTAL_DPTSUMDAY AS dpts
    ON
           guestCNT.RetailStoreId = dpts.RetailStoreId
    AND    guestCNT.BusinessDayDate = dpts.BusinessDayDate
    AND    guestCNT.Dpt = dpts.Dpt
    AND    guestCNT.TimeZoneCode = dpts.TimeZoneCode)

    LEFT JOIN  RESMaster.dbo.MST_DPTINFO dptinfo
    ON
           dptinfo.StoreId = CASE WHEN EXISTS ( SELECT storeId
                                                FROM   RESMaster.dbo.MST_DPTINFO
                                                WHERE  Dpt = dpts.Dpt
                                                       AND StoreId = dpts.RetailStoreId ) THEN dpts.RetailStoreId
                                   ELSE '0'
                             END 
    AND    dptinfo.Dpt = dpts.Dpt
    INNER JOIN
                  (SELECT  StoreId
                   FROM    RESMaster.dbo.MST_STOREINFO storeinfo
                   WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1' ELSE CASE WHEN  @storeid = '0002' THEN '3' ELSE COALESCE(storeinfo.StoreType, -1) END END) storeinfo
    ON    storeinfo.StoreId = dpts.RetailStoreId
    WHERE
         dpts.BusinessDayDate= @BusinessDayDate
         AND dpts.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid ='0002' THEN dpts.RetailStoreId ELSE @storeid  END
         AND dpts.Dpt = CASE WHEN @Dpt &lt;&gt; '' THEN @Dpt ELSE dpts.Dpt END

    GROUP BY
            dpts.Dpt,
            DptName,
            dpts.TimeZoneCode

    ORDER BY
            dpts.Dpt,
            dpts.TimeZoneCode
</entry>

<entry key="select-salesTargetMarketReport">
    DECLARE @BusinessDayDate varchar(16),@storeid varchar(6)
    SET @BusinessDayDate = ?
    SET @storeid = LTRIM(RTRIM(?))

    SELECT   iguest.GuestZoneName,
             SUM(iguest.SalesGuestCnt) AS SalesGuestCnt,
             SUM(iguest.SalesItemCnt) AS SalesItemCnt,
             SUM(iguest.SalesSalesAmt) AS SalesSalesAmt,
             iguest.GuestCode
    FROM     (SELECT      guest.GuestZoneName,
                          (tsud.SalesGuestCnt - tsud.VoidGuestCnt - tsud.ReturnGuestCnt) AS SalesGuestCnt,
                          tsud.SalesItemCnt,
                          tsud.SalesSalesAmt,
                          stoinfo.StoreType,
                          guest.GuestCode
               FROM       TXU_TOTAL_TIERSUMDAY tsud
               INNER JOIN
                          RESMaster.dbo.PRM_GUEST as guest
               ON         guest.GuestCode = tsud.Tier
               INNER JOIN RESMaster.dbo.MST_STOREINFO stoinfo
               ON         stoinfo.StoreId = tsud.RetailStoreId
               WHERE      tsud.BusinessDayDate = @BusinessDayDate
               AND        tsud.RetailStoreId = CASE WHEN LTRIM(RTRIM(@storeid)) &lt;&gt;'0000' AND  LTRIM(RTRIM(@storeid)) &lt;&gt; '0001'
                                               AND  LTRIM(RTRIM(@storeid)) &lt;&gt;'0002' THEN LTRIM(RTRIM(@storeid)) ELSE tsud.RetailStoreId END) iguest
    WHERE    COALESCE(iguest.StoreType, -1) = CASE WHEN LTRIM(RTRIM(@storeid)) = '0001' THEN LTRIM(RTRIM('1'))
                                          WHEN LTRIM(RTRIM(@storeid)) = '0002' THEN LTRIM(RTRIM('3'))
                                        ELSE COALESCE(iguest.StoreType, -1) END

    GROUP BY iguest.GuestZoneName,iguest.GuestCode
    ORDER BY iguest.GuestCode
</entry>

  <entry key="update-sign-on-at-spart">
      UPDATE
        RESMaster.dbo.MST_EMPINFO
      SET
        SubChar2 = replace(replace(replace(convert(varchar(19), getdate(), 126),'-',''),'T',''),':','')
        OUTPUT
          INSERTED.SubChar2
      WHERE EmpCode = ?
  </entry>

  <entry key="insert-update-credential-from-spart">
        DECLARE
            @empcode varchar(MAX),
            @password varchar(MAX),
            @opename varchar(MAX)

        SET @empcode =?
        SET @password=?
        SET @opename=?

        IF EXISTS (SELECT OperatorNo FROM RESMaster.dbo.MST_USER_CREDENTIALS
        WHERE OperatorNo = @empcode)

            UPDATE
                RESMaster.dbo.MST_USER_CREDENTIALS
            SET
                PassCode = @password,
                OperatorName = @opename,
                UpdDate = GETDATE()

            WHERE
                OperatorNo = @empcode
        ELSE
            INSERT INTO RESMaster.dbo.MST_USER_CREDENTIALS
           (
                OperatorNo,
                PassCode,
                OperatorName,
                Role,
                OperatorType,
                Upddate,
                Status
            )
         VALUES
           (@empcode, @password, @opename, 'NCR', 1, GETDATE(),'Inactive');
    </entry>

  <entry key="insert-update-operator-from-spart">
    DECLARE
      @empcode varchar(MAX),
       @opecode varchar(MAX),
       @password varchar(MAX),
       @opetype varchar(MAX),
       @opename varchar(MAX),
       @opekananame varchar(MAX),
       @zipcode varchar(MAX),
       @address varchar(MAX),
       @telno varchar(MAX),
       @faxno varchar(MAX),
       @seclevel1 smallint,
       @seclevel2 smallint,
       @subchar1 varchar(MAX),
       @subchar2 varchar(MAX),
       @subchar3 varchar(MAX),
       @insdate smalldatetime,
       @upddate smalldatetime,
       @updappid varchar(MAX),
       @updopecode varchar(MAX)

      SET @empcode =?
    SET @opecode=?
    SET @password=?
    SET @opetype=?
    SET @opename=?
    SET @opekananame=?
    SET @zipcode=?
    SET @address=?
    SET @telno=?
    SET @faxno=?
    SET @seclevel1=?
    SET @seclevel2=?
    SET @subchar1=?
    SET @subchar2=?
    SET @subchar3=?
    SET @insdate=?
    SET @upddate=?
    SET @updappid=?
    SET @updopecode=?

      IF EXISTS (SELECT empcode FROM OPE_MAST_TBL
      WHERE EmpCode = @empcode)
        UPDATE
          OPE_MAST_TBL
        SET
          OpeCode = @opecode,
          PassCode = @password,
          OpeType = @opetype,
          OpeName = @opename,
          OpeKanaName = @opekananame,
          ZipCode = @zipcode,
          Address = @address,
          TelNo = @telno,
          FaxNo = @faxno,
          SecLevel1 = @seclevel1,
          SecLevel2 = @seclevel2,
          SubChar1 = @subchar1,
          SubChar2 = @subchar2,
          SubChar3 = @subchar3,
          InsDate = @insdate,
          UpdDate = @upddate,
          UpdAppId = @updappid,
          UpdOpeCode = @updopecode
      WHERE
        EmpCode = @empcode
    ELSE
      INSERT INTO OPE_MAST_TBL
           (
               EmpCode,
        OpeCode,
        Password,
        OpeType,
        OpeName,
        OpeKanaName,
        ZipCode,
        Address,
        Telno,
        Faxno,
        SecLevel1,
        SecLevel2,
        SubChar1,
        SubChar2,
        SubChar3,
        InsDate,
        UpdDate,
        UpdAppId,
        UpdOpeCode)
       VALUES
         (@empcode,@opecode,@password,@opetype,@opename,@opekananame,@zipcode,@address,@telno,
         @faxno,@seclevel1,@seclevel2,@subchar1,@subchar2,@subchar3,@insdate,@upddate,@updappid,@updopecode);
  </entry>

  <entry key="get-operator-by-operatorno">
    SELECT
        PassCode, Role, OperatorName, OperatorType, TerminalId, muc.StoreId, Status, me.OpeKanaName, me.OpeName
      FROM
        RESMaster.dbo.MST_USER_CREDENTIALS muc
    LEFT JOIN RESMaster.dbo.MST_EMPINFO me on me.CompanyId = muc.CompanyId
        AND me.EmpCode = muc.OperatorNo
    WHERE
      muc.OperatorNo = ? and muc.CompanyId = ?;
  </entry>

  <entry key="get-operator-passcode">
    SELECT
        PassCode
      FROM
        RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo = ?;
  </entry>

  <entry key="get-operator-status">
    SELECT
        TerminalId,
        OperatorName,
        Status
      FROM
        RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo = ?;
  </entry>

  <entry key="update-operator-terminalid">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      TerminalId = ?,
      UpdDate = GETDATE(),
      Status='Active'
    WHERE
      OperatorNo = ? AND PassCode = ? AND (Status='Active' OR Status='Inactive');
  </entry>

  <entry key="update-operator-terminalid-guest">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      TerminalId = ?,
      UpdDate = GETDATE(),
      Status='Active'
    OUTPUT
      INSERTED.OperatorType
    WHERE
      OperatorNo = ? AND (Status='Active' OR Status='Inactive');
  </entry>

  <entry key="credential-first-log-in">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      PassCode = ?,
      TerminalId = ?,
      UpdDate = GETDATE(),
      Status = 'Active'
    WHERE
      OperatorNo = ? and (Status='Active' OR Status='Inactive');
  </entry>

  <entry key="create-operator">
    INSERT INTO RESMaster.dbo.MST_USER_CREDENTIALS
           (OperatorNo,
           PassCode,
           Role,
           UpdDate,
           OperatorType,
           Status,
           UpdAppId,
           UpdOpeCode)
       VALUES
         (?,?,?,GETDATE(),0,'Inactive',?,?);
  </entry>

  <entry key="sign-off-operator">
    UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      TerminalId = null,
      UpdDate = GETDATE(),
      Status = ?
    WHERE
      OperatorNo = ?
  </entry>
  <entry key="select-operators-byStoreId">
    SELECT  OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId = ? AND (Status='Active' OR Status='Inactive')
    ORDER BY OperatorNo ASC
  </entry>
  <entry key="select-all-operators">
    DECLARE
      @storeid varchar(max),
      @operatorno varchar(max),
      @operatorname varchar(max),
      @limit int

    SET @storeid=?
    SET @operatorno=?
    SET @operatorname=?
    SET @limit=?
    SET @limit = (CASE
           WHEN(@limit > -1)
             THEN @limit
             ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_USER_CREDENTIALS)
           END)

    SELECT TOP(@limit)
      CompanyId,
        OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId,
            StoreId,
            Status,
            PassCode
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      (Status='Active' OR Status='Inactive')
      AND (@storeid IS NULL OR len(@storeid) = 0 OR StoreId = @storeid)
      AND (@operatorno IS NULL OR len(@operatorno) = 0 OR (OperatorNo like @operatorno {ESCAPE '\'} ))
      AND (@operatorname IS NULL OR len(@operatorname) = 0 OR (LOWER(OperatorName) like LOWER(@operatorname)  {ESCAPE '\'} ) )
    ORDER BY
      CASE
        WHEN len(@operatorname) > 0 then OperatorName
        ELSE OperatorNo
      END
  </entry>
  <entry key="select-operators-byStoreId-operatorNo-prefix">
    SELECT  OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId = ? AND OperatorNo LIKE ? AND (Status='Active' OR Status='Inactive')
    ORDER BY OperatorNo ASC
  </entry>
  <entry key="select-operators-byStoreId-operatorName-partial">
    SELECT  OperatorNo,
            COALESCE(OperatorName, '') as OperatorName,
            OperatorType,
            COALESCE(TerminalId, '') as TerminalId
    FROM RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId = ? AND UPPER(OperatorName) LIKE UPPER(?) AND (Status='Active' OR Status='Inactive')
    ORDER BY OperatorName ASC
  </entry>
  <entry key="reset-operator-passcode">
    UPDATE RESMaster.dbo.MST_USER_CREDENTIALS
       SET
          PassCode = ''
     WHERE
       StoreId = ? AND
       OperatorNo = ? AND
       (Status='Active' OR Status='Inactive')
  </entry>

  <entry key="delete-user-group">
    DELETE FROM
      RESMaster.dbo.PRM_GROUP_FUNCTION
    WHERE
      GroupCode = ?
  </entry>


  <entry key="create-update-pos-opecode">
        DECLARE
          @companyid varchar(max),
          @storeid varchar(max),
          @terminalno varchar(max),
          @opecode varchar(max)

        SET @companyid=?
        SET @storeid=?
        SET @terminalno=?
        SET @opecode=?

        IF EXISTS (SELECT * FROM TXU_POS_CTRL WHERE CompanyId=@companyid AND StoreId=@storeid AND TerminalNo=@terminalno)
            UPDATE
                TXU_POS_CTRL
            SET
                OpeCode=@opecode
            WHERE
              CompanyId=@companyid AND
                StoreId=@storeid AND
                TerminalNo=@terminalno
        ELSE
            INSERT INTO TXU_POS_CTRL
                (
                  CompanyId,
                    StoreId,
                    TerminalNo,
                    OpeCode
                )
            VALUES
                (@companyid,@storeid,@terminalno,@opecode)
  </entry>

  <entry key="create-update-pos-sod-state">
        DECLARE
          @companyid varchar(max),
          @storeid varchar(max),
          @terminalno varchar(max),
          @openclosestat tinyint,
          @sodtime datetime,
          @sodtranno char(4),
          @eodtime datetime,
          @eodtranno char(4)

        SET @companyid=?
        SET @storeid=?
        SET @terminalno=?
        SET @openclosestat=?
        SET @sodtime=?
        SET @sodtranno=?
        SET @eodtime=null
        SET @eodtranno=null

        IF EXISTS (SELECT * FROM TXU_POS_CTRL WHERE CompanyId=@companyid AND StoreId=@storeid AND TerminalNo=@terminalno)
          UPDATE
            TXU_POS_CTRL
          SET
            OpenCloseStat = @openclosestat,
            SodTime = @sodtime,
            SodTranNo = @sodtranno,
            EodTime = @eodtime,
            EodTranNo = @eodtranno
          WHERE
            CompanyId=@companyid AND
            StoreId=@storeid AND
            TerminalNo=@terminalno
        ELSE
          INSERT INTO TXU_POS_CTRL (
            CompanyId,
            StoreId,
            TerminalNo,
            OpenCloseStat,
            SodTime,
            SodTranNo,
            EodTime,
            EodTranNo )
          VALUES (
            @companyid,
            @storeid,
            @terminalno,
            @openclosestat,
            @sodtime,
            @sodtranno,
            @eodtime,
            @eodtranno )
  </entry>

    <entry key="create-update-pos-eod-state">
        DECLARE
        @companyid varchar(max),
        @storeid varchar(max),
        @terminalno varchar(max),
        @openclosestat tinyint,
        @eodtime datetime,
        @eodtranno char(4)

        SET @companyid=?
        SET @storeid=?
        SET @terminalno=?
        SET @openclosestat=?
        SET @eodtime=?
        SET @eodtranno=?

        IF EXISTS (SELECT * FROM TXU_POS_CTRL WHERE CompanyId=@companyid AND StoreId=@storeid AND TerminalNo=@terminalno)
            UPDATE
                TXU_POS_CTRL
            SET
                OpenCloseStat = @openclosestat,
                EodTime = @eodtime,
                EodTranNo = @eodtranno
            WHERE
                CompanyId=@companyid AND
                StoreId=@storeid AND
                TerminalNo=@terminalno
        ELSE
            INSERT INTO TXU_POS_CTRL (
                CompanyId,
                StoreId,
                TerminalNo,
                OpenCloseStat,
                EodTime,
                EodTranNo )
            VALUES (
                @companyid,
                @storeid,
                @terminalno,
                @openclosestat,
                @eodtime,
                @eodtranno )
    </entry>



  <!-- *************************  ENTRY KEY FOR DEVICE AUTHENTICATION   ************************* -->


  <!-- *************************  ENTRY KEY FOR SYSTEM CONFIGURATION   ************************* -->
  <entry key="get-system-parameters">
      SELECT
        Category,
        KeyId,
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG;
  </entry>

  <entry key="get-system-parameter-value">
      SELECT
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      WHERE
        Category = ? AND KeyId = ?;
  </entry>

  <entry key="get-system-parameter-information">
      SELECT
        KeyId,
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      WHERE
        Category = ?;
  </entry>

  <entry key="set-system-parameter-validate-value">
      UPDATE
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      SET
        Value = ?
      WHERE
        Category = ? AND KeyId = ? AND Value = ?;
  </entry>

  <entry key="get-system-parameter-validate-value">
      SELECT
        Value
      FROM
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      WHERE
        Category = ? AND KeyId = ? AND Value = ?;
  </entry>

  <entry key="set-system-parameter-value">
      UPDATE
        RESMaster.dbo.PRM_SYSTEM_CONFIG
      SET
        Value = ?
      WHERE
        Category = ? AND KeyId = ?;
  </entry>

    <entry key="set-system-parameter-value-by-key">
            UPDATE
                RESMaster.dbo.PRM_SYSTEM_CONFIG
            SET
                Value = ?
            WHERE
                KeyId = ?;
    </entry>

  <entry key="add-system-parameter-value">
  INSERT INTO RESMaster.dbo.PRM_SYSTEM_CONFIG
           (Value
           ,Category
           ,KeyId
           ,Description)
     VALUES
           (? ,? ,?, ?);
  </entry>
  <!-- *************************  ENTRY KEY FOR SYSTEM CONSOLIDATION   ************************* -->
  <entry key="save-lineItem">
    INSERT INTO TXL_JOURNAL
           (  corpid
        ,storeid
        ,termid
        ,tranno
        ,tranlineno
        ,summarydateid
        ,operatorcode
        ,plu
        ,description
        ,accountcode
        ,itemcnt
        ,actsalesamount
        ,returnflag
        ,voidflag
        ,cancelflag
        ,debtor
        ,creditor
        ,customerid
        ,originaltranno
        ,upddate)
       VALUES
         (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,GETDATE());
  </entry>
  <entry key="get-journallogs-bytranno">
        SELECT
           corpid
        ,storeid
        ,termid
        ,tranno
        ,tranlineno
        ,summarydateid
        ,operatorcode
        ,plu
        ,description
        ,accountcode
        ,itemcnt
        ,actsalesamount
        ,returnflag
        ,voidflag
        ,cancelflag
        ,debtor
        ,creditor
        ,customerid
        ,originaltranno
        ,upddate
    FROM
      TXL_JOURNAL
    WHERE
      tranno = ?
    ORDER BY
      tranlineno;
  </entry>

  <entry key="update-poslog-status">
        UPDATE
      TXL_POSLOG
    SET
      status = ?
    WHERE
      corpid = ? AND
      storeid = ? AND
      termid = ? AND
      txid = ? AND
      summarydateid = ?;
  </entry>

  <entry key="get-poslog-not-consolidated">
    SELECT
      TOP 100 *
    FROM
      TXL_POSLOG
    WHERE
      seqnum > ? AND
        status = 0
    ORDER BY
       seqnum
    ASC;
  </entry>

  <!-- *************************  ENTRY KEY FOR SUMMARRY TABLE ************************* -->
  <entry key="select-total-account-day">
    SELECT
      *
    FROM
      TXU_TOTAL_ACNTDAY
    WHERE
      corpid = ?
      AND storeid = ?
      AND terminalid = ?
      AND summarydateid = ?
      AND timezonecode = ?
      AND dpt = ?
      AND line = ?
      AND class = ?
      AND operatorcode = ?;
  </entry>

  <entry key="save-total-account-day">
    INSERT INTO TXU_TOTAL_ACNTDAY
           (    corpid,
        storeid,
        terminalid,
        summarydateid,
        timezonecode,
        dpt,
        line,
        class,
        Operatorcode,
        SalesItemCnt,
        SalesCostAmt,
        SalesSalesAmt,
        ReturnItemCnt,
        ReturnCostAmt,
        ReturnSalesAmt,
        VoidItemCnt,
        VoidCostAmt,
        VoidSalesAmt,
        DcItemCnt,
        DcCostAmt,
        DcSalesAmt
      )
       VALUES
         (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
  </entry>

  <entry key="update-total-account-day">
    UPDATE TXU_TOTAL_ACNTDAY
        SET
      SalesItemCnt = SalesItemCnt + ?,
      SalesCostAmt = SalesCostAmt + ?,
      SalesSalesAmt = SalesSalesAmt + ?,
      ReturnItemCnt = ReturnItemCnt + ?,
      ReturnCostAmt =  ReturnCostAmt + ?,
      ReturnSalesAmt = ReturnCostAmt + ?,
      VoidItemCnt = VoidItemCnt + ?,
      VoidCostAmt = VoidCostAmt + ?,
      VoidSalesAmt = VoidSalesAmt + ?,
      DcItemCnt = DcItemCnt + ?,
      DcCostAmt = DcCostAmt + ?,
      DcSalesAmt = DcSalesAmt + ?
    WHERE
      corpid = ?
      AND storeid = ?
      AND terminalid = ?
      AND summarydateid = ?
      AND timezonecode = ?
      AND dpt = ?
      AND line = ?
      AND class = ?
      AND Operatorcode = ?;
  </entry>
  <entry key="save-total-item-day">
    INSERT INTO TXU_TOTAL_ITEMDAY
           (    corpid,
        storeid,
        summarydateid,
        salesprice,
        dpt,
        line,
        class,
        plu,
        SalesItemCnt,
        SalesCostAmt,
        SalesSalesAmt,
        ReturnItemCnt,
        ReturnCostAmt,
        ReturnSalesAmt,
        VoidItemCnt,
        VoidCostAmt,
        VoidSalesAmt,
        DcItemCnt,
        DcCostAmt,
        DcSalesAmt
      )
       VALUES
         (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
  </entry>

  <entry key="update-total-item-day">
    UPDATE TXU_TOTAL_ITEMDAY
        SET
      SalesItemCnt = SalesItemCnt + ?,
      SalesCostAmt = SalesCostAmt + ?,
      SalesSalesAmt = SalesSalesAmt + ?,
      ReturnItemCnt = ReturnItemCnt + ?,
      ReturnCostAmt =  ReturnCostAmt + ?,
      ReturnSalesAmt = ReturnCostAmt + ?,
      VoidItemCnt = VoidItemCnt + ?,
      VoidCostAmt = VoidCostAmt + ?,
      VoidSalesAmt = VoidSalesAmt + ?,
      DcItemCnt = DcItemCnt + ?,
      DcCostAmt = DcCostAmt + ?,
      DcSalesAmt = DcSalesAmt + ?
    WHERE
      corpid = ?
      AND storeid = ?
      AND summarydateid = ?
      AND salesprice = ?
      AND dpt = ?
      AND line = ?
      AND class = ?
      AND plu = ?;
  </entry>

  <entry key="select-total-item-day">
    SELECT
      *
    FROM
      TXU_TOTAL_ITEMDAY
    WHERE
      corpid = ?
      AND storeid = ?
      AND summarydateid = ?
      AND salesprice = ?
      AND dpt = ?
      AND line = ?
      AND class = ?
      AND plu = ?;
  </entry>
  <entry key="update-total-drawer-financial">
    BEGIN TRAN
      DECLARE @corpid char(12), @storeid char(6), @printerid int, @accountcode char(4),
        @accountsubcode char(2), @summarydateid date,@debtor numeric(15,0),@creditor numeric(15,0)
      SET @corpid=?
      SET @storeid=?
      SET @printerid=?
      SET @accountcode=?
      SET @accountsubcode=?
      SET @summarydateid=?
      SET @debtor=?
      SET @creditor=?

      UPDATE TXU_TOTAL_DRAWER_FINANCIAL
        SET corpid=@corpid,storeid=@storeid,printerid=@printerid,accountcode=@accountcode,
            accountsubcode=@accountsubcode,summarydateid=@summarydateid,debtor=@debtor + debtor,
            creditor= @creditor + creditor
        WHERE corpid=@corpid AND storeid=@storeid AND printerid=@printerid AND
          accountcode=@accountcode AND accountsubcode=@accountsubcode AND summarydateid=@summarydateid
      IF (@@ROWCOUNT = 0)
          INSERT
          TXU_TOTAL_DRAWER_FINANCIAL
            (corpid, storeid, printerid, accountcode, accountsubcode, summarydateid, debtor, creditor)
          VALUES
            (@corpid,@storeid,@printerid,@accountcode,@accountsubcode,@summarydateid,@debtor,@creditor)
    COMMIT
  </entry>
  <entry key="update-total-financial">
    BEGIN TRAN
      DECLARE @corpid char(12), @storeid varchar(MAX), @terminalid varchar(MAX), @accountcode char(4),
        @accountsubcode char(2), @summarydateid date,@debtor numeric(15,0),@creditor numeric(15,0)
      SET @corpid=?
      SET @storeid=?
      SET @terminalid=?
      SET @accountcode=?
      SET @accountsubcode=?
      SET @summarydateid=?
      SET @debtor=?
      SET @creditor=?

      UPDATE TXU_TOTAL_FINANCIAL
        SET corpid=@corpid,storeid=@storeid,terminalid=@terminalid,accountcode=@accountcode,
            accountsubcode=@accountsubcode,summarydateid=@summarydateid,debtor=@debtor + debtor,
            creditor= @creditor + creditor
        WHERE corpid=@corpid AND storeid=@storeid AND terminalid=@terminalid AND
          accountcode=@accountcode AND accountsubcode=@accountsubcode AND summarydateid=@summarydateid
      IF (@@ROWCOUNT = 0)
          INSERT
          TXU_TOTAL_FINANCIAL
            (corpid, storeid, terminalid, accountcode, accountsubcode, summarydateid, debtor, creditor)
          VALUES
            (@corpid,@storeid,@terminalid,@accountcode,@accountsubcode,@summarydateid,@debtor,@creditor)
    COMMIT
  </entry>
  <entry key="get-financial-data">
    SELECT
      AccountCode,
      AccountSubCode,
      SUM(Debit) as Debtor,
      SUM(Credit) as Creditor
    FROM
      TXU_TOTAL_FINANCIAL
    WHERE
      WorkstationId=? and BusinessDayDate=? and RetailStoreId=?
    GROUP BY AccountCode, AccountSubCode
  </entry>
  <entry key="get-drawerfinancial-data">
    SELECT
      AccountCode,
      AccountSubCode,
      SUM(Debit) as Debtor,
      SUM(Credit) as Creditor
    FROM
      TXU_TOTAL_DRAWER_FINANCIAL
    WHERE
      PrinterId=? and BusinessDayDate=? and RetailStoreId=?
    GROUP BY AccountCode, AccountSubCode
  </entry>

  <!-- *************************  ENTRY KEY FOR DEPARTMENT DAY SUMMARRY TABLE ************************* -->
  <entry key="select-total-dept-day">
    SELECT
      *
    FROM
      TXU_TOTAL_ACNTDAY
    WHERE
      corpid = ?
      AND storeid = ?
      AND summarydateid = ?
      AND dpt = ?
      AND timezonecode = ?;
  </entry>

  <entry key="insert-total-dept-day">
    INSERT INTO TXU_TOTAL_DPTSUMDAY
           (    corpid,
        storeid,
        summarydateid,
        dpt,
        timezonecode,
        SalesItemCnt,
        SalesSalesAmt,
        ReturnItemCnt,
        ReturnSalesAmt,
        VoidItemCnt,
        VoidSalesAmt,
        DcItemCnt,
        DcSalesAmt
      )
       VALUES
         (?,?,?,?,?,?,?,?,?,?,?,?,?);
  </entry>

  <entry key="update-total-dept-day">
    UPDATE TXU_TOTAL_DPTSUMDAY
        SET
      SalesItemCnt = SalesItemCnt + ?,
      SalesSalesAmt = SalesSalesAmt + ?,
      ReturnItemCnt = ReturnItemCnt + ?,
      ReturnSalesAmt = ReturnSalesAmt + ?,
      VoidItemCnt = VoidItemCnt + ?,
      VoidSalesAmt = VoidSalesAmt + ?,
      DcItemCnt = DcItemCnt + ?,
      DcSalesAmt = DcSalesAmt + ?
    WHERE
      corpid = ?
      AND storeid = ?
      AND summarydateid = ?
      AND timezonecode = ?
      AND dpt = ?;
  </entry>

  <!-- *************************  ENTRY KEY FOR TOTAL GUEST DEPARTMENT DAY SUMMARY TABLE ************************* -->

  <entry key="select-total-guest-dept-day">
    SELECT
      *
    FROM
      TXU_TOTAL_ITEMDAY
    WHERE
      corpid = ?
      AND storeid = ?
      AND summarydateid = ?
      AND dpt = ?;
  </entry>

  <entry key="update-total-guest-dept-day">
  BEGIN TRAN
      DECLARE @corpid char(12), @storeid varchar(MAX) , @terminalid varchar(MAX), @Operatorcode varchar(20),
        @summarydateid date, @dpt varchar(10), @timezonecode numeric(2,0),
        @SalesGuestCnt numeric(10,0), @ReturnGuestCnt numeric(10, 0), @VoidGuestCnt numeric(10, 0)

      SET @corpid= ?
      SET @storeid= ?
      SET @terminalid= ?
      SET @Operatorcode= ?
      SET @summarydateid= ?
      SET @dpt= ?
      SET @timezonecode= ?
      SET @SalesGuestCnt= ?
      SET @ReturnGuestCnt= ?
      SET @VoidGuestCnt= ?


           UPDATE TXU_TOTAL_GUESTDPTDAY
          SET corpid= @corpid,storeid=@storeid,terminalid=@terminalid,Operatorcode=@Operatorcode,summarydateid=@summarydateid,dpt=@dpt ,timezonecode=@timezonecode, SalesGuestCnt= SalesGuestCnt + @SalesGuestCnt, ReturnGuestCnt= ReturnGuestCnt +@ReturnGuestCnt,  VoidGuestCnt= VoidGuestCnt + @VoidGuestCnt
          WHERE corpid= @corpid AND storeid=@storeid AND terminalid=@terminalid AND Operatorcode=@Operatorcode AND summarydateid=@summarydateid AND dpt=@dpt AND timezonecode=@timezonecode
        IF (@@ROWCOUNT = 0)

          INSERT TXU_TOTAL_GUESTDPTDAY
            (corpid, storeid, terminalid, Operatorcode, summarydateid, dpt, timezonecode, SalesGuestCnt, ReturnGuestCnt, VoidGuestCnt )

          VALUES (@corpid , @storeid, @terminalid, @Operatorcode, @summarydateid,@dpt, @timezonecode, @SalesGuestCnt, @ReturnGuestCnt, @VoidGuestCnt)
 COMMIT
  </entry>

  <!-- *************************  ENTRY KEY FOR REPORTS ************************* -->
    <entry key="select-accountancyreport-bystore">
        SELECT
        ItemName as AccountancyItemName,
        TotalNumber as AccountancyAccount,
        TotalMoney as AccountancyAmount,
        QFid as AccountancyQFid
    FROM TXU_TOTAL_DRAWER_FINANCIAL
    WHERE BusinessDayDate=? and RetailStoreId =?
    </entry>

  <entry key="select-hourlyreport-bydevice">
  SELECT
    derived.TimeZoneCode,
    SUM(derived.SalesItemCnt) SalesItemCnt,
    SUM(derived.SalesSalesAmt) SalesSalesAmt,
    SUM(derived.SalesGuestCnt) SalesGuestCnt

  FROM
    (SELECT
      actday.TimeZoneCode,
      SUM( actday.SalesItemCnt) SalesItemCnt,
      SUM( actday.SalesSalesAmt) SalesSalesAmt,
      SUM( guest.SalesGuestCnt)-SUM( guest.VoidGuestCnt) SalesGuestCnt
    FROM
      TXU_TOTAL_ACNTDAY actday
    INNER JOIN
      TXU_TOTAL_GUESTDPTDAY guest
    ON
      guest.TimeZoneCode = actday.TimeZoneCode AND
      guest.WorkstationId = actday.WorkstationId AND
      guest.BusinessDayDate = actday.BusinessDayDate AND
      guest.RetailStoreId = actday.RetailStoreId AND
      guest.OperatorCode = actday.OperatorCode AND
      guest.Dpt = actday.Dpt
    WHERE
      actday.WorkstationId = ? AND
      actday.BusinessDayDate = ? AND
      actday.RetailStoreId = ?
    GROUP BY
      actday.TimeZoneCode, actday.OperatorCode)

    AS derived
  GROUP BY
    derived.TimeZoneCode
  </entry>
  <entry key="select-hourlyreport-bystore">

    DECLARE @BusinessDayDate varchar(16),@storeid varchar(6)
    SET @BusinessDayDate = ?
    SET @storeid = LTRIM(RTRIM(?))
    SELECT
        dptsum.TimeZoneCode,
        SUM(dptsum.SalesItemCnt) SalesItemCnt,
        SUM(dptsum.SalesSalesAmt) SalesSalesAmt,
        SUM(guest.GuestCnt) SalesGuestCnt
    FROM  TXU_TOTAL_DPTSUMDAY dptsum
    INNER JOIN(
             SELECT   RetailStoreId,
                      BusinessDayDate,
                      Dpt,
                      TimeZoneCode,
                      (SUM(SalesGuestCnt)-SUM(VoidGuestCnt)-SUM(ReturnGuestCnt)) GuestCnt
             FROM TXU_TOTAL_GUESTDPTDAY
             GROUP BY RetailStoreId,
                      BusinessDayDate,
                      Dpt,
                      TimeZoneCode
               )guest
     ON  dptsum.RetailStoreId = guest.RetailStoreId
     AND dptsum.BusinessDayDate = guest.BusinessDayDate
     AND dptsum.Dpt = guest.Dpt
     AND dptsum.TimeZoneCode = guest.TimeZoneCode
     INNER JOIN
            ( SELECT  StoreId
              FROM    RESMaster.dbo.MST_STOREINFO storeinfo
              WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                 ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                      ELSE COALESCE(storeinfo.StoreType, -1)
                                                      END
                                            END
            ) storeinfo
     ON storeinfo.StoreId = dptsum.RetailStoreId
     WHERE
            dptsum.BusinessDayDate = @BusinessDayDate AND
            dptsum.RetailStoreId = CASE WHEN @storeid ='0000' OR @storeid = '0001' OR @storeid ='0002' THEN dptsum.RetailStoreId ELSE @storeid END
     GROUP BY    dptsum.TimeZoneCode
     ORDER BY    dptsum.TimeZoneCode
  </entry>
  <entry key="select-dptreport-bydevice">
  SELECT
      acnt.Dpt,
      dptinfo.DptName,
      acnt.WorkstationId,
      acnt.BusinessDayDate,
      acnt.RetailStoreId,
      (SELECT
        (SUM(SalesGuestCnt)-SUM(VoidGuestCnt))
          FROM TXU_TOTAL_GUESTDPTDAY
        WHERE BusinessDayDate = acnt.BusinessDayDate AND Dpt = acnt.Dpt
            AND WorkstationId = acnt.WorkstationId AND RetailStoreId = acnt.RetailStoreId) GuestCnt,
      SUM(SalesItemCnt) ItemCnt,
      SUM(SalesSalesAmt) SalesAmt
      FROM
        TXU_TOTAL_ACNTDAY acnt
      LEFT JOIN
        RESMaster.dbo.MST_DPTINFO dptinfo
      ON dptinfo.Dpt = acnt.Dpt
    WHERE acnt.WorkstationId = ? and acnt.BusinessDayDate = ? and acnt.RetailStoreId = ?
    GROUP BY acnt.Dpt, dptinfo.DptName, acnt.WorkstationId, acnt.BusinessDayDate, acnt.RetailStoreId
    ORDER BY acnt.Dpt
  </entry>
  <entry key="select-dptreport-bystore">
    DECLARE @BusinessDayDate varchar(16),@storeid varchar(6),@Dpt varchar(10)
    SET @BusinessDayDate = ?
    SET @storeid = LTRIM(RTRIM(?))
    SET @Dpt = LTRIM(RTRIM(?))
    SELECT
             dptsum.Dpt,
             COALESCE(dptinfo.DptName, '') DptName,
             SUM(dptsum.SalesItemCnt) ItemCnt,
             SUM(dptsum.SalesSalesAmt) SalesAmt,
             SUM(guest.GuestCnt) GuestCnt
     FROM  TXU_TOTAL_DPTSUMDAY dptsum
     INNER JOIN(
             SELECT   RetailStoreId,
                      BusinessDayDate,
                      Dpt,
                      TimeZoneCode,
                      (SUM(SalesGuestCnt)-SUM(VoidGuestCnt)-SUM(ReturnGuestCnt)) GuestCnt
             FROM TXU_TOTAL_GUESTDPTDAY
             GROUP BY RetailStoreId,
                      BusinessDayDate,
                      Dpt,
                      TimeZoneCode
               )guest
      ON  dptsum.RetailStoreId = guest.RetailStoreId
      AND dptsum.BusinessDayDate = guest.BusinessDayDate
      AND dptsum.Dpt = guest.Dpt
      AND dptsum.TimeZoneCode = guest.TimeZoneCode
      LEFT JOIN RESMaster.dbo.MST_DPTINFO dptinfo
      ON      dptinfo.Dpt = dptsum.Dpt
      AND dptinfo.StoreId = CASE WHEN EXISTS ( SELECT StoreId
                                               FROM   RESMaster.dbo.MST_DPTINFO
                                               WHERE  StoreId = dptsum.RetailStoreId
                                                      AND Dpt = dptsum.Dpt ) THEN dptsum.RetailStoreId 
                                 ELSE '0'
                             END
      INNER JOIN
                 ( SELECT  StoreId
                   FROM    RESMaster.dbo.MST_STOREINFO storeinfo
                   WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                      ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                           ELSE COALESCE(storeinfo.StoreType, -1)
                                                           END
                                                 END
                       ) storeinfo
       ON storeinfo.StoreId = dptsum.RetailStoreId
       WHERE
          dptsum.BusinessDayDate= @BusinessDayDate
          AND dptsum.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid ='0002' THEN dptsum.RetailStoreId ELSE @storeid  END
          AND dptsum.Dpt = CASE WHEN @Dpt &lt;&gt; '' THEN @Dpt ELSE dptsum.Dpt END
       GROUP BY dptsum.Dpt, dptinfo.DptName
       ORDER BY dptsum.Dpt
  </entry>
  <entry key="select-salesclerkreport-bydevice">
    SELECT
       guest.OperatorCode,
       users.OperatorName,
       (sum(guest.SalesGuestCnt)-sum(guest.VoidGuestCnt))SalesGuestCnt,
       sum(act.SalesItemCnt) ItemCnt,
       sum(act.SalesSalesAmt) SalesAmt
    FROM
      TXU_TOTAL_GUESTDPTDAY guest
    LEFT JOIN
      TXU_TOTAL_ACNTDAY act
    ON
      act.OperatorCode=guest.OperatorCode AND
      act.RetailStoreId=guest.RetailStoreId AND
      act.Dpt=guest.Dpt and act.WorkstationId=guest.WorkstationId AND
      act.BusinessDayDate=guest.BusinessDayDate AND
      act.TimeZoneCode=guest.TimeZoneCode
    LEFT JOIN
      RESMaster.dbo.MST_USER_CREDENTIALS users
    ON
      users.OperatorNo=act.OperatorCode
    WHERE
      guest.WorkstationId=? and guest.BusinessDayDate=? and guest.RetailStoreId=?
    GROUP BY
      guest.WorkstationId, guest.OperatorCode, users.OperatorName
  </entry>
  <entry key="select-salesclerkreport-bystore">
    SELECT
       act.OperatorCode,
       users.OperatorName,
       sum(act.SalesItemCnt) ItemCnt,
       sum(act.SalesSalesAmt) SalesAmt,
       (SELECT
        (SUM(guest.SalesGuestCnt) - SUM(guest.VoidGuestCnt)) SalesGuestCnt
        FROM
        TXU_TOTAL_GUESTDPTDAY guest
        WHERE
        guest.BusinessDayDate=act.BusinessDayDate AND guest.RetailStoreId=act.RetailStoreId and guest.OperatorCode=act.OperatorCode
      ) SalesGuestCnt
    FROM
      TXU_TOTAL_ACNTDAY act
    LEFT JOIN
      RESMaster.dbo.MST_USER_CREDENTIALS users
    ON
      users.OperatorNo = act.OperatorCode
    WHERE
      act.BusinessDayDate=? and act.RetailStoreId=?
    GROUP BY
      act.OperatorCode, users.OperatorName, act.RetailStoreId, act.BusinessDayDate
  </entry>

  <entry key="get-clerkproduct">
    DECLARE @BusinessDayDate varchar(16),@storeid varchar(6),@SalesPersonId varchar(20)
    SET @BusinessDayDate = ?
    SET @storeid = LTRIM(RTRIM(?))
    SET @SalesPersonId = LTRIM(RTRIM(?))
        SELECT 
            COALESCE(MdNameLocal,'') MdNameLocal,
            MdInternal,
            SUM(SalesItemCnt) SalesItemCnt,
            SUM(SalesSalesAmt) SalesSalesAmt
        FROM
              (SELECT
                     plu.MdNameLocal,
                     plu.MdInternal,
                     tillItemday.SalesItemCnt ,
                     tillItemday.SalesSalesAmt,
                     tillItemday.SlipLineNo,
                     tillItemday.SalesTime
                 FROM
                     TXU_TOTAL_TILLITEMDAY tillItemday
                 LEFT JOIN
                     RESMaster.dbo.MST_PLU plu
                 ON
                     tillItemday.Plu = plu.MdInternal
                 AND
                     plu.StoreId = CASE WHEN EXISTS (SELECT plu 
                           FROM   RESMaster.dbo.MST_PLU 
                           WHERE  Plu = tillItemday.Plu
                                  AND StoreId = tillItemday.RetailStoreId)
                       THEN tillItemday.RetailStoreId
                      ELSE '0'
                  END
                 JOIN
                        (SELECT StoreId
                         FROM RESMaster.dbo.MST_STOREINFO storeinfo
                         WHERE COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1' ELSE
                                                          CASE WHEN @storeid = '0002' THEN '3' ELSE
                                                          COALESCE(storeinfo.StoreType, -1)
                                                     END
                                                 END
                         ) AS S
                 ON tillItemday.RetailStoreId = S.StoreId
        WHERE
            tillItemday.BusinessDayDate = @BusinessDayDate
        AND tillItemday.SalesPersonId =  @SalesPersonId
        AND tillItemday.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid ='0001' OR @storeid = '0002' THEN RetailStoreId                                                                                                        ELSE @storeid END
            )AS clerkproduct
        GROUP BY MdInternal,
                 MdNameLocal,
                 SlipLineNo,
                 SalesTime
        ORDER BY SalesTime,
                 SlipLineNo
    </entry>
    <entry key="select-groupreport">
    DECLARE   @BusinessDayDate varchar(16),@storeid varchar(6)
    SET       @BusinessDayDate = ?
    SET       @storeid = LTRIM(RTRIM(?))
    SELECT 
            plu.SubCode1 AS groupId,
            COALESCE(sysconfig.Value,'') groupName,
            SUM(guestitem.SalesGuestCnt) SalesGuestCnt,
            SUM(itemday.ItemCnt) ItemCnt,
            SUM(itemday.SalesAmt) SalesAmt
    FROM
      ( SELECT    RetailStoreId,
                        Plu,
                        BusinessDayDate,
                        SUM(SalesItemCnt) ItemCnt,
                        SUM(SalesSalesAmt) SalesAmt
              FROM      TXU_TOTAL_ITEMDAY
              GROUP BY  RetailStoreId,
                        Plu,
                        BusinessDayDate ) itemday
    INNER JOIN 
      ( SELECT  RetailStoreId,
            Plu,
            BusinessDayDate,
            SUM(SalesGuestCnt) - SUM(VoidGuestCnt) - SUM(ReturnGuestCnt) SalesGuestCnt
              FROM    TXU_TOTAL_GUESTITEMDAY
              GROUP BY  RetailStoreId,
            Plu,
            BusinessDayDate ) guestitem
    ON      itemday.RetailStoreId = guestitem.RetailStoreId
            AND itemday.Plu = guestitem.Plu
            AND itemday.BusinessDayDate = guestitem.BusinessDayDate
    LEFT JOIN  
      RESMaster.dbo.MST_PLU plu
    ON      plu.StoreId = CASE WHEN EXISTS ( SELECT storeId
                                             FROM   RESMaster.dbo.MST_PLU
                                             WHERE  MdInternal = itemday.Plu
                                                    AND StoreId = itemday.RetailStoreId ) THEN itemday.RetailStoreId
                               ELSE '0'
                          END
            AND itemday.Plu = plu.MdInternal
    INNER JOIN
            RESMaster.dbo.PRM_SYSTEM_CONFIG sysconfig
    ON
            LTRIM(RTRIM(sysconfig.Category)) ='GroupReport' and sysconfig.KeyId= plu.SubCode1
    INNER JOIN
            ( SELECT  StoreId
              FROM    RESMaster.dbo.MST_STOREINFO storeinfo
              WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                               ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                                         ELSE COALESCE(storeinfo.StoreType, -1)
                                                                     END
                                                          END
                    ) storeinfo
    ON storeinfo.StoreId = itemday.RetailStoreId
    WHERE
            itemday.BusinessDayDate = @BusinessDayDate
            AND itemday.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid ='0002' THEN itemday.RetailStoreId  ELSE  @storeid  END
    GROUP BY  plu.SubCode1,sysconfig.Value
    ORDER BY  plu.SubCode1
    </entry>
    <entry key="get-storereport">
    DECLARE @storeid VARCHAR(6) ,
            @businessDayDate VARCHAR(16)

    SET   @storeid = LTRIM(RTRIM(?))
    SET   @businessDayDate = ?

    SELECT  storeinfo.StoreId ,
            COALESCE(storeinfo.StoreName, '') StoreName ,
            SUM(guest.GuestCount) SalesGuestCnt ,
            SUM(act.SalesItemCnt) ItemCnt ,
            SUM(act.SalesSalesAmt) SalesAmt
    FROM    ( SELECT    RetailStoreId ,
                        BusinessDayDate ,
                        SUM(SalesItemCnt) SalesItemCnt ,
                        SUM(SalesSalesAmt) SalesSalesAmt
              FROM      TXU_TOTAL_ACNTDAY
              GROUP BY  RetailStoreId ,
                        BusinessDayDate
            ) act
            INNER JOIN
            ( SELECT StoreId ,
                     StoreName
              FROM   RESMaster.dbo.MST_STOREINFO storeinfo
              WHERE  COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001'
                                                           THEN '1'
                                                        ELSE CASE WHEN @storeid = '0002'
                                                                     THEN '3'
                                                                  ELSE COALESCE(storeinfo.StoreType, -1)
                                                             END
                                                   END
            ) storeinfo ON act.RetailStoreId = storeinfo.StoreId
            INNER JOIN
            ( SELECT  RetailStoreId ,
                         BusinessDayDate ,
                         SUM(SalesGuestCnt - ReturnGuestCnt
                         - VoidGuestCnt) GuestCount
              FROM    TXU_TOTAL_GUESTTILLDAY
              GROUP BY  RetailStoreId ,
                        BusinessDayDate
            ) guest ON  storeinfo.StoreId = guest.RetailStoreId
                        AND guest.BusinessDayDate = act.BusinessDayDate
    WHERE   act.BusinessDayDate = @businessDayDate
            AND act.RetailStoreId = CASE WHEN @storeid = '0000'
                                              OR @storeid = '0001'
                                              OR @storeid = '0002'
                                         THEN act.RetailStoreId
                                         ELSE @storeid
                                    END
    GROUP BY storeinfo.StoreId ,
             storeinfo.StoreName
    ORDER BY storeinfo.StoreId
    </entry>
    <entry key="get-itemreport">
    DECLARE @storeid VARCHAR(6) ,
            @businessDayDate VARCHAR(16) ,
            @dpt VARCHAR(10)

    SET   @storeid = LTRIM(RTRIM(?))
    SET   @businessDayDate = ?
    SET   @dpt = LTRIM(RTRIM(?))
  
    SELECT  
      class.Class,
      COALESCE(class.ClassNameLocal, '') ClassNameLocal,
            SUM(GuestCnt) SalesGuestCnt,
            SUM(itemday.ItemCnt) ItemCnt,
            SUM(itemday.SalesAmt) SalesAmt
    FROM    ( SELECT    RetailStoreId,
                        Plu,
                        BusinessDayDate,
                        SUM(SalesItemCnt) ItemCnt,
                        SUM(SalesSalesAmt) SalesAmt
              FROM      TXU_TOTAL_ITEMDAY
              GROUP BY  RetailStoreId,
                        Plu,
                        BusinessDayDate ) itemday
    INNER JOIN ( SELECT RetailStoreId,
                        Plu,
                        BusinessDayDate,
                        SUM(SalesGuestCnt) - SUM(VoidGuestCnt) - SUM(ReturnGuestCnt) GuestCnt
                 FROM   TXU_TOTAL_GUESTITEMDAY
                 GROUP BY RetailStoreId,
                        Plu,
                        BusinessDayDate ) guestitem
    ON      itemday.RetailStoreId = guestitem.RetailStoreId
            AND itemday.Plu = guestitem.Plu
            AND itemday.BusinessDayDate = guestitem.BusinessDayDate
    LEFT JOIN RESMaster.dbo.MST_PLU plu
    ON      plu.StoreId = CASE WHEN EXISTS ( SELECT MdInternal
                                             FROM   RESMaster.dbo.MST_PLU
                                             WHERE  MdInternal = itemday.Plu
                                                    AND StoreId = itemday.RetailStoreId ) THEN itemday.RetailStoreId
                               ELSE '0'
                          END
            AND itemday.Plu = plu.MdInternal
  LEFT JOIN  RESMaster.dbo.MST_CLASSINFO class
  ON    class.StoreId =  CASE WHEN EXISTS (SELECT Class 
                                             FROM   RESMaster.dbo.MST_CLASSINFO
                         WHERE  Class = plu.Class
                                AND StoreId = plu.StoreId) THEN plu.StoreId
                  ELSE '0'
              END
          AND class.Class = plu.Class
    INNER JOIN ( SELECT  StoreId
                FROM    RESMaster.dbo.MST_STOREINFO storeinfo
                WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                                 ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                                           ELSE COALESCE(storeinfo.StoreType, -1)
                                                                      END
                                                            END ) storeinfo
    ON      storeinfo.StoreId = itemday.RetailStoreId
    WHERE   itemday.BusinessDayDate = @businessDayDate
            AND itemday.RetailStoreId = CASE WHEN @storeid = '0000'
                                              OR @storeid = '0001'
                                              OR @storeid = '0002' THEN itemday.RetailStoreId
                                         ELSE @storeid
                                    END
            AND plu.Dpt = @dpt
    GROUP BY class.Class,
             class.ClassNameLocal
    ORDER BY class.Class
    </entry>
    <entry key="select-salesmanreport">
    DECLARE @BusinessDayDate varchar(16),@storeid varchar(6),@SalesPersonId char(20)
    SET  @BusinessDayDate = ?
    SET  @storeid = LTRIM(RTRIM(?))
    SET  @SalesPersonId = LTRIM(RTRIM(?))
    SELECT
            tillitemday.SalesPersonId,
            COALESCE(users.OperatorName, '') OperatorName,
            (SUM(SalesGuestCnt)-SUM(VoidGuestCnt)-SUM(ReturnGuestCnt)) SalesGuestCnt,
             SUM(tillitemday.ItemCnt) ItemCnt,
             SUM(tillitemday.SalesAmt) SalesAmt
    FROM  TXU_TOTAL_GUESTITEMDAY guest
    INNER JOIN(
             SELECT    RetailStoreId,
                       TillID,
                       SalesPersonId,
                       BusinessDayDate,
                       Plu,
                       SUM(SalesItemCnt) ItemCnt,
                       SUM(SalesSalesAmt) SalesAmt
              FROM     TXU_TOTAL_TILLITEMDAY
              GROUP BY RetailStoreId,
                       TillID,
                       SalesPersonId,
                       BusinessDayDate,
                       Plu
                  )tillitemday
     ON  tillitemday.RetailStoreId = guest.RetailStoreId
     AND tillitemday.TillID = guest.TillID
     AND tillitemday.SalesPersonId = guest.SalesPersonId
     AND tillitemday.BusinessDayDate = guest.BusinessDayDate
     AND tillitemday.Plu = guest.Plu
     INNER JOIN  RESMaster.dbo.MST_USER_CREDENTIALS users
     ON tillitemday.SalesPersonId = users.OperatorNo
     INNER JOIN
            ( SELECT  StoreId
              FROM    RESMaster.dbo.MST_STOREINFO storeinfo
              WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                         ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                                     ELSE COALESCE(storeinfo.StoreType, -1)
                                                               END
                                                          END
                       ) storeinfo
     ON storeinfo.StoreId = tillitemday.RetailStoreId
     WHERE
                   tillitemday.BusinessDayDate= @BusinessDayDate
                   AND tillitemday.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid ='0002' THEN tillitemday.RetailStoreId ELSE @storeid  END
                   AND tillitemday.SalesPersonId = CASE WHEN @SalesPersonId &lt;&gt; '' THEN @SalesPersonId ELSE tillitemday.SalesPersonId END
     GROUP BY      tillitemday.SalesPersonId,
                   users.OperatorName
     ORDER BY
                   SalesAmt DESC
    </entry>

  <entry key="select-detailreport">
  SELECT
    RIGHT(REPLICATE('0',2)+CAST(act.timezonecode AS VARCHAR(2)),2) as timezonecode,
    SUM(guest.SalesGuestCnt) as SalesGuestCnt, SUM(act.SalesItemCnt) as SalesItemcnt, SUM(act.SalesSalesAmt) as SalesSalesAmt
    FROM TXU_TOTAL_ACNTDAY act LEFT JOIN TXU_TOTAL_GUESTDPTDAY guest
    ON guest.summarydateid = act.summarydateid AND guest.storeid = act.storeid AND
      guest.dpt = act.dpt AND guest.timezonecode = act.timezonecode AND
      guest.Operatorcode = act.Operatorcode AND guest.terminalid = act.terminalid
    WHERE act.summarydateid = ? AND act.storeid = ?
      AND act.dpt = ?
      AND (act.timezonecode &gt;= ? AND act.timezonecode &lt;= ?)
      /*1 AND act.Operatorcode = ? 1*/
    group by
      act.timezonecode
    order by
      act.timezonecode
  </entry>

  <!-- *************************  ENTRY KEY FOR EXTERNAL CA REQUEST ************************* -->
  <entry key="save-extCAReq">
    INSERT INTO TXL_EXTERNAL_CA_REQ
           ([RetailStoreId]
           ,[WorkstationId]
           ,[BusinessDayDate]
           ,[SequenceNumber]
           ,[Status]
           ,[SlipNumber]
           ,[Amount]
           ,[OperatorCode]
           ,[Type])
       VALUES
           (?,?,?,?,?,?,?,?,1) /*TODO: Type is a new column and could not be NULL, defaulted to 1.*/
  </entry>
  <entry key="save-extCAReq-pastelport">
    INSERT INTO TXL_EXTERNAL_CA_REQ
           ([RetailStoreId]
           ,[WorkstationId]
           ,[BusinessDayDate]
           ,[SequenceNumber]
           ,[Status]
           ,[SlipNumber]
           ,[Amount]
           ,[OperatorCode]
       ,[CreditCompanyCode]
       ,[RecvCompanyCode]
       ,[CreditCompanyName]
       ,[PaymentMethod]
       ,[ApprovalCode]
       ,[CreditStatus]
       ,[CafisTraceNum]
       ,[Pan]
       ,[ExpDate]
       ,[Type])
       VALUES
           (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
  </entry>
  <entry key="get-extCAReq">
    SELECT
      RetailStoreId,
      WorkstationId,
      SequenceNumber,
      SlipNumber,
      Status,
      Amount,
      BusinessDayDate
    FROM
      TXL_EXTERNAL_CA_REQ
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      BusinessDayDate = ? AND
      Status = 0
      ORDER BY
        SequenceNumber ASC
  </entry>
  <entry key="get-extCAReq-status">
    SELECT TOP 1 *
      FROM   TXL_EXTERNAL_CA_REQ
      WHERE  RetailStoreId = ?
      and    WorkstationId = ?
      and    SequenceNumber = ?
      and    BusinessDayDate = ?
  </entry>

  <entry key="set-extCAReqStatus-updlock">
    DECLARE @_storeid varchar(MAX), @_termid varchar(MAX),

        @_txdate date, @_txid varchar(MAX),
        @_status_cur char(1), @_status_new char(1);

    SET @_storeid = ?;
    SET @_termid = ?;
    SET @_txdate = ?;
    SET @_txid = ?;
    SET @_status_cur = ?;
    SET @_status_new = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT Status FROM TXL_EXTERNAL_CA_REQ(UPDLOCK)
    WHERE
      RetailStoreId = @_storeid and
        WorkstationId = @_termid and
        BusinessDayDate = @_txdate and
        SequenceNumber = @_txid and
        Status = @_status_cur
    UPDATE TXL_EXTERNAL_CA_REQ
    SET Status = @_status_new
    WHERE
      RetailStoreId = @_storeid and
        WorkstationId = @_termid and
        BusinessDayDate = @_txdate and
        SequenceNumber = @_txid and
        Status = @_status_cur
    COMMIT TRAN
  </entry>

  <entry key="set-extCAReqStatus">
    UPDATE TXL_EXTERNAL_CA_REQ
    SET Status = ?
      WHERE
      RetailStoreId = ? and
        WorkstationId = ? and
        BusinessDayDate = ? and
        SequenceNumber = ?
  </entry>
  <entry key="set-extCAReq">
    UPDATE TXL_EXTERNAL_CA_REQ
    SET Status = ?,
      CreditCompanyCode = ?,
      CreditCompanyName = ?,
        PaymentMethod = ?,
        ApprovalCode = ?,
        CreditStatus = ?,
        CafisTraceNum = ?,
        Pan=?,
        ExpDate=?
      WHERE RetailStoreId = ? and
          WorkstationId = ? and
            BusinessDayDate = ? and
            SequenceNumber = ? and Status = 9;
  </entry>

  <entry key="get-credCompany">
    SELECT CompanyCode, CompanyName
      FROM RESMaster.dbo.PRM_CREDIT_COMPANY
      WHERE  ?   &gt;= Pan_Min   and
           ?   &lt;= Pan_Max
  </entry>

  <entry key="get-forwardCount">
    SELECT
      COUNT(*) as count
    FROM
      TXL_FORWARD_ITEM
    WHERE
      RetailStoreId = ? AND
      PosTermId = ? AND
      BusinessDayDate = ? AND
      Status = 0;
  </entry>

  <entry key="get-forward-item-count">
    SELECT
      COUNT(1) as count
    FROM
      TXL_FORWARD_ITEM
    WHERE
      CompanyId = LTRIM(RTRIM(?)) AND
      RetailStoreId = LTRIM(RTRIM(?)) AND
      BusinessDayDate = LTRIM(RTRIM(?)) AND
      WorkstationId = LTRIM(RTRIM(?)) AND
      Status = 0;
  </entry>
  <entry key="delete-forward-item">
    DELETE FROM 
      RESTransaction.dbo.TXL_FORWARD_ITEM
    WHERE
      CompanyId = LTRIM(RTRIM(?)) AND
      RetailStoreId = LTRIM(RTRIM(?)) AND
      BusinessDayDate = LTRIM(RTRIM(?))
  </entry>
  <entry key="get-forwardData">
    SELECT
      TOP 1 *
    FROM
      TXL_FORWARD_ITEM
    WHERE
      RetailStoreId = ? AND
      PosTermId = ? AND
      BusinessDayDate = ? AND
      Status = 0
    ORDER BY
      SequenceNumber ASC;
  </entry>

  <entry key="set-forwardStatus">
    UPDATE
      TXL_FORWARD_ITEM
    SET
      Status = ?
    WHERE
      RetailStoreId = ? AND
      PosTermId = ? AND
      BusinessDayDate = ? AND
      SequenceNumber = ? AND
      Status = 0;
  </entry>

  <entry key="save-itemForwardData">
    INSERT INTO TXL_FORWARD_ITEM
    (RetailStoreId
    ,WorkstationId
    ,SequenceNumber
    ,Queue
    ,BusinessDayDate
    ,PosTermId
    ,Status
    ,Tx)
    VALUES
    (?, ?, ?, 0,?, ?, 0, ?); /** Init Queue=0 just for testing. **/
  </entry>

  <!--For Peripheral Control -->
  <entry key="get-all-devices">
    SELECT TOP (?) TerminalId, StoreId, COALESCE(DeviceName, '') as DevName, PrinterId, TillId, LinkQueueBuster, LinkSignature, Status FROM
    RESMaster.dbo.MST_DEVICEINFO
    WHERE
      StoreId like ? AND
      (TerminalId like ?  {ESCAPE '\'}  ) AND (DeviceName IS NULL OR (LOWER(DeviceName) like LOWER(?)  {ESCAPE '\'} ) ) AND
      Status = 'Active' 
    ORDER BY StoreId ASC, TerminalId ASC
  </entry>

  <entry key="delete-deviceinfo">
    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      Status='Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
      StoreId=? AND TerminalId=?

  </entry>

  <entry key="get-attribute-info">
  SELECT
    attribute.AttributeId,
    attribute.Printer,
        attribute.Till,
        attribute.CreditTerminal,
        attribute.MSR,
        attribute.CashChanger,
        attribute.Attribute1,
        attribute.Attribute2,
        attribute.Attribute3,
        attribute.Attribute4,
        attribute.Attribute5,
        attribute.Attribute6,
        attribute.Attribute7,
        attribute.Attribute8,
        attribute.Attribute9,
        attribute.Attribute10,
        deviceinfo.Training
  FROM      RESMaster.dbo.PRM_DEVICE_ATTRIBUTE attribute
  INNER JOIN  RESMaster.dbo.MST_DEVICEINFO deviceinfo
  ON      attribute.AttributeId = deviceinfo.AttributeId
  WHERE   deviceinfo.StoreId = LTRIM(RTRIM(?))
          AND deviceinfo.TerminalId = LTRIM(RTRIM(?))
          AND deviceinfo.CompanyId = LTRIM(RTRIM(?))
          AND deviceinfo.Training = ?
  </entry>

  <entry key="get-device-attribute-info">
  SELECT
    deviceinfo.CompanyId,
    deviceinfo.StoreId,
    deviceinfo.TerminalId,
    deviceinfo.Training,
    ISNULL(deviceinfo.DeviceName, '') AS DeviceName,  
    ISNULL(deviceinfo.AttributeId, '') AS AttributeId,
    ISNULL(deviceinfo.PrinterId, '') AS PrinterId,
    ISNULL(deviceinfo.TillId, '') AS TillId,
    ISNULL(deviceinfo.LinkQueueBuster, '') AS LinkQueueBuster,
    ISNULL(printinfo.Description, '') AS PrintDes,
    ISNULL(tillidinfo.TillId, '') DrawerId,
    ISNULL(queuebustr_link.DisplayName, '') AS DisplayName,
    ISNULL(device_attribute.DESCRIPTION, '') AS AttributeDes
  FROM      RESMaster.dbo.MST_DEVICEINFO deviceinfo
    LEFT JOIN RESMaster.dbo.MST_PRINTERINFO printinfo
        ON  deviceinfo.CompanyId = printinfo.CompanyId AND
            deviceinfo.StoreId = printinfo.StoreId AND
            deviceinfo.PrinterId = printinfo.PrinterId
    LEFT JOIN RESMaster.dbo.MST_TILLIDINFO tillidinfo
        ON  deviceinfo.CompanyId = tillidinfo.CompanyId AND
            deviceinfo.StoreId = tillidinfo.StoreId AND
            deviceinfo.TillId = tillidinfo.TillId
    LEFT JOIN RESMaster.dbo.PRM_QUEUEBUSTER_LINK queuebustr_link
        ON  deviceinfo.StoreId = queuebustr_link.StoreId AND
          deviceinfo.LinkQueueBuster = queuebustr_link.Id
    LEFT JOIN RESMaster.dbo.PRM_DEVICE_ATTRIBUTE device_attribute
        ON  deviceinfo.AttributeId = device_attribute.AttributeId
  WHERE deviceinfo.CompanyId = LTRIM(RTRIM(?)) AND deviceinfo.StoreId = LTRIM(RTRIM(?)) AND deviceinfo.TerminalId = LTRIM(RTRIM(?))
  </entry>

  <entry key="delete-printerinfo">
    UPDATE
      RESMaster.dbo.MST_PRINTERINFO
    SET
      Status='Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
      StoreId=? AND PrinterId=?
  </entry>

  <entry key="get-peripheraldeviceinfo">
    SELECT
      devinfo.CompanyId,
      devinfo.StoreId,
      devinfo.TerminalId,
      devinfo.Training,
      COALESCE(devinfo.DeviceName, '') as DevName,
      COALESCE(devinfo.TillId, '') as TId,
      devinfo.SendLogFile,
      devinfo.SaveLogFile,
      devinfo.AutoUpload,
      devinfo.LinkQueueBuster,
      devinfo.LinkAuthorization,
      devinfo.LinkSignature,
      devinfo.PrinterId DevPrinterId,
      printinfo.PrinterId,
      devinfo.LinkPosTerminalId,
      syscon.Value PricingType,
      devinfo.LastTxId,
      devinfo.LastSuspendTxId,
      devinfo.Status,
      printinfo.PrinterName,
      printinfo.Description,
      printinfo.Status,
      printinfo.IpAddress,
      printinfo.PortNumUdp,
      printinfo.PortNumTcp,
      devinfo.AttributeId
    FROM 
      RESMaster.dbo.MST_DEVICEINFO devinfo
    LEFT JOIN 
      RESMaster.dbo.MST_PRINTERINFO printinfo 
    ON
      devinfo.CompanyId = printinfo.CompanyId AND
      devinfo.StoreId = printinfo.StoreId AND
      devinfo.PrinterId = printinfo.PrinterId      
    LEFT JOIN 
      RESMaster.dbo.PRM_SYSTEM_CONFIG syscon 
    ON 
      syscon.KeyId = 'PricingType'
    WHERE
      devInfo.CompanyId = ? AND
      devinfo.StoreId = ? AND 
      devinfo.TerminalId = ? AND 
      devinfo.Training = ?
  </entry>

  <entry key="update-last-txid">
    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      LastTxId = ?
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active'
  </entry>

  <entry key="update-last-suspendtxid">
    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      LastSuspendTxId = ?
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active'
  </entry>
  <entry key="update-deviceinfo">
    DECLARE
      @CompanyId varchar(12),
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @PrinterId varchar(MAX),
      @TillId varchar(MAX),
      @LinkPosTerminalId varchar(MAX),
      @LinkQueueBuster varchar(MAX),
      @LinkAuthorization varchar(MAX),
      @LinkSignature varchar(MAX),
      @SendLogFile int,
      @SaveLogFile int,
      @AutoUpload int,
      @LastTxId numeric(5, 0),
      @LastSuspendTxId numeric(5, 0),
      @EjSequence numeric(5, 0),
      @DeviceName varchar(MAX),
      @UpdAppId varchar(MAX),
      @UpdOpeCode varchar(MAX)

      SET @CompanyId = ?
      SET @StoreId = ?
      SET @TerminalId = ?
      SET @PrinterId = ?
      SET @TillId = ?
      SET @LinkPosTerminalId = ?
      SET @SendLogFile = ?
      SET @SaveLogFile = ?
      SET @AutoUpload = ?
      SET @LinkQueueBuster = ?
      SET @LinkAuthorization = ?
      SET @LinkSignature = ?
      SET @LastTxId = ?
      SET @LastSuspendTxId = ?
      SET @EjSequence = ?
      SET @DeviceName = ?
      SET @UpdAppId = ?
      SET @UpdOpeCode = ?

    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      CompanyId =
        CASE 
          WHEN len(@CompanyId) > 0 
          THEN @CompanyId
          ELSE CompanyId
        END,
      StoreId =
        CASE 
          WHEN len(@StoreId) > 0 
          THEN @StoreId
          ELSE StoreId
        END,
      TerminalId =
        CASE 
          WHEN len(@TerminalId) > 0 
          THEN @TerminalId
          ELSE TerminalId
        END,
      DeviceName =
        CASE 
          WHEN @DeviceName IS NULL 
          THEN COALESCE(DeviceName, '')
          ELSE @DeviceName
        END,
      LinkQueueBuster =
        CASE 
          WHEN @LinkQueueBuster IS NULL 
          THEN LinkQueueBuster
          ELSE @LinkQueueBuster
        END,
      LinkAuthorization =
        CASE 
          WHEN @LinkAuthorization IS NULL 
          THEN LinkAuthorization
          ELSE @LinkAuthorization
        END,
      LinkSignature =
        CASE 
          WHEN @LinkSignature IS NULL 
          THEN LinkSignature
          ELSE @LinkSignature
        END,
      PrinterId =
        CASE
          WHEN @PrinterId = 0 OR @PrinterId = -1 
          THEN @PrinterId
          WHEN EXISTS(
            SELECT * 
            FROM RESMaster.dbo.MST_PRINTERINFO AS a 
            WHERE 
              a.PrinterId = @PrinterId AND 
              a.Status = 'Active' AND 
              a.StoreId = 
                CASE 
                  WHEN LEN(@StoreId) > 0 
                  THEN @StoreId 
                  ELSE RESMaster.dbo.MST_DEVICEINFO.StoreId 
                END
          )
          THEN @PrinterId
          WHEN @PrinterId IS NULL AND EXISTS(
            SELECT * 
            FROM RESMaster.dbo.MST_PRINTERINFO AS a 
            WHERE a.PrinterId = RESMaster.dbo.MST_DEVICEINFO.PrinterId AND 
            a.Status = 'Active' AND 
            a.StoreId = 
              CASE 
                WHEN LEN(@StoreId) > 0 
                THEN @StoreId 
                ELSE RESMaster.dbo.MST_DEVICEINFO.StoreId 
              END
          )
          THEN PrinterId
          ELSE NULL
        END,
      TillId =
        CASE
          WHEN @TillId IS NULL 
          THEN COALESCE(TillId, '')
          ELSE @TillId
        END,
      LinkPosTerminalId =
        CASE
          WHEN @LinkPosTerminalId IS NULL 
          THEN LinkPosTerminalId
          ELSE @LinkPosTerminalId
        END,
      SendLogFile =
        CASE
          WHEN @SendLogFile IS NULL 
          THEN SendLogFile
          WHEN @SendLogFile > 0 
          THEN @SendLogFile
          ELSE 3
        END,
      SaveLogFile =
        CASE
          WHEN @SaveLogFile IS NULL 
          THEN SaveLogFile
          WHEN @SaveLogFile > 0 
          THEN @SaveLogFile
          ELSE 40
        END,
      AutoUpload =
        CASE
          WHEN @AutoUpload IS NULL 
          THEN AutoUpload
          WHEN @AutoUpload > 0 
          THEN 1
          ELSE 0
        END,
      LastTxId =
        CASE
          WHEN @LastTxId IS NULL 
          THEN LastTxId
          ELSE @LastTxId
          END,
      LastSuspendTxId =
        CASE
          WHEN @LastSuspendTxId IS NULL 
          THEN LastSuspendTxId
          ELSE @LastSuspendTxId
        END,
      EjSequence =
        CASE
          WHEN @EjSequence IS NULL 
          THEN EjSequence
          ELSE @EjSequence
        END,
      UpdAppId = @UpdAppId,
      UpdOpeCode = @UpdOpeCode,
      UpdDate = GETDATE()
    OUTPUT
      INSERTED.CompanyId,
      INSERTED.StoreId,
      INSERTED.TerminalId,
      INSERTED.DeviceName,
      INSERTED.PrinterId,
      INSERTED.TillId,
      INSERTED.LinkPosTerminalId,
      INSERTED.SendLogFile,
      INSERTED.SaveLogFile,
      INSERTED.AutoUpload,
      INSERTED.LinkQueueBuster,
      INSERTED.LinkAuthorization,
      INSERTED.LinkSignature,
      INSERTED.LastTxId,
      INSERTED.EjSequence,
      INSERTED.LastSuspendTxId,
      INSERTED.Training
    WHERE
      CompanyId = ? AND 
      StoreId = ? AND 
      TerminalId = ? AND
      Training = ? AND
      Status = 'Active'
  </entry>
  <entry key="activate-deleted-deviceinfo">
    UPDATE
    RESMaster.dbo.MST_DEVICEINFO

    SET
    Status = 'Active'

    OUTPUT
    INSERTED.Status

    WHERE
    CompanyId = ? AND StoreId = ? AND TerminalId = ?
  </entry>

  <entry key="update-printerinfo">
    DECLARE
    @storeid varchar(MAX),
    @printerid varchar(MAX),
    @printername varchar(MAX),
    @description varchar(MAX),
    @ipaddress varchar(MAX),
    @portnumtcp int,
    @portnumudp int,
    @updappid varchar(MAX),
    @updopecode varchar(MAX)


    SET @storeid = ?
    SET @printerid = ?
    SET @printername = ?
    SET @description = ?
    SET @ipaddress = ?
    SET @portnumtcp = ?
    SET @portnumudp = ?
    SET @updappid = ?
    SET @updopecode = ?

    UPDATE
    RESMaster.dbo.MST_PRINTERINFO
    SET
    StoreId=
      CASE
        WHEN len(@storeid) > 0 THEN @storeid
        ELSE StoreId
      END,
    PrinterId=
      CASE
        WHEN len(@printerid) > 0 then @printerid
        ELSE PrinterId
      END,
    PrinterName=
      CASE
        WHEN @printername IS NULL THEN PrinterName
        ELSE @printername
      END,
    Description=
      CASE
        WHEN @description IS NULL THEN Description
        ELSE @description
      END,
    IpAddress=
      CASE
        WHEN @ipaddress IS NULL THEN IpAddress
        ELSE @ipaddress
      END,
    PortNumTcp=
      CASE
        WHEN @portnumtcp IS NULL THEN PortNumTcp
        ELSE @portnumtcp
      END,
    PortNumUdp=
      CASE
        WHEN @portnumudp IS NULL THEN PortNumUdp
        ELSE @portnumudp
      END,
    UpdAppId = @updappid,
    UpdOpeCode = @updopecode,
    UpdDate = GETDATE(),
    Status = 'Active'

    OUTPUT
    INSERTED.StoreId,
    INSERTED.PrinterId,
    INSERTED.PrinterName,
    INSERTED.Description,
    INSERTED.IpAddress,
    INSERTED.PortNumTcp,
    INSERTED.PortNumUdp

    WHERE
    StoreId= ? AND PrinterId= ?
  </entry>

  <entry key="insert-printerinfo">
    INSERT INTO RESMaster.dbo.MST_PRINTERINFO
    (StoreId,
    PrinterId,
    PrinterName,
    IpAddress,
    PortNumTcp,
    PortNumUdp,
    Description,
    Status,
    UpdAppId,
    UpdOpeCode,
    UpdDate)
    VALUES (?, ?, ?, ?, ?, ?, ?,'Active',?,?,GETDATE())
  </entry>

  <entry key="get-printerinfo">
    SELECT * from RESMaster.dbo.MST_PRINTERINFO
    WHERE StoreId like ? AND
    PrinterId = ? AND
    Status = 'Active';
  </entry>

  <entry key="get-all-printers">
    DECLARE
      @storeid varchar(max),
      @printerid varchar(max),
      @printerdesc varchar(max),
      @limit int
    SET @storeid=?
    SET @printerid=?
    SET @printerdesc=?
    SET @limit=?
    SET @limit = (CASE
           WHEN(@limit > -1)
             THEN @limit
             ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_PRINTERINFO)
           END)
    SELECT TOP(@limit) *
    FROM RESMaster.dbo.MST_PRINTERINFO
    WHERE Status = 'Active'
    AND (@storeid IS NULL OR len(@storeid) = 0 OR StoreId = @storeid)
    AND (@printerid IS NULL OR len(@printerid) = 0 OR (PrinterId like @printerid {ESCAPE '\'} ) )
    AND (@printerdesc IS NULL OR len(@printerdesc) = 0 OR (LOWER(Description) like LOWER(@printerdesc) {ESCAPE '\'}) );
  </entry>

  <entry key="set-printerid">
    UPDATE RESMaster.dbo.MST_DEVICEINFO
    SET PrinterId = ?,
      UpdAppId =?,
      UpdOpeCode = ?,
      UpdDate = GETDATE()
    WHERE StoreId = ? AND TerminalId = ? AND Status = 'Active';
  </entry>

  <entry key="set-LinkPosTerminalId">
    UPDATE RESMaster.dbo.MST_DEVICEINFO SET LinkPosTerminalId = ? WHERE
    StoreId = ? AND TerminalId = ?;
  </entry>
  
  <entry key="set-tillid">
    UPDATE RESMaster.dbo.MST_DEVICEINFO
    SET TillId = ?,
        UpdAppId =?,
        UpdOpeCode = ?,
        UpdDate = GETDATE()
    WHERE StoreId = ? AND TerminalId = ?;
  </entry>

  <entry key="get-storeInfo">
     SELECT StoreId
          , StoreName
          , StoreAddr
          , StoreType
          , StoreTel
          , StoreUrl
          , SalesSpaceName
          , EventName
          , Ads
     FROM RESMaster.dbo.MST_STOREINFO
     WHERE StoreId = ? ;
  </entry>
  
    <entry key="get-store-bystoreIdandcomnpanyId">
     SELECT StoreId
          , StoreName
          , StoreAddr
          , StoreType
          , StoreTel
          , StoreUrl
          , SalesSpaceName
          , EventName
          , Ads
     FROM RESMaster.dbo.MST_STOREINFO
     WHERE StoreId = ? 
     AND CompanyId = ?
     AND Status = 'Active'
     AND DeleteFlag = 0.0
  </entry>

  <entry key="get-pastelportlog">
     SELECT CrCompanyCode
          , RecvCompanyCode
          , Pan
          , CaStatus
          , PaymentSeq
          , ApprovalCode
          , TraceNum
          , SettlementNum
          , Amount
     FROM TXU_NPS_PASTELPORTLOG
     WHERE RetailStoreId = ?
     AND   TxDate2 = ?
     AND   SequenceNumber = ? ;
  </entry>

  <entry key="get-creditCompanyName">
     SELECT CompanyName
     FROM   RESMaster.dbo.PRM_CREDIT_COMPANY
     WHERE CompanyCode = ? ;
  </entry>

  <entry key="get-printerName">
    SELECT PrinterName
       FROM   RESMaster.dbo.MST_PRINTERINFO printer INNER JOIN RESMaster.dbo.MST_DEVICEINFO  device
    ON printer.StoreId = device.StoreId
    AND printer.PrinterId = device.PrinterId
    WHERE device.StoreId = ?
    AND device.TerminalId = ?
  </entry>

  <entry key="get-netprinterinfo">
    SELECT
      printer.IpAddress ipaddress,
      printer.PortNumTcp portnumtcp,
      printer.PortNumUdp portnumudp
         FROM
           RESMaster.dbo.MST_PRINTERINFO printer
         INNER JOIN
           RESMaster.dbo.MST_DEVICEINFO  device
    ON
      printer.StoreId = device.StoreId AND printer.PrinterId = device.PrinterId
    WHERE
      device.StoreId = ? AND device.TerminalId = ?
  </entry>

  <entry key="get-netprinterinfo-byprinterid">
    SELECT *
    FROM RESMaster.dbo.MST_PRINTERINFO
    WHERE StoreId = ?
    AND
    PrinterId = ?
  </entry>

  <entry key="create-peripheraldeviceinfo">
    DECLARE 
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @DeviceName varchar(MAX),
      @PrinterId varchar(MAX),
      @TillId varchar(MAX),
      @LinkPosTerminalId varchar(MAX),
      @SendLogFile int,
      @SaveLogFile int,
      @AutoUpload int,
      @LinkQueueBuster varchar(MAX),
      @LinkAuthorization varchar(MAX),
      @LinkSignature varchar(20),
      @LastTxId numeric(5, 0),
      @LastSuspendTxId numeric(5, 0),
      @EjSequence numeric(5, 0),
      @UpdAppId varchar(MAX),
      @UpdOpeCode varchar(MAX),
      @CompanyId varchar(MAX),
      @Training int,
      @InsAppId varchar(MAX),
      @InsOpeCode varchar(MAX),
      @AttributeId varchar(MAX)

      SET @StoreId = ?
      SET @TerminalId = ?
      SET @PrinterId = ?
      SET @TillId = ?
      SET @LinkPosTerminalId = ?
      SET @SendLogFile = ?
      SET @SaveLogFile = ?
      SET @AutoUpload = ?
      SET @LinkQueueBuster = ?
      SET @LinkAuthorization = ?
      SET @LinkSignature = ?
      SET @LastTxId = ?
      SET @LastSuspendTxId = ?
      SET @EjSequence = ?
      SET @DeviceName = ?
      SET @UpdAppId = ?
      SET @UpdOpeCode = ?
      SET @CompanyId = ?
      SET @Training = ?
      SET @InsAppId = ?
      SET @InsOpeCode = ?
      SET @AttributeId = ?

    INSERT INTO 
      RESMaster.dbo.MST_DEVICEINFO(
        StoreId
        ,TerminalId
        ,PrinterId
        ,TillId
        ,LinkPosTerminalId
        ,SendLogFile
        ,SaveLogFile
        ,AutoUpload
        ,LinkQueueBuster
        ,LinkAuthorization
        ,LinkSignature
        ,LastTxId
        ,LastSuspendTxId
        ,EjSequence
        ,DeviceName
        ,Status
        ,UpdDate
        ,UpdAppId
        ,UpdOpeCode
        ,CompanyId
        ,Training
        ,UpdCount
        ,InsDate
        ,InsAppId
        ,InsOpeCode
        ,DeleteFlag
        ,AttributeId
      )
    VALUES(
      @StoreId,
      @TerminalId,
      @PrinterId,
      @TillId,
      CASE
        WHEN len(@LinkPosTerminalId) > 0 
        THEN @LinkPosTerminalId
        ELSE null
      END,
      CASE
        WHEN @SendLogFile > 0 
        THEN @SendLogFile
        ELSE 3
      END,
      CASE
        WHEN @SaveLogFile > 0 
        THEN @SaveLogFile
        ELSE 40
      END,
      CASE
        WHEN @AutoUpload > 0 
        THEN 1
        ELSE 0
      END,
      CASE
        WHEN len(@LinkQueueBuster) > 0 
        THEN @LinkQueueBuster
        ELSE null
      END,
      CASE
        WHEN len(@LinkAuthorization) > 0 
        THEN @LinkAuthorization
        ELSE null
      END,
      CASE
        WHEN len(@LinkSignature) > 0 
        THEN @LinkSignature
        ELSE null
      END,
      CASE
        WHEN len(@LastTxId) > 0 
        THEN @LastTxId
        ELSE null
      END,
      CASE
        WHEN len(@LastSuspendTxId) > 0 
        THEN @LastSuspendTxId
        ELSE null
      END,
      CASE
        WHEN len(@EjSequence) > 0 
        THEN @EjSequence
        ELSE null
      END,
      CASE
        WHEN len(@DeviceName) > 0 
        THEN @DeviceName
        ELSE ''
      END,
      'Active',
      GETDATE(),
      @UpdAppId,
      @UpdOpeCode,
      @CompanyId,
      @Training,
      0,
      GETDATE(),
      @InsAppId,
      @InsOpeCode,
      0,
      @AttributeId);
  </entry>
  <!-- For Department Info for Item Details-->
  <entry key="get-dptDetails">
    DECLARE @dpt varchar(10), @StoreId varchar(MAX)
    SET @dpt = ?
    SET @StoreId = ?

    IF NOT EXISTS(SELECT Dpt FROM RESMaster.dbo.MST_DPTINFO WHERE Dpt = @dpt AND StoreId =
    @StoreId)
    SET @StoreId = '0'

    SELECT
      Dpt, DptName, DptKanaName, Category
    FROM RESMaster.dbo.MST_DPTINFO
    WHERE Dpt = @dpt AND StoreId = @StoreId
  </entry>

     <entry key = "get-logginginfo">
        SELECT * FROM TXL_NPS_TXLOG WITH (ROWLOCK)
        WHERE RetailStoreId = ? AND WorkstationId = ? AND SequenceNumber = ? AND PaymentSeq = ? AND Guid = ?;
    </entry>

    <entry key = "save-LoggingInfo">
        INSERT INTO TXL_NPS_TXLOG WITH (ROWLOCK)
          (RetailStoreId,
            WorkstationId,
            SequenceNumber,
            PaymentSeq,
            Guid,
            Brand,
            Service,
            Amount,
            TxDateTime,
            RwId,
            RwKind,
            TxType,
            XmlDocument)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, CAST(? AS datetime), ?, ?, ?, ?);
    </entry>

    <entry key = "get-SummarySelect">
                SELECT
                     [SalesAmount]
              ,[SalesCount]
              ,[VoidAmount]
              ,[VoidCount]
              ,[RefundAmount]
              ,[RefundCount]
              ,[CancelAmount]
              ,[CancelCount]
              ,[PosSalesAmount]
              ,[PosSalesCount]
              ,[PosVoidAmount]
              ,[PosVoidCount]
              ,[PosRefundAmount]
              ,[PosRefundCount]
              ,[PosCancelAmount]
              ,[PosCancelCount]

                FROM   TXU_NPS_PASTELPORTCREDITSUMMARY
                WITH (ROWLOCK)
                WHERE  STOREID = ?
                AND    TERMID = ?
                AND    FINISHDATE =  CAST('2001-01-01' as datetime)
                AND    FINISHPAYMENTSEQ = 99999
                AND    FINISHFLAG = 0;
    </entry>

    <entry key = "save-SummaryInsert">
                INSERT INTO    TXU_NPS_PASTELPORTCREDITSUMMARY WITH (ROWLOCK)
                    ( [RetailStoreId]
              ,[WorkstationId]
              ,[FinishDate]
              ,[FinishPaymentSeq]
              ,[FinishFlag]
              ,[SalesAmount]
              ,[SalesCount]
              ,[VoidAmount]
              ,[VoidCount]
              ,[RefundAmount]
              ,[RefundCount]
              ,[CancelAmount]
              ,[CancelCount]
              ,[PosSalesAmount]
              ,[PosSalesCount]
              ,[PosVoidAmount]
              ,[PosVoidCount]
              ,[PosRefundAmount]
              ,[PosRefundCount]
              ,[PosCancelAmount]
              ,[PosCancelCount])
                VALUES
                    (?, ?, CAST('20010101'as datetime), 99999,  0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    </entry>

    <entry key = "set-SummaryUpdateSales">
                    UPDATE TXU_NPS_PASTELPORTCREDITSUMMARY WITH (ROWLOCK)
                    SET    SalesAmount     =   SalesAmount     + ?,
                           SalesCount      =   SalesCount      + ?,
                           VoidAmount      =   VoidAmount      + ?,
                           VoidCount       =   VoidCount       + ?,
                           RefundAmount    =   RefundAmount    + ?,
                           RefundCount     =   RefundCount     + ?,
                           CancelAmount    =   CancelAmount    + ?,
                           CancelCount     =   CancelCount     + ?
                    WHERE  RetailStoreId = ?
                    AND    WorkstationId = ?
                    AND    FinishDate = CAST('20010101' AS datetime)
                    AND    FinishPaymentSeq = 99999
                    AND    FinishFlag = 0;
    </entry>

    <entry key = "set-SummaryUpdateInit">
                    UPDATE TXU_NPS_PASTELPORTCREDITSUMMARY WITH (ROWLOCK)
                    SET    FinishDate          =   CAST(? AS datetime),
                           FinishPaymentSeq    =   ?,
                           FinishFlag          =   9
                    WHERE  RetailStoreId = ?
                    AND    WorkstationId = ?
                    AND    FinishDate = CAST('20010101' AS datetime)
                    AND    FinishPaymentSeq = 99999
                    AND    FinishFlag = 0;
    </entry>

    <entry key = "set-SummaryUpdateFinish">
                    UPDATE TXU_NPS_PASTELPORTCREDITSUMMARY WITH (ROWLOCK)
                    SET    FinishDate          =   CAST(? AS datetime),
                           FinishPaymentSeq    =   ?,
                           FinishFlag          =   1,
                           PosSalesAmount      =   ?,
                           PosSalesCount       =   ?,
                           PosVoidAmount       =   ?,
                           PosVoidCount        =   ?,
                           PosRefundAmount     =   ?,
                           PosRefundCount      =   ?,
                           PosCancelAmount     =   ?,
                           PosCancelCount      =   ?
                    WHERE  RetailStoreId = ?
                    AND    WorkstationId = ?
                    AND    FinishDate = CAST('20010101' AS datetime)
                    AND    FinishPaymentSeq = 99999
                    AND    FinishFlag = 0;
    </entry>

    <entry key = "get-CreditLogSelect">
                SELECT

                   [RetailStoreId]
            ,[WorkstationId]
            ,[PaymentSeq]
            ,CONVERT(CHAR,TxDate,112)AS [TxDate]
            ,[SequenceNumber]
            ,[Brand]
            ,[Service]
            ,[TxType]
            ,[TxStatus]
            ,[CrCompanyCode]
            ,[RecvCompanyCode]
            ,[PaymentMethod]
            ,[Pan]
            ,[ExpDate]
            ,[Amount]
            ,[CaStatus]
            ,[CaErrorCode]
            ,[DcStatus]
            ,[DcErrorCode]
            ,[ApprovalCode]
            ,[TraceNum]
            ,[AlertFlag]
            ,[VoidFlag]
            ,[VoidCorpId]
            ,[VoidStoreId]
            ,[VoidTermId]
            ,[VoidPaymentSeq]
            ,[VoidTxId]
            ,CONVERT(CHAR,VoidTxDate,112)AS [VoidTxDate]
            ,[SettlementNum]
            ,[TxDate2]

                FROM   TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                WHERE  RetailStoreId     =   ?
                AND    WorkstationId      =   ?
                AND    PaymentSeq  =   ?
                AND    TxDate      =   CAST(? AS datetime) ;
    </entry>

    <entry key = "save-creditloginsert">
                INSERT INTO TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    (RetailStoreId,   WorkstationId,    PaymentSeq,
                    TxDate,       SequenceNumber,   Brand,
                    Service,      TxType,       CrCompanyCode,
                    RecvCompanyCode,  PaymentMethod,    Pan,
                    ExpDate,      Amount,
                    SettlementNum,    TxDate2)
                VALUES
                    (?,         ?,          ?,
                    CAST(? AS datetime), ?,         ?,
                    ?,          ?,          ?,
                    ?,          ?,          ?,
                    ?,          ?,
                    ?,          ?);
    </entry>

  <entry key = "set-CreditLogUpdateRca">
                  UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET    TxStatus        =   ?,
                           CaStatus        =   ?,
                           CaErrorCode     =   ?,
                           ApprovalCode    =   ?,
                           TraceNum        =   ?
                    WHERE  RetailStoreId   =   ?
                    AND    WorkstationId   =   ?
                    AND    PaymentSeq      =   ?
                    AND    TxDate          =   CAST(? AS datetime) ;
    </entry>

    <entry key = "set-CreditLogUpdateSdc">
                    UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET    TxType          =   ?
                    WHERE  RetailStoreId   =   ?
                    AND    WorkstationId   =   ?
                    AND    PaymentSeq      =   ?
                    AND    TxDate          =   CAST(? AS datetime) ;
    </entry>

    <entry key = "set-CreditLogUpdateRdc">
                    UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET    TxStatus        =   ?,
                           DcStatus        =   ?,
                           DcErrorCode     =   ?,
                           ApprovalCode    =   ?,
                           TraceNum        =   ?,
                           AlertFlag       =   ?
                    WHERE  RetailStoreId   =   ?
                    AND    WorkstationId   =   ?
                    AND    PaymentSeq      =   ?
                    AND    TxDate          =   CAST(? AS datetime) ;
    </entry>
    <entry key = "set-CreditLogUpdateVoid">
                    UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET    VoidFlag        =   ?,
                           VoidCorpId      =   ?,
                           VoidStoreId     =   ?,
                           VoidTermId      =   ?,
                           VoidPaymentSeq  =   ?,
                           VoidTxId        =   ?,get-SummarySelect
                           VoidTxDAte      =   CAST(? AS datetime)
                    WHERE  RetailStoreId   =   ?
                    AND    WorkstationId   =   ?
                    AND    PaymentSeq      =   ?
                    AND    TxDate          =   CAST(? AS datetime) ;
    </entry>

    <entry key="get-MaxServerPaymentseq">
                    SELECT SERVERPAYMENTSEQ
                    FROM V_TXL_SERVERPAYMENTSEQ
                    WHERE CORPID= ?
                    AND STOREID = ?
                    AND TERMID = ?
    </entry>
    <entry key="set-VoidPaymentseq">
                    UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET VoidPaymentSeq  =   ?
                    WHERE  RetailStoreId   =   ?
                    AND    WorkstationId   =   ?
                    AND    PaymentSeq      =   ?
                    AND    TxDate          =   CAST(? AS datetime) ;
    </entry>
    <entry key="set-DCstatus">
                    UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET     DcStatus  =   ?,
                            DcErrorCode = ?
                    WHERE   RetailStoreId   =   ?
                    AND    WorkstationId   =   ?
                    AND    PaymentSeq      =   ?
                    AND    TxDate          =   CAST(? AS datetime) ;
    </entry>

        <entry key="set-ServerPaymentseq">
                    UPDATE TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                    SET  ServerPaymentSeq  =   ?
                    WHERE  STOREID         =   ?
                    AND    TERMID          =   ?
                    AND    PAYMENTSEQ      =   ?
                    AND    TXDATE          =   CAST(? AS datetime) ;
    </entry>
    <entry key = "get-creditlogselectvoid">
                SELECT

           [RetailStoreId]
            ,[WorkstationId]
            ,[PaymentSeq]
            ,CONVERT(CHAR,TxDate,112)AS [TxDate]
            ,[SequenceNumber]
            ,[Brand]
            ,[Service]
            ,[TxType]
            ,[TxStatus]
            ,[CrCompanyCode]
            ,[RecvCompanyCode]
            ,[PaymentMethod]
            ,[Pan]
            ,[ExpDate]
            ,[Amount]
            ,[CaStatus]
            ,[CaErrorCode]
            ,[DcStatus]
            ,[DcErrorCode]
            ,[ApprovalCode]
            ,[TraceNum]
            ,[AlertFlag]
            ,[VoidFlag]
            ,[VoidCorpId]
            ,[VoidStoreId]
            ,[VoidTermId]
            ,[VoidPaymentSeq]
            ,[VoidTxId]
            ,CONVERT(CHAR,VoidTxDate,112)AS [VoidTxDate]
            ,[SettlementNum]
            ,[TxDate2]

             FROM   TXU_NPS_PASTELPORTLOG WITH (ROWLOCK)
                  WHERE  RetailStoreId     =   ?
                  AND    WorkstationId      =   ?
                  AND    SequenceNumber        =   ?
                  AND    TxDate      =   CAST(? AS datetime) ;
    </entry>

<!-- *************************  ENTRY KEY FOR DEVICE REGISTRATION  ************************* -->
  <entry key="delete-autdevice">
    DELETE FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    StoreId=? AND TerminalId=?
  </entry>
  <entry key="delete-autdevices">
    DELETE FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    TerminalId=?
  </entry>
  <entry key="save-device">
    DECLARE 
    @CompanyId varchar(12),
    @StoreId varchar(10),
    @TerminalId varchar(6),
    @Uuid varchar(50),
    @Udid varchar(50),
    @SignStatus int,
    @SignTId char(20),
    @SignActivationKey char(8)

  SET @CompanyId = ?
  SET @StoreId = ?
  SET @TerminalId = ?
  SET @Uuid = ?
  SET @Udid = ?
  SET @SignStatus = ?
  SET @SignTId = ?
  SET @SignActivationKey = ?
  INSERT INTO RESMaster.dbo.AUT_DEVICES
    (CompanyId, StoreId, TerminalId, Uuid, Udid, State, LastActiveTime, SignStatus, SignTid, SignActivationKey)
  VALUES
    (@CompanyId, @StoreId, @TerminalId, @Uuid, @Udid, 1, GETDATE(), @SignStatus, @SignTId, @SignActivationKey)
  </entry>
  <entry key="delete-device">
    DELETE FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
      StoreId=? AND TerminalId=?
  </entry>
  <entry key="delete-device-with-udid">
    DELETE FROM RESMaster.dbo.AUT_DEVICES
      WHERE Udid=?
  </entry>
  <entry key="select-device-by-storeId-terminalId">
    SELECT
      *
    FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
      StoreId = ? AND
      TerminalId = ?;
  </entry>
  <entry key="update-device-state">
    DECLARE
      @State int,
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @LastActiveTime datetime

    SET @State = ?
    SET @StoreId = ?
    SET @TerminalId = ?
    SET @LastActiveTime = ?

    if(@State = 1)
      UPDATE
        RESMaster.dbo.AUT_DEVICES
      SET
        State = @State,
        LastActiveTime = @LastActiveTime
      WHERE
        StoreId = @StoreId AND
        TerminalId = @TerminalId
    else
      UPDATE
        RESMaster.dbo.AUT_DEVICES
      SET
        State = @State
      WHERE
        StoreId = @StoreId AND
        TerminalId = @TerminalId
  </entry>
  <entry key="update-device-state-by-terminalid">
    DECLARE @State int, @StoreId
    varchar(MAX), @TerminalId varchar(MAX),
        @LastActiveTime datetime
    SET @State=?
    SET @TerminalId=?
    SET @LastActiveTime=?

    if(@state = 1)
      UPDATE RESMaster.dbo.AUT_DEVICES SET State=@State , LastActiveTime= @LastActiveTime
    WHERE TerminalId=@TerminalId
    else
    UPDATE RESMaster.dbo.AUT_DEVICES SET State=@State WHERE TerminalId=@TerminalId
  </entry>
  <entry key="select-device-by-terminalid">
    SELECT * FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    TerminalId=?
  </entry>
  <entry key="select-device-strict">
    SELECT *
      FROM
        RESMaster.dbo.AUT_DEVICES
      WHERE
    CompanyId=? AND StoreId=? AND TerminalId=?
  </entry>
  <entry key="select-device-by-uuid-udid">
      SELECT *
      FROM RESMaster.dbo.AUT_DEVICES
      WHERE Uuid = ?
      AND   Udid = ?
  </entry>
  <entry key="update-device-uuidtoken">
    UPDATE
      RESMaster.dbo.AUT_DEVICES
    SET
      Uuid=? , DeviceName=?
    WHERE
    StoreId=? AND TerminalId=?
  </entry>
  <entry key="select-device-terminalid">
    SELECT TerminalId
      FROM
        RESMaster.dbo.AUT_DEVICES
      WHERE
    TerminalId=?
  </entry>
  <entry key="select-passcode-url-by-corpid">
    SELECT
      PassCode,
      Url
    FROM
      RESMaster.dbo.MST_CORP_URL
    WHERE
      CorpId=?
  </entry>
  <entry key="select-passcode-permission-from-corp-store">
    SELECT
      PassCode,
      Permission,
      StoreName
    FROM
      RESMaster.dbo.MST_CORP_STORE
    WHERE
      StoreId = ? AND CompanyId = ?
  </entry>
  <entry key="select-url-by-corpid">
    SELECT
      Url
    FROM
      RESMaster.dbo.MST_CORP_URL
    WHERE
      CorpId=?
  </entry>
  <entry key="select-corpname-by-corpid">
    SELECT
      CorpName
    FROM
      RESMaster.dbo.MST_CORPINFO
    WHERE
      CorpId=?
  </entry>
  <entry key="select-storename-by-corpid-storeid">
    SELECT
      StoreName
    FROM
      RESMaster.dbo.MST_CORP_STORE
    WHERE
    StoreId=?
  </entry>
  <entry key="select-devicename-by-corpid-storeid-terminalid">
    SELECT
      DeviceName
    FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    StoreId=? AND TerminalId=?
  </entry>
  <entry key="update-devicename-by-corpid-storeid-terminalid">
    UPDATE
      RESMaster.dbo.AUT_DEVICES
    SET
      DeviceName=?
    WHERE
    StoreId=? AND TerminalId=?
  </entry>
  <entry key="update-device-signature-activation-status">
    UPDATE
      RESMaster.dbo.AUT_DEVICES
    SET
      SignStatus=?,
      SignTid=?,
      SignActivationKey=?
    WHERE
    StoreId=? AND TerminalId=? AND Udid=? AND Uuid=?
  </entry>
  <entry key="get-signdetails">
    SELECT
      SignStatus,
      SignTid,
      SignActivationKey
    FROM
      RESMaster.dbo.AUT_DEVICES
    WHERE
    CompanyId=? AND StoreId=? AND TerminalId=? AND Udid=? AND Uuid=?
  </entry>
  <entry key="get-stamp-tax-path">
      SELECT  store.StampTaxFilePath storedoctax,
           store.ElectroFilePath storelogo
      FROM    RESMaster.dbo.MST_STOREINFO store
      WHERE  store.StoreId = ?
  </entry>

<!-- Entry key for QueueBuster implementation -->
  <entry key="save-transaction-to-queue">
    DECLARE
      @CompanyId varchar(12),
      @StoreId varchar(MAX),
      @TerminalId varchar(MAX),
      @SequenceNumber varchar(MAX),
      @BusinessDayDate varchar(MAX),
      @TrainingFlag varchar(MAX),
      @Queue varchar(MAX),
      @Xml varchar(MAX)

  SET @CompanyId = ?
    SET @StoreId = ?
    SET @TerminalId = ?
    SET @SequenceNumber = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @Queue = ?
    SET @Xml = ?

        INSERT INTO RESTransaction.dbo.TXL_INPROGRESS_ITEM
           (CompanyId
           ,RetailStoreId
           ,WorkstationId
           ,SequenceNumber
           ,BusinessDayDate
           ,TrainingFlag
           ,PosTermId
           ,Queue
           ,Status
           ,Tx)
         VALUES
           (@CompanyId
           ,@StoreId
           ,@TerminalId
           ,@SequenceNumber
           ,@BusinessDayDate
           ,@TrainingFlag
           ,null
           ,@Queue
           ,0
           ,@Xml)
  </entry>
  <entry key="save-forward-poslog">
    DECLARE
      @CompanyId varchar(12),
      @RetailStoreId varchar(MAX),
      @WorkstationId varchar(MAX),
      @SequenceNumber varchar(MAX),
      @Queue varchar(MAX),
      @BusinessDayDate varchar(MAX),
      @TrainingFlag NUMERIC(1,0),
      @BusinessDateTime varchar(MAX),
      @OperatorId varchar(MAX),
      @SalesTotalAmt NUMERIC(15,0),
      @PosTermId varchar(MAX),
      @Status varchar(MAX),
      @Tx varchar(MAX),
      @LayawayFlag NUMERIC(1,0)

    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @WorkstationId = ?
    SET @SequenceNumber = ?
    SET @Queue = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @BusinessDateTime = ?
    SET @OperatorId = ?
    SET @SalesTotalAmt = ?
    SET @PosTermId = ?
    SET @Status = ?
    SET @Tx = ?
    SET @LayawayFlag = ?
        INSERT INTO TXL_FORWARD_ITEM
           (CompanyId
           ,RetailStoreId
           ,WorkstationId
           ,SequenceNumber
           ,Queue
           ,BusinessDayDate
           ,TrainingFlag
           ,BusinessDateTime
           ,OperatorId
           ,SalesTotalAmt
           ,PosTermId
           ,Status
           ,Tx
           ,LayawayFlag)
         VALUES
           (@CompanyId
           ,@RetailStoreId
           ,@WorkstationId
           ,@SequenceNumber
           ,@Queue
           ,@BusinessDayDate
           ,@TrainingFlag
           ,@BusinessDateTime
           ,@OperatorId
           ,@SalesTotalAmt
           ,@PosTermId
           ,@Status
           ,@Tx
           ,@LayawayFlag)
  </entry>
  <entry key="get-forward-list">
    DECLARE
        @CompanyId VARCHAR (12),
        @RetailStoreId VARCHAR (MAX),
        @TrainingFlag VARCHAR (MAX),
        @LayawayFlag VARCHAR (MAX)
    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @TrainingFlag = ? 
    SET @LayawayFlag = ? 
    SELECT
        A.CompanyId,
        A.RetailStoreId,
        A.WorkstationId,
        A.SequenceNumber,
        A.Queue,
        A.BusinessDayDate,
        A.TrainingFlag,
        A.BusinessDateTime,
        A.OperatorId,
        ISNULL(B.OpeName, B.OpeKanaName) AS OperatorName,
        A.SalesTotalAmt,
        A.Status
    FROM
        RESTransaction.dbo.TXL_FORWARD_ITEM A
    LEFT JOIN RESMaster.dbo.MST_EMPINFO B ON A.CompanyId = B.CompanyId
    AND A.OperatorId = B.EmpCode
    WHERE
        A.CompanyId = @CompanyId
    AND A.RetailStoreId = @RetailStoreId
    AND A.TrainingFlag = @TrainingFlag
    AND A.Status = 0
    AND A.LayawayFlag = @LayawayFlag
    ORDER BY A.BusinessDayDate DESC, A.BusinessDateTime DESC
  </entry>
  <entry key="get-forward-items-posLog">
    DECLARE
      @CompanyId varchar(12),
      @RetailStoreId varchar(MAX),
      @SequenceNumber VARCHAR(MAX),
      @Queue VARCHAR(MAX),
      @BusinessDayDate VARCHAR(MAX),
      @TrainingFlag varchar(MAX),
      @WorkstationId varchar(MAX)
    
    SET @CompanyId = ?
    SET @RetailStoreId = ?
    SET @SequenceNumber = ?
    SET @Queue = ?
    SET @BusinessDayDate = ?
    SET @TrainingFlag = ?
    SET @WorkstationId = ?
    
    SELECT
      Status,
      Tx
    FROM TXL_FORWARD_ITEM
    WHERE CompanyId = @CompanyId
      AND RetailStoreId = @RetailStoreId
      AND SequenceNumber = @SequenceNumber
      AND Queue = @Queue
      AND BusinessDayDate = @BusinessDayDate
      AND TrainingFlag = @TrainingFlag
      AND WorkstationId = @WorkstationId
  </entry>
  <entry key="update-forward-status">
        UPDATE TXL_FORWARD_ITEM
        SET Status = ?
        WHERE
            CompanyId = ?
        AND RetailStoreId = ?
        AND WorkstationId = ?
        AND SequenceNumber = ?
        AND Queue = ?
        AND BusinessDayDate = ?
        AND TrainingFlag = ?
  </entry>
  <entry key="update-transaction-status-in-queue">
    UPDATE RESTransaction.dbo.TXL_INPROGRESS_ITEM SET Status = ?
    WHERE RetailStoreId = ? AND WorkstationId = ? AND SequenceNumber = ? AND BusinessDayDate = ? AND Queue = 0
  </entry>

  <entry key="select-transaction-from-queue">
    SELECT Tx, Status
    FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      CompanyId = ? AND
      RetailStoreId = ? AND
      Queue = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      TrainingFlag = ?
  </entry>

  <entry key="select-transaction-from-queue-updlock">
    DECLARE
      @companyid varchar(MAX),
      @storeid varchar(MAX),
      @queue varchar(MAX),
      @termid varchar(MAX),
      @txid NUMERIC(5,0),
      @txdate DATE,
      @trainingflag NUMERIC(1,0)

    SET @companyid = ?;
    SET @storeid = ?;
    SET @queue = ?;
    SET @termid = ?;
    SET @txid = ?;
    SET @txdate = ?;
    SET @trainingflag = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      Tx
    FROM
      RESTransaction.dbo.TXL_INPROGRESS_ITEM WITH (UPDLOCK)
    WHERE
      CompanyId = @companyid AND
      RetailStoreId = @storeid AND
      Queue = @queue AND
      WorkstationId = @termid AND
      SequenceNumber = @txid AND
      BusinessDayDate = @txdate AND
      TrainingFlag = @trainingflag AND
      Status = 0

    UPDATE
      RESTransaction.dbo.TXL_INPROGRESS_ITEM
    SET
      Status = 1
    WHERE
      CompanyId = @companyid AND
      RetailStoreId = @storeid AND
      Queue = @queue AND
      WorkstationId = @termid AND
      SequenceNumber = @txid AND
      BusinessDayDate = @txdate AND
      TrainingFlag = @trainingflag AND
      Status = 0
    COMMIT TRAN
  </entry>

  <entry key="select-transaction-from-queue-disregard-postermid">
    SELECT TOP 1 Tx, BusinessDayDate, Status
    FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ? AND
      Queue = 0
  </entry>

  <entry key="get-queued-transaction-status">
    SELECT Status
    FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      RetailStoreId = ? AND
      WorkstationId = ? AND
      SequenceNumber = ? AND
      BusinessDayDate = ?
  </entry>

  <entry key="select-oldest-transaction-from-queue">
    DECLARE
      @storeid varchar(MAX),
      @queue char(4)

    SET @storeid=?
    SET @queue=?

    SELECT TOP 1
      Tx,
      BusinessDayDate,
      SequenceNumber,
      WorkstationId
    FROM
      RESTransaction.dbo.TXL_INPROGRESS_ITEM
    WHERE
      RetailStoreId = @storeid AND Queue = @queue AND Status = 0
    ORDER BY BusinessDayDate, SequenceNumber ASC
  </entry>

  <entry key="select-all-transaction-from-queue">
    SELECT Tx, WorkstationId, RTRIM(LTRIM(SequenceNumber)) as SequenceNumber, BusinessDayDate
      FROM RESTransaction.dbo.TXL_INPROGRESS_ITEM
      WHERE
        CompanyId = ? AND
        RetailStoreId = ? AND
        WorkstationId = ? AND
      Queue = ? AND
      TrainingFlag = ? AND
      Status = 0
      ORDER BY BusinessDayDate ASC
  </entry>

  <entry key="update-status-from-queue">
    UPDATE
      RESTransaction.dbo.TXL_INPROGRESS_ITEM
       SET
         Status = ?
    WHERE
      RetailStoreId = ? AND
        WorkstationId = ? AND
        SequenceNumber = ? AND
        BusinessDayDate = ? AND
        Queue = ?
  </entry>
  <entry key="select-operator-queue">
    SELECT
      OperatorName
    FROM
      RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo=? AND
      CompanyId = ?
  </entry>
  <!-- Signature Request -->
  <entry key="add-signature-request">
      INSERT INTO TXL_EXTERNAL_CA_REQ
        (RetailStoreId,
        WorkstationId,
        BusinessDayDate,
        SequenceNumber,
        Type,
        TermId,
        Status,
        Pan,
        Amount,
        CafisTraceNum,
        CaInfoRaw)
      VALUES
        (?,?,?,?,?,?,3,?,?,0,?)
  </entry>

  <entry key="get-signature-request-list">
      SELECT
        SequenceNumber, WorkstationId, Amount
      FROM
        TXL_EXTERNAL_CA_REQ
      WHERE
        RetailStoreId = ? AND
        TermId = ? AND
        BusinessDayDate = ? AND
        Status = 3
  </entry>

  <entry key="get-signature-request">
      SELECT
        CaInfoRaw, Status
      FROM
        TXL_EXTERNAL_CA_REQ
      WHERE
        RetailStoreId = ? AND
        TermId = ? AND
        WorkstationId = ? AND
        SequenceNumber = ? AND
        BusinessDayDate = ?
  </entry>

  <entry key="update-signature-request">
      UPDATE
        TXL_EXTERNAL_CA_REQ
      SET
        Status = ?
      WHERE
        RetailStoreId = ? AND
        TermId = ? AND
        WorkstationId = ? AND
        SequenceNumber = ? AND
        BusinessDayDate = ?
  </entry>

  <!-- Entry key for System Settings Implementation -->
  <entry key="get-current-date-time">
       SELECT substring( replace(replace( replace(replace( convert(varchar,GETDATE(),121),' ',''),'-',''),':',''),'.',''), 1, 14 ) AS CurrentDateTime
    </entry>

  <entry key="insert-date-setting">
    INSERT INTO RESMaster.dbo.MST_BIZDAY
       (TodayDate, SwitchTime, Skip)
       VALUES (?, ?, ?)
  </entry>

  <entry key="update-todaydate-setting">
    UPDATE RESMaster.dbo.MST_BIZDAY
    SET TodayDate = ?
  </entry>

  <entry key="update-switchtime-setting">
    UPDATE RESMaster.dbo.MST_BIZDAY
    SET SwitchTime = ?
  </entry>

  <entry key="update-skips-setting">
    UPDATE RESMaster.dbo.MST_BIZDAY
    SET Skip = ?
  </entry>
  <entry key="select-date-setting">
    SELECT DISTINCT TOP 1
      Storeid,
      TodayDate,
      SwitchTime,
      Skip
    FROM 
      RESMaster.dbo.MST_BIZDAY
    WHERE 
        CompanyId = ? AND StoreId in (?, '0')
    ORDER BY
      StoreId DESC
  </entry>

  <!-- *************************  ENTRY KEY FOR DEVICE LOG TABLE ************************* -->
    <entry key="save-DeviceLogFile">
    DECLARE @newDeviceLog Table(
      Id uniqueidentifier,
      Udid varchar(50),
      LogDate date,
      UploadtTime datetime,
      LastUpdated datetime);
    INSERT INTO DEVICE_LOG (
      Udid,
      LogDate,
      LogFile)
    OUTPUT
      INSERTED.Id,
      INSERTED.Udid,
      INSERTED.LogDate,
      INSERTED.UploadTime,
      INSERTED.LastUpdated
    INTO @newDeviceLog
    VALUES (?, ?, ?);
    SELECT * FROM @newDeviceLog;
  </entry>
  <entry key="update-DeviceLogFile">
    DECLARE @updateDeviceLog Table(
      Id uniqueidentifier,
      Udid varchar(50),
      LogDate date,
      UploadtTime datetime,
      LastUpdated datetime);
    UPDATE DEVICE_LOG
    SET
      LastUpdated = GETDATE(),
      LogFile = ?
    OUTPUT
      INSERTED.Id,
      INSERTED.Udid,
      INSERTED.LogDate,
      INSERTED.UploadTime,
      INSERTED.LastUpdated
      INTO @updateDeviceLog
    WHERE Id = ? ;
    SELECT * FROM @updateDeviceLog;
  </entry>
  <entry key="get-DeviceLogs">
    SET NOCOUNT ON;
    WITH tempTable as (
      SELECT
        ROW_NUMBER() OVER (ORDER BY LogDate DESC) AS RowNumber,
        Id,
        Udid,
        LogDate,
        UploaTtime,
        LastUpdated
      FROM DEVICE_LOG
      WHERE
        Udid = ?
    )
    SELECT *
    FROM tempTable
    WHERE
      RowNumber
      BETWEEN ? AND ?;
  </entry>

  <!-- *************************  ENTRY KEY FOR STORE TABLE MAINTENANCE ************************* -->
  <entry key="get-store">
    SELECT
      *
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      StoreId=?
  </entry>
    <entry key="get-store-bystoreid">
      SELECT
      StoreId, StoreName, StoreAddr, StoreTel, StoreUrl, SalesSpaceName, EventName, Ads, ElectroFilePath, StampTaxFilePath
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      StoreId=? and Status = 'Active'
    </entry>

    <entry key="create-store">
     INSERT INTO RESMaster.dbo.MST_STOREINFO(
       StoreId,
       StoreName,
       StoreAddr,
       StoreTel,
       StoreUrl,
       SalesSpaceName,
       EventName,
       Ads,
       ElectroFilePath,
       StampTaxFilePath,
       InsDate,
       UpdDate,
       Status,
       UpdAppId,
       UpdOpeCode)
   OUTPUT INSERTED.StoreId, INSERTED.StoreName
   VALUES(?,?,?,?,?,?,?,?,?,?,GETDATE(),GETDATE(),'Active',?,?);

    </entry>

    <entry key="delete-store">
    UPDATE
      RESMaster.dbo.MST_STOREINFO
    SET
      UpdAppId=?,
      UpdOpeCode=?,
      UpdDate=GETDATE(),
      Status = 'Deleted'
    WHERE
      StoreId = ?
  </entry>

    <entry key="get-store-list">
      SELECT
        StoreId, StoreName, StoreAddr, StoreTel
      FROM
        RESMaster.dbo.MST_STOREINFO
      WHERE
        Status = 'Active'
      ORDER BY
        StoreId
      ASC
    </entry>

    <entry key="get-store-list-with-limit">
      SELECT TOP (?)
        StoreId, StoreName, StoreAddr, StoreTel
      FROM
        RESMaster.dbo.MST_STOREINFO
      WHERE
        Status = 'Active'
      ORDER BY
        StoreId
      ASC
    </entry>

    <entry key="get-store-list-by-id-prefix">
      SELECT TOP(?)
        StoreId, StoreName, StoreAddr, StoreTel
      FROM
        RESMaster.dbo.MST_STOREINFO
      WHERE
        StoreId like ? + '%' and Status = 'Active'
      ORDER BY
      StoreId
      ASC
    </entry>

    <entry key="get-store-list-by-name">
      SELECT TOP(?)
        StoreId, StoreName, StoreAddr, StoreTel
      FROM
        RESMaster.dbo.MST_STOREINFO
      WHERE
        LOWER(StoreName) like LOWER('%' + ? + '%') and Status = 'Active'
      ORDER BY
        StoreName
      ASC
    </entry>

  <entry key="get-stores">
    DECLARE
      @companyId varchar(MAX),
      @storeId varchar(MAX),
      @storeName varchar(MAX),
      @limit int

    SET @companyId = NULLIF(?, '')
    SET @storeId = NULLIF(?, '')
    SET @storeName = NULLIF(?, '')
    SET @limit = ?

    SET @limit = (CASE
      WHEN (@limit > -1)
        THEN @limit
        ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_STOREINFO)
      END)

    SELECT TOP(@limit) *
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      CompanyId = COALESCE(@companyId, CompanyId) AND
      StoreId = COALESCE(@storeId, StoreId) AND
      LOWER(StoreName) = LOWER(COALESCE(@storeName, StoreName)) AND
      Status = 'Active'
      ORDER BY StoreName ASC
  </entry>

  <entry key="update-store">
    DECLARE @storeid varchar(MAX),
        @storename varchar(MAX),
        @storeaddr varchar(MAX),
        @storetel varchar(MAX),
        @storeurl varchar(MAX),
        @salesspacename varchar(MAX),
        @eventname varchar(MAX),
        @ads varchar(MAX),
        @electrofilepath varchar(MAX),
        @stamptaxfilepath varchar(MAX),
        @upddate datetime,
        @updappid varchar(MAX),
        @updopecode varchar(MAX)

    SET @storeid = ?
    SET @storename = ?
    SET @storeaddr = ?
    SET @storetel = ?
    SET @storeurl = ?
    SET @salesspacename = ?
    SET @eventname = ?
    SET @ads = ?
    SET @electrofilepath = ?
    SET @stamptaxfilepath = ?
    SET @upddate = GETDATE()
    SET @updappid = ?
    SET @updopecode = ?

    UPDATE RESMaster.dbo.MST_STOREINFO
      SET StoreId=
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,
        StoreName=
        CASE
          WHEN len(@storename) > 0 THEN @storename
          ELSE StoreName
        END,
        StoreAddr=
        CASE
          WHEN (len(@storeaddr) > 0 OR @storeaddr='') THEN @storeaddr
          ELSE StoreAddr
        END,
        StoreTel=
        CASE
          WHEN (len(@storetel) > 0 OR @storetel='')THEN @storetel
          ELSE StoreTel
        END,
        StoreUrl=
        CASE
          WHEN (len(@storeurl) > 0 OR @storeurl='')THEN @storeurl
          ELSE StoreUrl
        END,
        SalesSpaceName=
        CASE
          WHEN (len(@salesspacename) > 0 OR @salesspacename='')THEN @salesspacename
          ELSE SalesSpaceName
        END,
        EventName=
        CASE
          WHEN (len(@eventname) > 0 OR @eventname='')THEN @eventname
          ELSE EventName
        END,
        Ads=
        CASE
          WHEN (len(@ads) > 0 OR @ads='')THEN @ads
          ELSE Ads
        END,
        ElectroFilePath=
        CASE
          WHEN (len(@electrofilepath) > 0 OR @electrofilepath='')THEN @electrofilepath
          ELSE ElectroFilePath
        END,
        StampTaxFilePath=
        CASE
          WHEN (len(@stamptaxfilepath) > 0 OR @stamptaxfilepath='')THEN @stamptaxfilepath
          ELSE StampTaxFilePath
        END,
        UpdDate = @upddate,
        UpdAppId = @updappid,
        UpdOpeCode = @updopecode,
        Status = 'Active'

          OUTPUT INSERTED.StoreId, INSERTED.StoreName, INSERTED.StoreAddr,
             INSERTED.StoreTel, INSERTED.StoreUrl, INSERTED.SalesSpaceName,
             INSERTED.EventName, INSERTED.Ads, INSERTED.ElectroFilePath,
             INSERTED.StampTaxFilePath, INSERTED.UpdDate
       WHERE
           StoreId=?
  </entry>

    <entry key="get-till-info">
      SELECT
      StoreId, TillId, BusinessDayDate, SodFlag, EodFlag
    FROM
      RESMaster.dbo.MST_TILLIDINFO
    WHERE
      StoreId=? AND TillId=?
    </entry>

    <entry key="create-till-info">
      INSERT INTO RESMaster.dbo.MST_TILLIDINFO(
         StoreId,
         TillId,
         BusinessDayDate,
         SodFlag,
         EodFlag,
         InsDate,
         UpdDate,
         UpdAppId,
         UpdOpeCode)
     VALUES(?,?,?,?,?,GETDATE(),GETDATE(),?,?);
    </entry>

  <entry key="select-till-updlock">
    DECLARE
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @businessdaydate DATE,
      @sodflag tinyint,
      @eodflag tinyint

    SET @storeid = ?;
    SET @tillid = ?;
    SET @businessdaydate = ?;
    SET @sodflag = ?;
    SET @eodflag = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN

    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
       SodFlag = @sodflag
    OUTPUT
       INSERTED.StoreId,  INSERTED.TillId,  INSERTED.BusinessDayDate,  INSERTED.SodFlag,  INSERTED.EodFlag
    WHERE
       StoreId = @storeid AND
       TillId = @tillid AND
       BusinessDayDate = @businessdaydate AND
       EodFlag = @eodflag

    COMMIT TRAN
  </entry>

  <entry key="fetch-one-till">
    SELECT
    CompanyId, StoreId, TillId, TerminalId,
    BusinessDayDate, SodFlag, EodFlag,
    DeleteFlag, DelDate, DelAppId, DelOpeCode,
    InsDate, InsAppId, InsOpeCode,
    UpdCount, UpdDate, UpdAppId, UpdOpeCode
    FROM
    RESMaster.dbo.MST_TILLIDINFO
    WHERE
    CompanyId = ? AND StoreId= ? AND TillId = ?
  </entry>

  <entry key="update-till-operation-flag">
    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
      TerminalId = ?,
      SodFlag = ?,
      EodFlag = ?,
      BusinessDayDate = ?,
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
      CompanyId = ? AND
      StoreId = ? AND
      TillId = ? AND
      SodFlag = ? AND
      EodFlag = ?
  </entry>

  <entry key="update-sod-till-updlock">
    DECLARE
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @terminalid varchar(MAX),
      @sodflag tinyint,
      @updappid varchar(MAX),
      @updopecode varchar(MAX),
      @sodflagtochange tinyint

    SET @storeid = ?;
    SET @tillid = ?;
    SET @terminalid = ?;
    SET @sodflag = ?;
    SET @updappid = ?;
    SET @updopecode = ?;
    SET @sodflagtochange = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      StoreId, TillId
    FROM
      RESMaster.dbo.MST_TILLIDINFO(UPDLOCK)
    WHERE
      StoreId = @storeid AND
       TillId = @tillid AND
       SodFlag = @sodflagtochange

    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
      TerminalId = @terminalid,
       SodFlag = @sodflag,
       UpdDate = GETDATE(),
       UpdAppId = @updappid,
       UpdOpeCode = @updopecode
    WHERE
       StoreId = @storeid AND
       TillId = @tillid AND
       SodFlag = @sodflagtochange
    COMMIT TRAN
  </entry>
    
    <entry key="update-eod-till-updlock">
        DECLARE 
            @storeid varchar(MAX), 
            @tillid varchar(MAX), 
            @terminalid varchar(MAX),
            @eodflag tinyint, 
            @updappid varchar(MAX),
            @updopecode varchar(MAX),
            @eodflagtochange tinyint
            
        SET @storeid = ?;
        SET @tillid = ?;
        SET @terminalid = ?;
        SET @eodflag = ?;   
        SET @updappid = ?;
        SET @updopecode = ?;
        SET @eodflagtochange = ?;
        
        SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
        
        BEGIN TRAN          
        SELECT 
            StoreId, TillId
        FROM
            RESMaster.dbo.MST_TILLIDINFO(UPDLOCK)
        WHERE
            StoreId = @storeid AND 
            TillId = @tillid AND
            EodFlag = @eodflagtochange
                
        UPDATE 
            RESMaster.dbo.MST_TILLIDINFO 
        SET 
            TerminalId = @terminalid,
            EodFlag = @eodflag,
            UpdDate = GETDATE(),
            UpdAppId = @updappid,
            UpdOpeCode = @updopecode
        WHERE 
            StoreId = @storeid AND 
            TillId = @tillid AND
            EodFlag = @eodflagtochange
        COMMIT TRAN
    </entry>
  <entry key="update-previous-amount">
    DECLARE
      @companyid varchar(MAX),
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @terminalid tinyint,
      @amount numeric(15,0),
      @operatorid varchar(MAX),
      @businessdate date
    
    SET @companyid = ?;
    SET @storeid = ?;
    SET @tillid = ?;
    SET @terminalid = ?;
    SET @amount = ?;
    SET @businessdate = ?;
    SET @operatorid = ?;
    
     IF EXISTS (SELECT StoreId FROM RESTransaction.dbo.TXL_SOD
        WHERE CompanyId = @companyid and StoreId = @storeid)
            UPDATE
                RESTransaction.dbo.TXL_SOD
            SET
              Amount = @amount,
              OperatorId = @operatorid,
              TerminalId = @terminalid,
              TillId = @tillid,
              BusinessDate = @businessdate,
              UpdDate = GETDATE()

            WHERE
              CompanyId = @companyid and StoreId = @storeid
     ELSE
      INSERT INTO RESTransaction.dbo.TXL_SOD (CompanyId, StoreId, TerminalId, OperatorId, TillId, Amount, BusinessDate, CreatedDate, UpdDate)
      VALUES
      (@companyid, @storeid, @terminalid, @operatorid, @tillid, @amount, @businessdate, GETDATE(), GETDATE()) 
  </entry>
  
  <entry key="update-till-on-journ-updlock">
    DECLARE
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @sodflagtochange tinyint,
      @sodflag tinyint,
      @eodflagtochange tinyint,
      @eodflag tinyint,
      @date date,
      @operatorid varchar(MAX),
      @companyid varchar(MAX)

    SET @storeid = ?;
    SET @tillid = ?;
    SET @sodflagtochange = ?;
    SET @sodflag = ?;
    SET @eodflagtochange = ?;
    SET @eodflag = ?;
    SET @date = ?;
    SET @operatorid = ?;
    SET @companyid = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      StoreId, TillId
    FROM
      RESMaster.dbo.MST_TILLIDINFO(UPDLOCK)
    WHERE
       CompanyId = @companyid AND
       StoreId = @storeid AND
       TillId = @tillid AND
       SodFlag = @sodflagtochange AND
       EodFlag = @eodflagtochange

    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
       SodFlag = @sodflag,
       EodFlag = @eodflag,
       BusinessDayDate = @date,
       UpdOpeCode = @operatorid
    WHERE
       CompanyId = @companyid AND
       StoreId = @storeid AND
       TillId = @tillid AND
       SodFlag = @sodflagtochange AND
       EodFlag = @eodflagtochange
    COMMIT TRAN
  </entry>
  
  <entry key="update-till-on-journ-updlock-ent">
    DECLARE
      @storeid varchar(MAX),
      @tillid varchar(MAX),
      @sodflagtochange tinyint,
      @sodflag tinyint,
      @eodflagtochange tinyint,
      @eodflag tinyint,
      @date date,
      @operatorid varchar(MAX),
      @companyid varchar(MAX)

    SET @storeid = ?;
    SET @tillid = ?;
    SET @sodflagtochange = ?;
    SET @sodflag = ?;
    SET @eodflagtochange = ?;
    SET @eodflag = ?;
    SET @date = ?;
    SET @operatorid = ?;
    SET @companyid = ?;

    SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;

    BEGIN TRAN
    SELECT
      StoreId, TillId
    FROM
      RESMaster.dbo.MST_TILLIDINFO(UPDLOCK)
    WHERE
      CompanyId = @companyid AND
      StoreId = @storeid AND
      TillId = @tillid

    UPDATE
      RESMaster.dbo.MST_TILLIDINFO
    SET
       SodFlag = @sodflag,
       EodFlag = @eodflag,
       BusinessDayDate = @date,
       UpdOpeCode = @operatorid
    WHERE
       CompanyId = @companyid AND
       StoreId = @storeid AND
       TillId = @tillid
    COMMIT TRAN
  </entry>
    
    <entry key="get-all-tills">
        DECLARE             
            @storeid varchar(max),          
            @tillid varchar(max),
            @limit int
        SET @storeid=?
        SET @tillid=?       
        SET @limit=?
        SET @limit = (CASE
                     WHEN(@limit > -1) 
                        THEN @limit
                        ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_TILLIDINFO) 
                     END)                                   
        SELECT TOP(@limit)
            StoreId,
            TillId,
            TerminalId,
            BusinessDayDate,
            SodFlag,
            EodFlag,
            UpdOpeCode
        FROM RESMaster.dbo.MST_TILLIDINFO
        WHERE (@storeid IS NULL OR len(@storeid) = 0 OR StoreId like @storeid)
        AND (@tillid IS NULL OR len(@tillid) = 0 OR TillId like @tillid)
        ORDER BY TillId;
    </entry>
    
    <entry key="search-logon-users">
        DECLARE
          @companyid varchar(max),
            @storeid varchar(max),
            @tillid varchar(max),
            @terminalid varchar(max)
        
        SET @companyid = ?    
        SET @storeid = ?
        SET @tillid = ?
        SET @terminalid = ?
        
        SELECT
            device.TerminalId
        FROM
            RESMaster.dbo.MST_DEVICEINFO device
        LEFT JOIN
            TXU_POS_CTRL pos
        ON
          device.CompanyId = pos.CompanyId AND
            device.StoreId = pos.StoreId AND
            device.TerminalId = pos.TerminalNo
        WHERE
          device.CompanyId = @companyid AND
            device.StoreId = @storeid AND
            device.TillId = @tillid AND
            (pos.OpeCode IS NOT NULL AND LTRIM(RTRIM(pos.OpeCode))!='') AND
            device.TerminalId != @terminalid
    </entry>
    <!-- *************************  ENTRY KEY FOR DEPARTMENT TABLE MAINTENANCE ************************* -->
  <entry key="select-departmentdetails">
    DECLARE @companyid varchar(max), @dpt varchar(max), @storeid varchar(max)
    SET @companyid = ?
    SET @storeid = ?
    SET @dpt = ?

    IF NOT EXISTS(SELECT Dpt FROM RESMaster.dbo.MST_DPTINFO WHERE CompanyId = @companyid AND StoreId = @storeid AND Dpt = @dpt AND DeleteFlag = 0.0)
      SET @storeid = '0'

    SELECT
      StoreId, Dpt, DptName, DptNameLocal, TaxType, TaxRate, DiscountType, ExceptionFlag, SubNum1, SubNum2, SubNum3
    FROM
      RESMaster.dbo.MST_DPTINFO
    WHERE
      CompanyId = @companyid AND StoreId = @storeid AND Dpt = @dpt AND DeleteFlag = 0.0
  </entry>

  <entry key="get-department">
    DECLARE @dpt varchar(max), @storeid varchar(max)
    SET @storeid = ?
    SET @dpt = ?

    SELECT
      StoreId, Dpt, DptName, DptNameLocal, [Status], InheritFlag, ExceptionFlag, SubSmallInt5, DiscountType, DiscountFlag, DiscountAmt, DiscountRate, TaxRate, TaxType
    FROM
      RESMaster.dbo.MST_DPTINFO
    WHERE
      StoreId = @storeid AND Dpt = @dpt
  </entry>


  <entry key="create-department">
    DECLARE
      @storeid varchar(max),
      @dpt varchar(max),
      @dptname varchar(max),
      @dptnamelocal varchar(max),
      @jigyobu varchar(max),
      @gyoshu varchar(max),
      @bumon varchar(max),
      @uriba varchar(max),
      @category varchar(max),
      @taxtype numeric(1,0),
      @taxrate numeric(5,0),
      @discounttype numeric(1,0),
      @exceptionflag numeric(1,0),
      @discountflag numeric(1,0),
      @discountamt numeric(10,0),
      @discountrate numeric(8,0),
      @agerestrictedflag numeric(1,0),
      @inheritflag numeric(1,0),
      @subsmallint5 numeric(5,0),
      @updappid varchar(max),
      @updopecode varchar(max)

      SET @storeid = ?
      SET @dpt = ?
      SET @dptname = ?
      SET @dptnamelocal = ?
      SET @jigyobu = ?
      SET @gyoshu = ?
      SET @bumon = ?
      SET @uriba = ?
      SET @category = ?
      SET @taxtype = ?
      SET @taxrate = ?
      SET @discounttype = ?
      SET @exceptionflag = ?
      SET @discountflag = ?
      SET @discountamt = ?
      SET @discountrate = ?
      SET @agerestrictedflag = ?
      SET @inheritflag = ?
      SET @subsmallint5 = ?
      SET @updappid = ?
      SET @updopecode = ?

    INSERT INTO
      RESMaster.dbo.MST_DPTINFO(
        StoreId,
        Dpt,
        DptName,
        DptNameLocal,
        Jigyobu,
        Gyoshu,
        Bumon,
        Uriba,
        Category,
        TaxType,
        TaxRate,
        DiscountType,
        ExceptionFlag,
        DiscountFlag,
        DiscountAmt,
        DiscountRate,
        AgeRestrictedFlag,
        InheritFlag,
        SubSmallInt5,
        InsDate,
        UpdDate,
        UpdAppId,
        UpdOpeCode,
        Status)
      VALUES
      (@storeid
      ,@dpt
      ,@dptname
      ,@dptnamelocal
      ,@jigyobu
      ,@gyoshu
      ,@bumon
      ,@uriba
      ,@category
      ,CASE
        WHEN @taxtype IS NULL THEN 1
        ELSE @taxtype
             END
      ,CASE
        WHEN @taxrate IS NULL THEN 8
        ELSE @taxrate
             END
      ,CASE
        WHEN @discounttype IS NULL THEN 1
        ELSE @discounttype
             END
      ,CASE
        WHEN @exceptionflag IS NULL THEN 0
        ELSE @exceptionflag
             END
      ,CASE
        WHEN @discountflag IS NULL THEN NULL
        ELSE @discountflag
             END
      ,CASE
        WHEN @discountamt IS NULL THEN 0
        ELSE @discountamt
             END
      ,CASE
        WHEN @discountrate IS NULL THEN 0
        ELSE @discountrate
             END
      ,@agerestrictedflag
      ,CASE
        WHEN @inheritflag IS NULL THEN 0
        ELSE @inheritflag
             END
      ,CASE
        WHEN @subsmallint5 IS NULL THEN 0
        ELSE @subsmallint5
             END
      ,GETDATE()
      ,GETDATE()
      ,@updappid
      ,@updopecode
      ,'Active');
  </entry>
  <entry key="get-departments">
  DECLARE @key varchar(max),
    @storeid varchar(max),
    @limit int,
    @name varchar(max)

    SET @limit=?
    SET @storeid=?
    SET @key=?
    SET @name=?

    SET @storeid = (CASE
               WHEN (len(@key) = 0 OR (@key IS NULL))
                  THEN @storeid
               WHEN ((len(@storeid) =0 OR @storeid IS NULL))
                   THEN @storeid
               WHEN NOT EXISTS(SELECT Dpt, DptName FROM RESMaster.dbo.MST_DPTINFO WHERE StoreId= @storeid AND Dpt like @key {ESCAPE '\'} )
                  THEN '0'
                   ELSE @storeid
             END)
    SET @limit = (CASE
           WHEN(@limit > -1)
               THEN @limit
               ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_DPTINFO)
           END)

    SELECT TOP(@limit)
      Dpt,
      DptName,
      DptNameLocal,
      StoreId,
      InheritFlag,
      ExceptionFlag,
      SubSmallInt5,
      DiscountType,
      DiscountFlag,
      DiscountAmt,
      DiscountRate,
      TaxRate,
      TaxType


    FROM RESMaster.dbo.MST_DPTINFO
    WHERE
      ((@storeid IS NULL OR LEN(@storeid) = 0) OR (
            StoreId = @storeid
          )) AND
      ((@key IS NULL OR LEN(@key) = 0) OR (
            Dpt LIKE @key  {ESCAPE '\'}
          )) AND    
      ((@name IS NULL) OR ( 
            ((LOWER(DptName) like LOWER(@name)  {ESCAPE '\'} ) OR
            (LOWER(DptNameLocal) like LOWER(@name)  {ESCAPE '\'} )
          ))) AND
      Status = 'Active'
    ORDER BY
         CASE
        WHEN (len(@name) &gt; 0 AND (@key IS NULL OR len(@key) &lt;= 0))
          THEN DptName
           END,
      Dpt
  </entry>
  <entry key="update-department">
    DECLARE
      @dpt varchar(max),
      @dptname varchar(max),
      @dptnamelocal varchar(max),
      @storeid varchar(max),
      @taxtype numeric(1,0),
      @taxrate numeric(5,0),
      @discounttype numeric(1,0),
      @exceptionflag numeric(1,0),
      @discountflag numeric(1,0),
      @discountamt numeric(10,0),
      @discountrate numeric(8,0),
      @agerestrictedflag numeric(1,0),
      @inheritflag numeric(1,0),
      @subsmallint5 numeric(5,0),
      @updappid varchar(max),
      @updopecode varchar(max),
      @oldstoreid varchar(max),
      @olddpt varchar(max)

    SET @dpt = ?
    SET @dptname = ?
    SET @dptnamelocal = ?
    SET @storeid = ?
    SET @taxtype = ?
    SET @taxrate = ?
    SET @discounttype = ?
    SET @exceptionflag = ?
    SET @discountflag = ?
    SET @discountamt = ?
    SET @discountrate = ?
    SET @agerestrictedflag = ?
    SET @inheritflag = ?
    SET @subsmallint5 = ?
    SET @updappid = ?
    SET @updopecode = ?
    SET @oldstoreid = ?
    SET @olddpt = ?


    UPDATE RESMaster.dbo.MST_DPTINFO
    SET Dpt =
        CASE
          WHEN len(@dpt) > 0 THEN @dpt
          ELSE Dpt
        END,

      StoreId =
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,

      DptName =
        CASE
          WHEN (len(@dptname) > 0 OR @dptname='') THEN @dptname
          ELSE DptName
        END,

      DptNameLocal =
        CASE
          WHEN (len(@dptnamelocal) > 0 OR @dptnamelocal='') THEN @dptnamelocal
          ELSE DptNameLocal
        END,
      TaxType =
        CASE
          WHEN @taxtype IS NULL THEN TaxType
          ELSE @taxtype
        END,
      TaxRate =
        CASE
          WHEN @taxrate IS NULL THEN TaxRate
          ELSE @taxrate
        END,
      DiscountType  =
        CASE
          WHEN @discounttype IS NULL THEN DiscountType
          ELSE @discounttype
        END,
      ExceptionFlag =
        CASE
          WHEN @exceptionflag IS NULL THEN ExceptionFlag
          ELSE @exceptionflag
        END,
      DiscountFlag  =
        CASE
          WHEN @discountflag IS NULL THEN DiscountFlag
          ELSE @discountflag
        END,
      DiscountAmt  =
        CASE
          WHEN @discountamt IS NULL THEN DiscountAmt
          ELSE @discountamt
        END,
      DiscountRate  =
        CASE
          WHEN @discountrate IS NULL THEN DiscountRate
          ELSE @discountrate
        END,
      AgeRestrictedFlag  =
        CASE
          WHEN @agerestrictedflag IS NULL THEN AgeRestrictedFlag
          ELSE @agerestrictedflag
        END,
      InheritFlag  =
        CASE
          WHEN @inheritflag IS NULL THEN InheritFlag
          ELSE @inheritflag
        END,
      SubSmallInt5  =
        CASE
          WHEN @subsmallint5 IS NULL THEN SubSmallInt5
          ELSE @subsmallint5
        END,
      UpdDate = GETDATE(),
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode,
      Status = 'Active'
    OUTPUT
      INSERTED.Dpt,
      INSERTED.DptName,
      INSERTED.DptNameLocal,
      INSERTED.InheritFlag,
      INSERTED.ExceptionFlag,
      INSERTED.SubSmallInt5,
      INSERTED.DiscountType,
      INSERTED.DiscountFlag,
      INSERTED.DiscountAmt,
      INSERTED.DiscountRate,
      INSERTED.TaxRate,
      INSERTED.TaxType
    WHERE
      StoreId = @oldstoreid AND
      Dpt = @olddpt
  </entry>
  <entry key="update-department-active">
    DECLARE
      @Dpt varchar(max),
      @DptName varchar(max),
      @DptNameLocal varchar(max),
      @UpdAppId varchar(max),
      @UpdOpeCode varchar(max),
      @StoreId varchar(max)

    SET @StoreId = ?
    SET @Dpt = ?
    SET @DptName = ?
    SET @DptNameLocal = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?

    IF NOT EXISTS(SELECT Dpt, DptName FROM RESMaster.dbo.MST_DPTINFO WHERE StoreId = @StoreId AND Dpt = @Dpt)
      SET @StoreId='0'

    UPDATE RESMaster.dbo.MST_DPTINFO
    SET Dpt =
        CASE
          WHEN len(@Dpt) > 0 THEN @Dpt
          ELSE Dpt
        END,

      DptName =
        CASE
          WHEN (len(@DptName) > 0 OR @DptName='') THEN @DptName
          ELSE DptName
        END,

      DptNameLocal =
        CASE
          WHEN (len(@DptNameLocal) > 0 OR @DptNameLocal='') THEN @DptNameLocal
          ELSE DptNameLocal
        END,

      UpdDate = GETDATE(),
      UpdAppId = @UpdAppId,
      UpdOpeCode = @UpdOpeCode,
      [Status] = 'Active'

    WHERE StoreId = @StoreId AND Dpt = @Dpt;

  </entry>
  <entry key="delete-department">
    DECLARE
      @storeid varchar(max),
      @dpt varchar(max),
      @updappid varchar(max),
      @updopecode varchar(max)

    SET @storeid = ?
    SET @dpt = ?
    SET @updappid = ?
    SET @updopecode = ?

      IF NOT EXISTS(SELECT Dpt FROM RESMaster.dbo.MST_DPTINFO WHERE StoreId = @storeid AND Dpt = @dpt)
      SET @storeid='0'

    UPDATE
      RESMaster.dbo.MST_DPTINFO
    SET
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode,
      [Status] = 'Deleted'
    WHERE
      StoreId = @storeid AND
      Dpt = @dpt AND
      Status = 'Active'
  </entry>
    <!-- *************************  ENTRY KEY FOR ITEM TABLE MAINTENANCE ************************* -->
    <entry key="delete-item">
      DECLARE
        @plu varchar(max),
        @storeid varchar(max)

    SET @storeid=?
    SET @plu=?

      DELETE FROM
        RESMaster.dbo.MST_PLU
      WHERE
        StoreId = @storeid AND
        MdInternal = @plu;
    </entry>
    <!-- *************************  ENTRY KEY FOR EMPLOYEE TABLE MAINTENANCE ************************* -->
    <entry key="update-store-operator-passcode">
      DECLARE @operatorno char(20), @oldpasscode varchar(30), @newpasscode varchar(max), @updappid varchar(max), @updopecode varchar(max)
      SET @operatorno=?
    SET @oldpasscode=?
    SET @newpasscode=?
    SET @updappid =?
    SET @updopecode =?

      IF EXISTS (SELECT OperatorNo FROM RESMaster.dbo.MST_USER_CREDENTIALS WHERE OperatorNo = @operatorno AND (PassCode = @oldpasscode))
        UPDATE
          RESMaster.dbo.MST_USER_CREDENTIALS
        SET
        PassCode = @newpasscode,
        UpdDate = GETDATE(),
        UpdAppId = @updappid,
        UpdOpeCode = @updopecode

      OUTPUT INSERTED.PassCode
      WHERE
        OperatorNo = @operatorno AND (Status='Active' OR Status='Inactive')
    ELSE
      SELECT PassCode FROM RESMaster.dbo.MST_USER_CREDENTIALS
        WHERE OperatorNo = @operatorno  AND (Status='Active' OR Status='Inactive')
    </entry>
    <entry key="get-employee">
      SELECT
      OperatorName,
      OperatorType,
      TerminalId,
      PassCode,
      Status
    FROM
      RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      StoreId=? AND OperatorNo=? AND (Status='Active' OR Status='Inactive');
    </entry>
    <entry key="create-employee">
    DECLARE
    @storeid      varchar(MAX),
    @operatorno   char(20),
    @operatorname   varchar(MAX),
    @passcode     varchar(MAX),
    @operatortype   int,
    @terminalid   varchar(MAX),
    @role       char(8),
    @upddate    datetime,
    @status     varchar(MAX),
    @updappid     varchar(max),
    @updopecode   varchar(max)

  SET @storeid      =?
  SET @operatorno   =?
  SET @operatorname   =?
  SET @passcode     =?
  SET @operatortype   =?
  SET @updappid   =?
  SET @updopecode   =?

    IF EXISTS(SELECT Status FROM RESMaster.dbo.MST_USER_CREDENTIALS WHERE OperatorNo = @operatorno AND Status = 'Deleted')
      UPDATE
                RESMaster.dbo.MST_USER_CREDENTIALS
        SET
            StoreId = @storeid,
            OperatorName = @operatorname,
            PassCode = @passcode,
            OperatorType = @operatortype,
            TerminalId = NULL,
            Role = 'NCR',
            UpdDate = GETDATE(),
            Status = 'Inactive',
            UpdAppId = @updappid,
            UpdOpeCode = @updopecode
        WHERE
            OperatorNo = @operatorno

    ELSE
    INSERT INTO RESMaster.dbo.MST_USER_CREDENTIALS (StoreId,OperatorNo,OperatorName,PassCode,OperatorType,TerminalId,Role,UpdDate,Status,UpdAppId,UpdOpeCode)
    VALUES
      (@storeid,@operatorno,@operatorname,@passcode,@operatortype,NULL,'NCR',GETDATE(),'Inactive',@updappid,@updopecode)
    </entry>
    <entry key="delete-employee">
      UPDATE
      RESMaster.dbo.MST_USER_CREDENTIALS
    SET
      Status = 'Deleted',
      Role = '',
      UpdOpeCode = ?,
      UpdAppId = ?,
      UpdDate = GETDATE()
    WHERE
      StoreId=? and OperatorNo=?
    </entry>
    <entry key="update-employee">
      DECLARE @operatorno varchar(MAX), @passcode varchar(MAX), @operatorname varchar(MAX), @operatortype int, @terminalid varchar(MAX), @storeid varchar(MAX),@updappid varchar(max), @updopecode varchar(max), @status varchar(max), @role varchar(max)

    SET @operatorno=?
    SET @passcode=?
    SET @operatorname=?
    SET @operatortype=?
    SET @storeid=?
    SET @updappid=?
    SET @updopecode=?
    SET @status=?
    SET @terminalid=?
    SET @role=?

      UPDATE
        RESMaster.dbo.MST_USER_CREDENTIALS
      SET
        OperatorNo=
        CASE
        WHEN len(@operatorno) > 0  THEN @operatorno
        ELSE OperatorNo
      END,
        PassCode=
        CASE
          WHEN (@passcode IS NULL OR @passcode = '')THEN @passcode
        ELSE PassCode
      END,
      OperatorName=
        CASE
        WHEN (len(@operatorname) > 0 OR @operatorname='') THEN @operatorname
        ELSE OperatorName
      END,
      OperatorType=
        CASE
        WHEN (len(@operatortype) > 0 OR @operatortype='') THEN @operatortype
        ELSE OperatorType
      END,
      StoreId=
      CASE
        WHEN (len(@storeid) > 0 OR @storeid='') THEN @storeid
        ELSE StoreId
      END,
      Status='Inactive',
      TerminalId=
      CASE
        WHEN (len(@terminalid) > 0 ) THEN @terminalid
        ELSE TerminalId
      END,
      Role=
      CASE
        WHEN (len(@role) > 0 ) THEN @role
        ELSE Role
      END,
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode,
        UpdDate = GETDATE()
        OUTPUT INSERTED.OperatorNo, INSERTED.PassCode, INSERTED.OperatorName,
             INSERTED.OperatorType, INSERTED.StoreId,  INSERTED.PassCode
      WHERE
        OperatorNo=?
    </entry>
    <entry key="get-employee-info">
      SELECT
      OperatorName,
      OperatorType,
      TerminalId,
      PassCode,
      Status,
      Role,
      StoreId,
      OperatorNo
    FROM
      RESMaster.dbo.MST_USER_CREDENTIALS
    WHERE
      OperatorNo = ?;
    </entry>



    <!-- QUEUE BUSTER LINK -->
    <entry key="create-queuebusterlink">
      INSERT INTO RESMaster.dbo.PRM_QUEUEBUSTER_LINK
        (StoreId, Id, DisplayName, Status, UpdDate, UpdAppId, UpdOpeCode)
    VALUES
      (?, ?, ?, 'Active',GETDATE(),?, ?)
    </entry>
    <entry key="delete-queuebusterlink">
      UPDATE
        RESMaster.dbo.PRM_QUEUEBUSTER_LINK
      SET
        Status = 'Deleted',
        UpdDate = GETDATE(),
        UpdAppId=?,
      UpdOpeCode=?
      WHERE
        StoreId = ? AND Id = ?
    </entry>
    <entry key="update-queuebusterlink">
    DECLARE
      @StoreId varchar(MAX),
      @Id varchar(MAX),
      @DisplayName varchar(MAX),
      @UpdAppId varchar(MAX),
      @UpdOpeCode varchar(MAX)

    SET @StoreId = ?
    SET @Id = ?
    SET @DisplayName = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?
    UPDATE
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    SET
      StoreId =
        CASE
          WHEN len(@StoreId) > 0 THEN @StoreId
          ELSE StoreId
        END,
      Id =
        CASE
          WHEN len(@Id) > 0 THEN @Id
          ELSE Id
        END,
      DisplayName =
        CASE
          WHEN @DisplayName is NULL then DisplayName
          ELSE RTRIM(LTRIM(@DisplayName))
        END,
      UpdDate = GETDATE(),
      UpdAppId = @UpdAppId,
      UpdOpeCode = @UpdOpeCode

    OUTPUT
      INSERTED.StoreId,
      INSERTED.Id,
      INSERTED.DisplayName
    WHERE
      StoreId = ? AND Id = ? AND (Status = 'Active' OR Status = 'Inactive')
    </entry>
    <entry key="activate-queuebusterlink">

    UPDATE
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    SET
      Status = 'Active'

    WHERE
      StoreId = ? AND Id = ?
    </entry>

    <entry key="get-all-queueubusterlinks">
    SELECT
      TOP (?)
      Id,
      COALESCE(DisplayName, '') DisplayName,
      StoreId
    FROM
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    WHERE
      StoreId like ? AND
      (Id like ?  {ESCAPE '\'} ) AND (DisplayName IS NULL OR (LOWER(DisplayName) like LOWER(?)  {ESCAPE '\'} ) ) AND
      Status = 'Active' 

  </entry>

   <!-- AUTHORIZATION LINK -->
    <entry key="create-authorizationlink">
      INSERT INTO
    RESMaster.dbo.PRM_AUTHORIZATION_LINK (StoreId,Id,DisplayName,Status,UpdDate,UpdAppId,UpdOpeCode)
    VALUES
      (?,?,?,'Active',GETDATE(),?,?)
    </entry>

    <entry key="delete-authorizationlink">

      UPDATE
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    SET
      Status = 'Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
    StoreId = ? AND Id = ?
    </entry>
    <entry key="update-authorizationlink">
    DECLARE @StoreId varchar(MAX), @Id varchar(MAX), @DisplayName varchar(MAX), @UpdAppId varchar(MAX), @UpdOpeCode varchar(MAX)
    SET @StoreId = ?
    SET @Id = ?
    SET @DisplayName = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?


    UPDATE
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    SET
    StoreId = CASE WHEN len(@StoreId) > 0 THEN @StoreId
    ELSE StoreId END,
    Id = CASE WHEN len(@Id) > 0 THEN @Id
            ELSE Id END,
    DisplayName = CASE WHEN @DisplayName IS NULL THEN DisplayName
              ELSE RTRIM(LTRIM(@DisplayName)) END,
    UpdDate = GETDATE(),
    UpdAppId = @UpdAppId,
    UpdOpeCode = @UpdOpeCode

    OUTPUT INSERTED.StoreId, INSERTED.Id, COALESCE(INSERTED.DisplayName, '')
    DisplayName
    WHERE
    StoreId = ? AND Id = ? AND (Status = 'Active' OR Status = 'Inactive')
    </entry>
    <entry key="get-all-authorizationlinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName,
    StoreId
    FROM
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    WHERE
        Status = 'Active'
  </entry>

    <entry key="get-authorizationlinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName
    FROM
      RESMaster.dbo.PRM_AUTHORIZATION_LINK

    WHERE
        StoreId = ?  and Status = 'Active'
  </entry>
    <entry key="get-authorizationlink">
    SELECT
    StoreId,
    Id,
    COALESCE(DisplayName, '') DisplayName, Status
    FROM
      RESMaster.dbo.PRM_AUTHORIZATION_LINK
    WHERE
    StoreId = ? AND Id = ?
  </entry>
  <entry key="get-queuebusterlinkinfo">
    SELECT
      COALESCE(DisplayName, '') DisplayName, Status
    FROM
      RESMaster.dbo.PRM_QUEUEBUSTER_LINK
    WHERE
      StoreId = ? AND Id = ?;
  </entry>
    <!-- SIGNATURE LINK  -->
    <entry key="get-signaturelinkinfo">
    SELECT
    StoreId,
    Id,
    DisplayName,
    Status
    FROM RESMaster.dbo.PRM_SIGNATURE_LINK
    WHERE StoreId = ? AND Id = ?;
  </entry>
  <entry key="delete-signaturelink">
    UPDATE RESMaster.dbo.PRM_SIGNATURE_LINK
    SET
      Status = 'Deleted',
      UpdDate = GETDATE(),
      UpdAppId = ?,
      UpdOpeCode = ?
    WHERE
    StoreId = ? AND Id = ?
  </entry>
   <entry key="create-signaturelink">
      INSERT INTO
    RESMaster.dbo.PRM_SIGNATURE_LINK (StoreId,Id,DisplayName,Status,UpdDate,UpdAppId,UpdOpeCode)
    VALUES
      (?,?,?,'Active',GETDATE(),?,?)
    </entry>
    <entry key="get-SignatureLinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName,
    StoreId
    FROM RESMaster.dbo.PRM_SIGNATURE_LINK
    WHERE StoreId = ? AND Status='Active'
  </entry>
  <entry key="get-all-signaturelinks">
    SELECT
    Id,
    COALESCE(DisplayName, '') DisplayName,
    StoreId
    FROM RESMaster.dbo.PRM_SIGNATURE_LINK
    WHERE Status='Active'
  </entry>
  <entry key="update-signaturelink">
    DECLARE @StoreId varchar(MAX), @Id varchar(MAX), @DisplayName varchar(MAX), @UpdAppId varchar(MAX), @UpdOpeCode varchar(MAX)
    SET @StoreId = ?
    SET @Id = ?
    SET @DisplayName = ?
    SET @UpdAppId = ?
    SET @UpdOpeCode = ?

    UPDATE
      RESMaster.dbo.PRM_SIGNATURE_LINK
    SET
    StoreId = CASE WHEN len(@StoreId) > 0 THEN @StoreId
    ELSE StoreId END,
    Id = CASE WHEN len(@Id) > 0 THEN @Id
    ELSE Id END,
    DisplayName = CASE WHEN @DisplayName IS NULL THEN DisplayName ELSE RTRIM(LTRIM(@DisplayName)) END,
    UpdDate = GETDATE(),
    UpdAppId = @UpdAppId,
    UpdOpeCode = @UpdOpeCode

    OUTPUT INSERTED.StoreId, INSERTED.Id, COALESCE(INSERTED.DisplayName, '')
    DisplayName
    WHERE
    StoreId = ? AND Id = ? AND (Status = 'Active' OR Status = 'Inactive')
    </entry>

    <!-- FOR SETTING DEVICE INFO LINKS -->
    <entry key="set-queuebusterlink">
    DECLARE @storeid varchar(MAX), @termid varchar(MAX), @queuelink varchar(MAX), @upddate datetime, @updappid varchar(MAX), @updopecode varchar(MAX)
    SET @queuelink=?
    SET @storeid=?
    SET @termid=?
    SET @upddate=GETDATE()
    SET @updappid=?
    SET @updopecode=?

    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      LinkQueueBuster = @queuelink,
      UpdDate = @upddate,
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode

    WHERE
    StoreId = @storeid AND TerminalId = @termid

    IF(@@ROWCOUNT = 0)
      INSERT INTO RESMaster.dbo.MST_DEVICEINFO
    (StoreId,TerminalId,LinkQueueBuster,SendLogFile,SaveLogFile,AutoUpload,UpdDate,UpdAppId,UpdOpeCode)
      VALUES
    (@storeid,@termid,@queuelink,3,40,0,@upddate,@updappid,@updopecode)
    </entry>

  <entry key="set-signaturelink">
    DECLARE @storeid varchar(MAX), @termid varchar(MAX), @linksignature varchar(MAX), @upddate datetime, @updappid varchar(MAX), @updopecode varchar(MAX)
    SET @linksignature=?
    SET @storeid=?
    SET @termid=?
    SET @upddate=GETDATE()
    SET @updappid=?
    SET @updopecode=?

    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
      LinkSignature = @linksignature,
      UpdDate = @upddate,
      UpdAppId = @updappid,
      UpdOpeCode = @updopecode

    WHERE
      StoreId = @storeid AND TerminalId = @termid

    IF(@@ROWCOUNT = 0)
      INSERT INTO RESMaster.dbo.MST_DEVICEINFO
    (StoreId,TerminalId,LinkSignature,SendLogFile,SaveLogFile,AutoUpload,UpdDate,UpdAppId,UpdOpeCode)
      VALUES
    (@storeid,@termid,@linksignature,3,40,0,@upddate,@updappid,@updopecode)
  </entry>

  <entry key="set-authorizationlink">
    DECLARE @storeid varchar(MAX), @termid varchar(MAX),
    @linkauthorization varchar(MAX),
    @upddate datetime,
    @updappid varchar(MAX),
    @updopecode varchar(MAX)

    SET @linkauthorization=?
    SET @storeid=?
    SET @termid=?
    SET @upddate= GETDATE()
    SET @updappid= ?
    SET @updopecode= ?

    UPDATE
      RESMaster.dbo.MST_DEVICEINFO
    SET
    LinkAuthorization = @linkauthorization,
    UpdDate = @upddate,
    UpdAppId = @updappid,
    UpdOpeCode = @updopecode

    WHERE
    StoreId = @storeid AND TerminalId = @termid

    IF(@@ROWCOUNT = 0)
      INSERT INTO RESMaster.dbo.MST_DEVICEINFO
    (StoreId,TerminalId,LinkAuthorization,SendLogFile,SaveLogFile,AutoUpload,UpdDate,UpdAppId,UpdOpeCode)
      VALUES
    (@storeid,@termid,@linkauthorization,3,40,0,@upddate,@updappid,@updopecode)

  </entry>

  <!-- FOR GROUP FUNCTIONS-->
  <entry key="view-GroupDetail">
    SELECT GroupName,Transactions,Reports,Settings,Merchandise,Administration,Drawer
    FROM RESMaster.dbo.PRM_GROUP_FUNCTION
    WHERE GroupCode = ?
  </entry>
  <entry key="create-Group">
    INSERT INTO RESMaster.dbo.PRM_GROUP_FUNCTION
      (GroupCode,GroupName,Transactions,Reports,Settings,Merchandise,Administration,Drawer)
    VALUES (?,?,?,?,?,?,?,?)
  </entry>
  <entry key="get-GroupListWithKey">
    SELECT TOP(?) GroupCode,GroupName
    FROM RESMaster.dbo.PRM_GROUP_FUNCTION
    WHERE LOWER(GroupName) LIKE LOWER(?)
  </entry>
  <entry key="get-GroupList">
    SELECT GroupCode,GroupName
    FROM RESMaster.dbo.PRM_GROUP_FUNCTION
  </entry>
  <entry key="update-Group">
  DECLARE @groupname varchar(max), @transactions bit, @reports bit, @settings bit, @merchandise bit, @administration bit, @drawer bit
      SET @groupname = ?
      SET @transactions = ?
      SET @reports = ?
      SET @settings = ?
      SET @merchandise = ?
      SET @administration = ?
      SET @drawer = ?

      UPDATE
        RESMaster.dbo.PRM_GROUP_FUNCTION
      SET
        GroupName =
          CASE
            WHEN LEN(@groupname) > 0 THEN @groupname
            ELSE GroupName
          END,
        Transactions =(@transactions),
        Reports = @reports,
        Settings = @settings,
        Merchandise = @merchandise,
        Administration = @administration,
        Drawer = @drawer

        OUTPUT INSERTED.GroupName, INSERTED.Transactions, INSERTED.Reports, INSERTED.Settings, INSERTED.Merchandise,
                 INSERTED.Administration, INSERTED.Drawer
      WHERE GroupCode = ?
  </entry>
  <entry key="view-authorization">
    SELECT SecLevel1, SecLevel2, SecLevel3, SecLevel4, SecLevel5, SecLevel6, SecLevel7, SecLevel8, SecLevel9,
    SecLevel10 
    FROM RESMaster.dbo.MST_EMP_SEC
    WHERE CompanyId = ? and EmpCode = ? and DeleteFlag = 0.0
  </entry>
  <!-- FOR MIX MATCH PROMOTION  -->
  <entry key="get-MixMatch">
    DECLARE @storeid varchar(max), @code varchar(max)
        SET @storeid = ?
        SET @code = ?

        IF NOT EXISTS(SELECT StartDate, EndDate, Name, Type, MustBuyFlag, Quantity1, DiscountPrice1,
                EmpPrice11, EmpPrice12, EmpPrice13, Quantity2, DiscountPrice2, EmpPrice21, EmpPrice22, EmpPrice23
                FROM RESMaster.dbo.MST_MIXMATCH
                WHERE StoreId = @storeid AND Code = @code)
        SET @storeid='0'

        SELECT StartDate, EndDate, Name, Type, MustBuyFlag, Quantity1, DiscountPrice1,
                EmpPrice11, EmpPrice12, EmpPrice13, Quantity2, DiscountPrice2, EmpPrice21, EmpPrice22, EmpPrice23
        FROM RESMaster.dbo.MST_MIXMATCH
        WHERE StoreId = @storeid AND Code = @code
  </entry>

  <entry key="get-GroupMixMatch">
    DECLARE @storeid varchar(max), @code1 varchar(max), @code2 varchar(max)
        SET @storeid = ?
        SET @code1 = ?
        SET @code2 = ?

        IF NOT EXISTS(SELECT StartDate, EndDate, Name, GroupCode, Code1, Code2
                FROM RESMaster.dbo.MST_GROUP_MIXMATCH
                WHERE StoreId = @storeid AND (Code1 = @code1 OR Code2 = @code2))
        SET @storeid = '0'

        SELECT StartDate, EndDate, Name, GroupCode, Code1, Code2
        FROM RESMaster.dbo.MST_GROUP_MIXMATCH
        WHERE StoreId = @storeid AND (Code1 = @code1 OR Code2 = @code2)
  </entry>

  <entry key="create-corpstore">
      IF NOT EXISTS(SELECT * FROM RESMaster.dbo.MST_CORP_STORE WHERE  StoreId = ?)
       INSERT INTO RESMaster.dbo.MST_CORP_STORE(StoreId,StoreName,PassCode,Permission)
    VALUES(?,?,?,?);
    </entry>
    <entry key="get-corpstore">
      SELECT
      StoreName, PassCode, Permission
    FROM
      RESMaster.dbo.MST_CORP_STORE
    WHERE
      StoreId=?
    </entry>
    <entry key="delete-corpstore">
    DELETE FROM RESMaster.dbo.MST_CORP_STORE
      WHERE  StoreId = ?
  </entry>
  <entry key="update-corpstore">
    DECLARE @storeid varchar(MAX),
        @storename varchar(MAX),
        @passcode varchar(MAX),
        @permission int

    SET @storeid = ?
    SET @storename = ?
    SET @passcode = ?
    SET @permission = ?

    UPDATE RESMaster.dbo.MST_CORP_STORE
      SET StoreId=
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,
          StoreName=
        CASE
          WHEN len(@storename) > 0 THEN @storename
          ELSE StoreName
        END,
        PassCode=
        CASE
          WHEN len(@passcode) > 0 THEN @passcode
          ELSE PassCode
        END,
        Permission = @permission
          OUTPUT INSERTED.StoreId, INSERTED.StoreName,
             INSERTED.PassCode, INSERTED.Permission
       WHERE
         StoreId=?
  </entry>
  <entry key="insert-update-mixmatch-from-spart">
    DECLARE @storeid varchar(MAX),
      @code varchar(MAX),
      @startdateid varchar(MAX),
      @enddateid varchar(MAX),
      @type varchar(MAX),
      @pricemulti1 int,
      @discountprice1 numeric(15,0),
      @empprice11 numeric(15,0),
      @empprice12 numeric(15,0),
      @empprice13 numeric(15,0),
      @pricemulti2 int,
      @discountprice2 numeric(15,0),
      @empprice21 numeric(15,0),
      @empprice22 numeric(15,0),
      @empprice23 numeric(15,0),
      @name varchar(MAX),
      @mustbuyflag int

    SET @storeid = ?
    SET @code = ?
    SET @startdateid = ?
    SET @enddateid = ?
    SET @type = ?
    SET @pricemulti1 = ?
    SET @discountprice1 = ?
    SET @empprice11 = ?
    SET @empprice12 = ?
    SET @empprice13 = ?
    SET @pricemulti2 = ?
    SET @discountprice2 = ?
    SET @empprice21 = ?
    SET @empprice22 = ?
    SET @empprice23 = ?
    SET @name = ?
    SET @mustbuyflag = ?


    IF NOT EXISTS(SELECT StoreId FROM RESMaster.dbo.MST_MIXMATCH WHERE
       StoreId = @storeid AND Code = @code AND StartDate = @startdateid AND
       EndDate = @enddateid)
       INSERT INTO RESMaster.dbo.MST_MIXMATCH
         VALUES(@storeid, @code, @startdateid, @enddateid, @name,
             @type, @mustbuyflag, @pricemulti1, @discountprice1, @empprice11,
             @empprice12, @empprice13, @pricemulti2, @discountprice2, @empprice21,
             @empprice22, @empprice23)
    ELSE
      UPDATE RESMaster.dbo.MST_MIXMATCH
        SET Name = @name,
          Type = @type,
          MustBuyFlag = @mustbuyflag,
          Quantity1 = @pricemulti1,
          DiscountPrice1 = @discountprice1,
          EmpPrice11 = @empprice11,
          EmpPrice12 = @empprice12,
          EmpPrice13 = @empprice13,
          Quantity2 = @pricemulti2,
          DiscountPrice2 = @discountprice2,
          EmpPrice21 = @empprice21,
          EmpPrice22 = @empprice22,
          EmpPrice23 = @empprice23
        WHERE
          StoreId = @storeid AND
          Code = @code AND
          StartDate = @startdateid AND
          EndDate = @enddateid
  </entry>
  <entry key="insert-update-groupmixmatch-from-spart">
    DECLARE @storeid varchar(MAX),
      @code1 varchar(MAX),
      @code2 varchar(MAX),
      @startdate date,
      @enddate date,
      @groupcode varchar(MAX),
      @name varchar(MAX)


    SET @storeid = ?
    SET @code1 = ?
    SET @code2 = ?
    SET @startdate = ?
    SET @enddate = ?
    SET @groupcode = ?
    SET @name = ?

    IF NOT EXISTS(SELECT StoreId FROM RESMaster.dbo.MST_GROUP_MIXMATCH WHERE
      StoreId= @storeid AND Code1 = @code1 AND Code2 = @code2 AND StartDate = @startdate AND
      EndDate = @enddate)
      INSERT INTO RESMaster.dbo.MST_GROUP_MIXMATCH
        VALUES(@storeid, @code1, @code2, @startdate, @enddate, @groupcode, @name)
    ELSE
      UPDATE RESMaster.dbo.MST_GROUP_MIXMATCH
        SET GroupCode = @groupcode,
          Name = @name
        WHERE
          StoreId= @storeid AND
          Code1 = @code1 AND
          Code2 = @code2 AND
          StartDate = @startdate AND
          EndDate = @enddate
  </entry>

  <!-- Master Maintenance -->
  <entry key="insert-update-item-from-spart">
  DECLARE
      @STOREID varchar(MAX),
      @PLU varchar(MAX),
      @DISPLAYPLU varchar(MAX),
      @MDINTERNAL varchar(MAX),
      @MNTSTATUS numeric(2, 0),
      @MDTYPE varchar(MAX),
      @MDVENDER varchar(MAX),
      @DPT varchar(MAX),
      @LINE varchar(MAX),
      @CLASS varchar(MAX),
      @SKU varchar(MAX),
      @ITEMSIZE varchar(MAX),
      @KEYPLU varchar(MAX),
      @MD01 varchar(MAX),
      @MD02 varchar(MAX),
      @MD03 varchar(MAX),
      @MD04 varchar(MAX),
      @MD05 varchar(MAX),
      @MD06 varchar(MAX),
      @MD07 varchar(MAX),
      @MD08 numeric(1,0),
      @MD09 varchar(MAX),
      @MD10 varchar(MAX),
      @MDNAME varchar(MAX),
      @MDNAME1 varchar(MAX),
      @MDNAME2 varchar(MAX),
      @MDKANANAME varchar(MAX),
      @MDKANANAME1 varchar(MAX),
      @MDKANANAME2 varchar(MAX),
      @ORGSALESPRICE1 numeric(15, 0),
      @SALESPRICE1 numeric(15, 0),
      @SALESPRICE2 numeric(15, 0),
      @EMPPRICE1 numeric(15,0),
      @EMPPRICE2 numeric(15,0),
      @EMPPRICE3 numeric(15,0),
      @PUPRICE1 numeric(15,0),
      @PUPRICE2 numeric(15,0),
      @PUPRICECHGDATE1 datetime,
      @PUPRICECHGDATE2 datetime,
      @ORGCOSTPRICE1 numeric(17,2),
      @COSTPRICE1 numeric(17,2),
      @COSTPRICE2 numeric(17,2),
      @COSTPRICECHGDATE1 datetime,
      @COSTPRICECHGDATE2 datetime,
      @SALESDATE datetime,
      @MAKERPRICE numeric(15,0),
      @TAXTYPE numeric(1,0),
      @DISCOUNTTYPE numeric(1,0),
      @SEASONTYPE numeric(1,0),
      @PAYMENTTYPE numeric(1,0),
      @ORDERTYPE numeric(1,0),
      @POSMDTYPE numeric(1,0),
      @CATTYPE numeric(1,0),
      @ORDERUNIT numeric(10,0),
      @ORDERPOINT numeric(10,0),
      @BASESTOCKCNT numeric(10,0),
      @CONN1 varchar(MAX),
      @CONNTYPE1 numeric(1,0),
      @CONN2 varchar(MAX),
      @CONNTYPE2 numeric(1,0),
      @VENDERCODE varchar(MAX),
      @VENDERTYPE numeric(1,0),
      @TAGCODE1 varchar(MAX),
      @TAGCODE2 varchar(MAX),
      @TAGCODE3 varchar(MAX),
      @POINTRATE numeric(10,0),
      @SUBMONEY1 numeric(15,0),
      @SUBMONEY2 numeric(15,0),
      @SUBMONEY3 numeric(15,0),
      @SUBMONEY4 numeric(15,0),
      @SUBMONEY5 numeric(15,0),
      @SUBCODE1 varchar(MAX),
      @SUBCODE2 varchar(MAX),
      @SUBCODE3 varchar(MAX),
      @SUBCODE4 varchar(MAX),
      @SUBCODE5 varchar(MAX),
      @SUBCODE6 varchar(MAX),
      @SUBCODE7 varchar(MAX),
      @SUBCODE8 varchar(MAX),
      @SUBCODE9 varchar(MAX),
      @SUBCODE10 varchar(MAX),
      @SUBTINYINT1 numeric(1,0),
      @SUBTINYINT2 numeric(1,0),
      @SUBTINYINT3 numeric(1,0),
      @SUBTINYINT4 numeric(1,0),
      @SUBTINYINT5 numeric(1,0),
      @SUBTINYINT6 numeric(1,0),
      @SUBTINYINT7 numeric(1,0),
      @SUBTINYINT8 numeric(1,0),
      @SUBTINYINT9 numeric(1,0),
      @SUBINT10 numeric(1,0),
      @INSDATE datetime,
      @UPDDATE datetime,
      @UPDAPPID varchar(MAX),
      @UPDOPECODE varchar(MAX),
      @STOCKTYPE numeric(1,0)


    SET @STOREID = ?
      SET @PLU = ?
    SET @MDINTERNAL = ?
    SET @MDTYPE = ?
    SET @MDVENDER = ?
    SET @DPT = ?
    SET @CLASS = ?
    SET @LINE = ?
    SET @SKU = ?
    SET @ITEMSIZE = ?
    SET @KEYPLU = ?
    SET @MD01 = ?
    SET @MD02 = ?
    SET @MD03 = ?
    SET @MD04 = ?
    SET @MD05 = ?
    SET @MD06 = ?
    SET @MD07 = ?
    SET @MD08 = ?
    SET @MD09 = ?
    SET @MD10 = ?
    SET @MDNAME = ?
    SET @MDNAME1 = ?
    SET @MDNAME2 = ?
    SET @MDKANANAME = ?
    SET @MDKANANAME1 = ?
    SET @MDKANANAME2 = ?
    SET @ORGSALESPRICE1 = ?
    SET @SALESPRICE1 = ?
    SET @SALESPRICE2 = ?
    SET @EMPPRICE1 = ?
    SET @EMPPRICE2 = ?
    SET @EMPPRICE3 = ?
    SET @PUPRICE1 = ?
    SET @PUPRICE2 = ?
    SET @PUPRICECHGDATE1 = ?
    SET @PUPRICECHGDATE2 = ?
    SET @ORGCOSTPRICE1 = ?
    SET @COSTPRICE1 = ?
    SET @COSTPRICE2 = ?
    SET @COSTPRICECHGDATE1 = ?
    SET @COSTPRICECHGDATE2 = ?
    SET @SALESDATE = ?
    SET @MAKERPRICE = ?
    SET @TAXTYPE = ?
    SET @DISCOUNTTYPE = ?
    SET @SEASONTYPE = ?
    SET @PAYMENTTYPE = ?
    SET @ORDERTYPE = ?
    SET @POSMDTYPE = ?
    SET @CATTYPE = ?
    SET @ORDERUNIT = ?
    SET @ORDERPOINT = ?
    SET @BASESTOCKCNT = ?
    SET @CONN1 = ?
    SET @CONNTYPE1 = ?
    SET @CONN2 = ?
    SET @CONNTYPE2 = ?
    SET @VENDERCODE = ?
    SET @VENDERTYPE = ?
    SET @TAGCODE1 = ?
    SET @TAGCODE2 = ?
    SET @TAGCODE3 = ?
    SET @POINTRATE = ?
    SET @SUBMONEY1 = ?
    SET @SUBMONEY2 = ?
    SET @SUBMONEY3 = ?
    SET @SUBMONEY4 = ?
    SET @SUBMONEY5 = ?
    SET @SUBCODE1 = ?
    SET @SUBCODE2 = ?
    SET @SUBCODE3 = ?
    SET @SUBCODE4 = ?
    SET @SUBCODE5 = ?
    SET @SUBCODE6 = ?
    SET @SUBCODE7 = ?
    SET @SUBCODE8 = ?
    SET @SUBCODE9 = ?
    SET @SUBCODE10 = ?
    SET @SUBTINYINT1 = ?
    SET @SUBTINYINT2 = ?
    SET @SUBTINYINT3 = ?
    SET @SUBTINYINT4 = ?
    SET @SUBTINYINT5 = ?
    SET @SUBTINYINT6 = ?
    SET @SUBTINYINT7 = ?
    SET @SUBTINYINT8 = ?
    SET @SUBTINYINT9 = ?
    SET @SUBINT10 = ?
    SET @INSDATE = ?
    SET @UPDDATE = ?
    SET @UPDAPPID = ?
    SET @UPDOPECODE = ?
    SET @DISPLAYPLU = ?
    SET @STOCKTYPE = ?

      IF EXISTS (SELECT Plu FROM RESMaster.dbo.MST_PLU WHERE Plu = @PLU AND StoreId = @STOREID)
        UPDATE
          RESMaster.dbo.MST_PLU
        SET
          StoreId = @STOREID,
          Plu = @PLU,
          DisplayPlu = @DISPLAYPLU,
        MdInternal = @MDINTERNAL,
        MdType = @MDTYPE,
        MdVender = @MDVENDER,
        Dpt = @DPT,
        Line = @LINE,
        Class = @CLASS,
        Sku = @SKU,
        ItemSize = @ITEMSIZE,
        KeyPlu = @KEYPLU,
        Md01 = @MD01,
        Md02 = @MD02,
        Md03 = @MD03,
        Md04 = @MD04,
        Md05 = @MD05,
        Md06 = @MD06,
        Md07 = @MD07,
        Md08 = @MD08,
        Md09 = @MD09,
        Md10 = @MD10,
        MdName = @MDNAME,
        MdName1 = @MDNAME1,
        MdName2 = @MDNAME2,
        MdKanaName = @MDKANANAME,
        MdKanaName1 = @MDKANANAME1,
        MdKanaName2 = @MDKANANAME2,
        OrgSalesPrice1 = @ORGSALESPRICE1,
        SalesPrice1 = @SALESPRICE1,
        SalesPrice2 = @SALESPRICE2,
        EmpPrice1 = @EMPPRICE1,
        EmpPrice2 = @EMPPRICE2,
        EmpPrice3 = @EMPPRICE3,
        PuPrice1 = @PUPRICE1,
        PuPrice2 = @PUPRICE2,
        PuPriceChgDate1 = @PUPRICECHGDATE1,
        PuPriceChgDate2 = @PUPRICECHGDATE2,
        OrgCostPrice1 = @ORGCOSTPRICE1,
        CostPrice1 = @COSTPRICE1,
        CostPrice2 = @COSTPRICE2,
        CostPriceChgDate1 = @COSTPRICECHGDATE1,
        CostPriceChgDate2 = @COSTPRICECHGDATE2,
        SalesDate = @SALESDATE,
         MakerPrice = @MAKERPRICE,
        TaxType = @TAXTYPE,
        DiscountType  = @DISCOUNTTYPE,
        SeasonType = @SEASONTYPE,
        PaymentType = @PAYMENTTYPE,
        OrderType = @ORDERTYPE,
        PosMdType = @POSMDTYPE,
        CatType = @CATTYPE,
        OrderUnit = @ORDERUNIT,
        OrderPoint = @ORDERPOINT,
        BaseStockCnt = @BASESTOCKCNT,
        Conn1 = @CONN1,
        ConnType1 = @CONNTYPE1,
        Conn2 = @CONN2,
        ConnType2 = @CONNTYPE2,
        VenderCode = @VENDERCODE,
        VenderType = @VENDERTYPE,
        TagCode1 = @TAGCODE1,
        TagCode2 = @TAGCODE2,
        TagCode3 = @TAGCODE3,
        PointRate = @POINTRATE,
        SubMoney1 = @SUBMONEY1,
        SubMoney2 = @SUBMONEY2,
        SubMoney3 = @SUBMONEY3,
        SubMoney4 = @SUBMONEY4,
        SubMoney5 = @SUBMONEY5,
        SubCode1 = @SUBCODE1,
        SubCode2 = @SUBCODE2,
        SubCode3 = @SUBCODE3,
        SubCode4 = @SUBCODE4,
        SubCode5 = @SUBCODE5,
        SubCode6 = @SUBCODE6,
        SubCode7 = @SUBCODE7,
        SubCode8 = @SUBCODE8,
        SubCode9 = @SUBCODE9,
        SubCode10 = @SUBCODE10,
        SubInt1 = @SUBTINYINT1,
        SubInt2 = @SUBTINYINT2,
        SubInt3 = @SUBTINYINT3,
        SubInt4 = @SUBTINYINT4,
        SubInt5 = @SUBTINYINT5,
        SubInt6 = @SUBTINYINT6,
        SubInt7 = @SUBTINYINT7,
        SubInt8 = @SUBTINYINT8,
        SubInt9 = @SUBTINYINT9,
        SubInt10 = @SUBINT10,
        InsDate = @INSDATE,
        UpdDate = @UPDDATE,
        UpdAppId = @UPDAPPID,
        UpdOpeCode = @UPDOPECODE,
        StockType = @STOCKTYPE

      WHERE
        Plu = @PLU AND StoreId = @STOREID
    ELSE
        INSERT INTO RESMaster.dbo.MST_PLU
             (
                 StoreId,
                 Plu,
          MdInternal,
          MdType,
          MdVender,
          Dpt,
          Line,
          Class,
          Sku,
          ItemSize,
          KeyPlu,
          Md01,
          Md02,
          Md03,
          Md04,
          Md05,
          Md06,
          Md07,
          Md08,
          Md09,
          Md10,
          MdName,
          MdName1,
          MdName2,
          MdKanaName,
          MdKanaName1,
          MdKanaName2,
          OrgSalesPrice1,
          SalesPrice1,
          SalesPrice2,
          EmpPrice1,
          EmpPrice2,
          EmpPrice3,
          PuPrice1,
          PuPrice2,
          PuPriceChgDate1,
          PuPriceChgDate2,
          OrgCostPrice1,
          CostPrice1,
          CostPrice2,
          CostPriceChgDate1,
          CostPriceChgDate2,
          SalesDate,
          MakerPrice,
          TaxType,
          DiscountType,
          SeasonType,
          PaymentType,
          OrderType,
          PosMdType,
          CatType,
          OrderUnit,
          OrderPoint,
          BaseStockCnt,
          Conn1,
          ConnType1,
          Conn2,
          ConnType2,
          VenderCode,
          VenderType,
          TagCode1,
          TagCode2,
          TagCode3,
          PointRate,
          SubMoney1,
          SubMoney2,
          SubMoney3,
          SubMoney4,
          SubMoney5,
          SubCode1,
          SubCode2,
          SubCode3,
          SubCode4,
          SubCode5,
          SubCode6,
          SubCode7,
          SubCode8,
          SubCode9,
          SubCode10,
          SubInt1,
          SubInt2,
          SubInt3,
          SubInt4,
          SubInt5,
          SubInt6,
          SubInt7,
          SubInt8,
          SubInt9,
          SubInt10,
          InsDate,
          UpdDate,
          UpdAppId,
          UpdOpeCode,
          DisplayPlu,
          StockType)
         VALUES
            (@STOREID, @PLU, @MDINTERNAL, @MDTYPE, @MDVENDER, @DPT, @LINE, @CLASS, @SKU, @ITEMSIZE, @KEYPLU, @MD01, @MD02, @MD03, @MD04, @MD05, @MD06, @MD07, @MD08, @MD09, @MD10, @MDNAME, @MDNAME1, @MDNAME2, @MDKANANAME, @MDKANANAME1, @MDKANANAME2, @ORGSALESPRICE1, @SALESPRICE1, @SALESPRICE2, @EMPPRICE1, @EMPPRICE2, @EMPPRICE3, @PUPRICE1, @PUPRICE2, @PUPRICECHGDATE1, @PUPRICECHGDATE2, @ORGCOSTPRICE1, @COSTPRICE1, @COSTPRICE2, @COSTPRICECHGDATE1, @COSTPRICECHGDATE2, @SALESDATE, @MAKERPRICE, @TAXTYPE, @DISCOUNTTYPE, @SEASONTYPE, @PAYMENTTYPE, @ORDERTYPE, @POSMDTYPE, @CATTYPE, @ORDERUNIT, @ORDERPOINT, @BASESTOCKCNT, @CONN1, @CONNTYPE1, @CONN2, @CONNTYPE2, @VENDERCODE, @VENDERTYPE, @TAGCODE1, @TAGCODE2, @TAGCODE3, @POINTRATE, @SUBMONEY1, @SUBMONEY2, @SUBMONEY3, @SUBMONEY4, @SUBMONEY5, @SUBCODE1, @SUBCODE2, @SUBCODE3, @SUBCODE4, @SUBCODE5, @SUBCODE6, @SUBCODE7, @SUBCODE8, @SUBCODE9, @SUBCODE10, @SUBTINYINT1, @SUBTINYINT2, @SUBTINYINT3, @SUBTINYINT4, @SUBTINYINT5, @SUBTINYINT6, @SUBTINYINT7, @SUBTINYINT8, @SUBTINYINT9, @SUBINT10, @INSDATE, @UPDDATE, @UPDAPPID, @UPDOPECODE, @DISPLAYPLU, @STOCKTYPE)

  </entry>

    <entry key="get-storeInternalSystem">
     DECLARE
          @StoreCode char(8),
          @Usage int

        SET @StoreCode = ?
        SET @Usage = ?

      SELECT value
    FROM STORE_INTER_SYS
    WHERE STORECODE = @StoreCode AND USAGE = @Usage
    </entry>

    <entry key="get-cash-balance">
    SELECT
      SUM(Debit) - SUM(Credit) +
      SUM(ChangeFund) - SUM(Pickup) +
      SUM(Loan) + SUM(PayIn) as cashOnHand
    FROM
      TXU_TOTAL_DRAWER_FINANCIAL
    WHERE
      RetailStoreId = ? AND
      TillID = ? AND
      BusinessDayDate = ? AND
      AccountCode IN (301, 201, 202, 203, 801)
    </entry>
    
    <entry key="get-previous-amount">
    DECLARE
    @storeid varchar(MAX),
    @companyid varchar(MAX)
    
    SET @companyid = ?
    SET @storeid = ?
    
  SELECT TOP 1
    CompanyId,
    RetailStoreId,
    TxType,
    BusinessDayDate,
    SystemDateTime,
    Tx
FROM
    RESTransaction.dbo.TXL_SALES_JOURNAL
WHERE
    CompanyId = @companyid AND
    RetailStoreId = @storeid
    AND TxType = 'SOD' order by SystemDateTime desc
    </entry>

    <entry key="check-printer-if-existing">
    SELECT Status FROM RESMaster.dbo.MST_PRINTERINFO
          WHERE  StoreId = ? AND PrinterId = ? ;
  </entry>

  <entry key="update-deleted-printerinfo">

    DECLARE
    @storeid varchar(MAX),
    @printerid varchar(MAX)

    SET @storeid = ?
    SET @printerid = ?

    UPDATE
    RESMaster.dbo.MST_PRINTERINFO

    SET
      StoreId=@storeid,
      PrinterId=@printerid,
      PrinterName=?,
      IpAddress=?,
      PortNumTcp=?,
      PortNumUdp=?,
      Description=?,
      UpdAppId=?,
      UpdOpeCode=?,
      UpdDate = GETDATE(),
      Status='Active'

    OUTPUT
      INSERTED.StoreId,
      INSERTED.PrinterId,
      INSERTED.PrinterName,
      INSERTED.Description,
      INSERTED.IpAddress,
      INSERTED.PortNumTcp,
      INSERTED.PortNumUdp

    WHERE
    StoreId= @storeid AND PrinterId= @printerid AND Status = 'Deleted'
  </entry>

    <!-- ******************* Start of Classes **************** -->

    <entry key="get-class-list">
  DECLARE @itemclass varchar(MAX), @storeid varchar(MAX), @dpt varchar(MAX), @limit int, @name varchar(MAX)
    SET @limit = ?
    SET @storeid = ?
    SET @dpt = ?
    SET @itemclass = ?
    SET @name = ?
    SET @limit = (CASE
           WHEN(@limit > -1)
               THEN @limit
               ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_CLASSINFO)
           END)

    SELECT TOP (@limit)
      StoreId,
      Class,
      ClassName,
      ClassNameLocal,
      Dpt,
      Line,
      TaxType,
      TaxRate,
      DiscountType,
      ExceptionFlag,
      DiscountFlag,
      DiscountAmt,
      DiscountRate,
      AgeRestrictedFlag,
      InheritFlag,
      SubSmallInt5
    FROM
      RESMaster.dbo.MST_CLASSINFO
    WHERE
      (@storeid IS NULL OR len(@storeid) = 0 OR StoreId = @storeid)
      AND (@dpt IS NULL OR len(@dpt) = 0 OR Dpt = @dpt)
      AND (@itemclass IS NULL OR len(@itemclass) = 0  OR (Class like @itemclass  {ESCAPE '\'}) )
      AND (@name IS NULL OR len(@name) = 0 
        OR ( LOWER(ClassName) like LOWER(@name)  {ESCAPE '\'} ) 
        OR ( LOWER(ClassNameLocal) like LOWER(@name)  {ESCAPE '\'} ) 
      )
  </entry>
  <entry key="delete-class">
      DECLARE
        @storeid varchar(max),
        @department varchar(max),
        @line varchar(max),
        @itemclass varchar(max)

    SET @storeid=?
    SET @department=?
    SET @line=?
    SET @itemclass=?

      DELETE FROM
        RESMaster.dbo.MST_CLASSINFO
      WHERE
        StoreId = @storeid
        AND Dpt = @department
        AND Line = @line
        AND Class = @itemclass
    </entry>
    <entry key="insert-class">
    INSERT INTO RESMaster.dbo.MST_CLASSINFO
           (StoreId,
           Class,
           ClassName,
           ClassNameLocal,
           Dpt,
           Line,
           TaxType,
           TaxRate,
           DiscountType,
           ExceptionFlag,
           DiscountFlag,
           DiscountAmt,
           DiscountRate,
           AgeRestrictedFlag,
           InheritFlag,
           SubSmallInt5,
           UpdAppId,
           UpdOpeCode,
           InsDate,
           UpdDate
           )
       VALUES
           (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,GETDATE(),GETDATE());
    </entry>
    <entry key="select-class-details">
    SELECT
      StoreId,
      Class,
             ClassName,
             ClassNameLocal,
             Dpt,
             Line,
             TaxType,
             TaxRate,
             DiscountType,
             ExceptionFlag,
             DiscountFlag,
             DiscountAmt,
             DiscountRate,
             AgeRestrictedFlag,
            InheritFlag,
             SubSmallInt5
    FROM
      RESMaster.dbo.MST_CLASSINFO
    WHERE
      StoreId = ?
      AND Dpt = ?
      AND Line = ?
      AND Class = ?
    </entry>
    <entry key="update-class">
      DECLARE
        @storeid varchar(max),
        @itemclass varchar(max),
        @classname varchar(max),
      @classnamelocal varchar(max),
      @dpt varchar(max),
      @line varchar(max),
      @taxtype numeric(1,0),
      @taxrate numeric(5,0),
      @discounttype numeric(1,0),
      @exceptionflag numeric(1,0),
      @discountflag numeric(1,0),
      @discountamt numeric(10,0),
      @discountrate numeric(8,3),
      @agerestrictedflag numeric(1,0),
      @inheritflag numeric(1,0),
      @subSmallInt5 numeric(1,0),
      @updappid varchar(max),
      @updopecode varchar(max),
      @oldstoreid varchar(max),
      @olddpt varchar(max),
      @oldline varchar(max),
      @oldclass varchar(max)

      SET @storeid = ?
        SET @itemclass = ?
        SET @classname = ?
      SET @classnamelocal = ?
      SET @dpt = ?
      SET @line = ?
      SET @taxtype = ?
      SET @taxrate = ?
      SET @discounttype = ?
      SET @exceptionflag = ?
      SET @discountflag = ?
      SET @discountamt = ?
      SET @discountrate = ?
      SET @agerestrictedflag = ?
      SET @inheritflag = ?
      SET @subsmallint5 = ?
      SET @updappid  = ?
      SET @updopecode = ?
      SET @oldstoreid = ?
      SET @olddpt = ?
        SET @oldline = ?
        SET @oldclass = ?

      UPDATE
        RESMaster.dbo.MST_CLASSINFO
      SET
        StoreId=
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,
        Class=
        CASE
          WHEN len(@itemclass) > 0 THEN @itemclass
          ELSE Class
        END,
        ClassName=
          CASE
          WHEN (len(@classname) > 0 OR @classname='') THEN @classname
          ELSE ClassName
        END,
        ClassNameLocal=
          CASE
          WHEN (len(@classnamelocal) > 0 OR @classnamelocal='') THEN @classnamelocal
          ELSE ClassNameLocal
        END,
        Dpt=
        CASE
        WHEN len(@dpt) > 0 THEN @dpt
        ELSE Dpt
      END,
      Line=
        CASE
          WHEN len(@line) > 0 THEN @line
          ELSE Line
        END,
      TaxRate=@taxrate,
      TaxType=@taxtype,
      DiscountType=@discounttype,
      ExceptionFlag=@exceptionflag,
      DiscountFlag=@discountflag,
      DiscountAmt=@discountamt,
      DiscountRate= @discountrate,
      AgeRestrictedFlag=@agerestrictedflag,
      InheritFlag=@inheritflag,
      SubSmallInt5=@subsmallint5,
        UpdDate = GETDATE(),
      UpdAppId=@updappid,
      UpdOpeCode=@updopecode

      OUTPUT
        INSERTED.StoreId, INSERTED.Class, INSERTED.ClassName, INSERTED.ClassNameLocal,
        INSERTED.Dpt, INSERTED.Line, INSERTED.TaxType, INSERTED.TaxRate,
        INSERTED.DiscountType, INSERTED.ExceptionFlag, INSERTED.DiscountFlag,
        INSERTED.DiscountAmt, INSERTED.DiscountRate, INSERTED.AgeRestrictedFlag,
        INSERTED.InheritFlag, INSERTED.SubSmallInt5
      WHERE
         StoreId = @oldstoreid AND Dpt = @olddpt AND  Line = @oldline AND  Class = @oldclass
    </entry>


    <!-- ******************* Start of Line **************** -->

    <entry key="get-line-list">
  DECLARE @line varchar(MAX), @storeid varchar(MAX),  @dpt varchar(MAX), @limit int, @name varchar(MAX)
    SET @limit = ?
    SET @storeid = ?
    SET @dpt = ?
    SET @line = ?
    SET @name = ?
    SET @limit = (CASE
           WHEN(@limit > -1)
               THEN @limit
               ELSE (SELECT COUNT(*) FROM RESMaster.dbo.MST_LINEINFO)
           END)

    SELECT TOP (@limit)
      StoreId,
      Line,
      LineName,
      LineNameLocal,
      Dpt,
      TaxType,
      TaxRate,
      DiscountType,
      ExceptionFlag,
      DiscountFlag,
      DiscountAmt,
      DiscountRate,
      AgeRestrictedFlag,
      InheritFlag,
      SubSmallInt5
    FROM
      RESMaster.dbo.MST_LINEINFO
    WHERE
      (@storeid IS NULL OR len(@storeid) = 0 OR StoreId = @storeid)
      AND (@dpt IS NULL OR len(@dpt) = 0 OR Dpt = @dpt)
      AND (@line IS NULL OR len(@line) = 0 OR ( Line like @line {ESCAPE '\'} ))
      AND (@name IS NULL OR len(@name) = 0 
      OR ( LOWER(LineName) like LOWER(@name) {ESCAPE '\'} ) 
      OR ( LOWER(LineNameLocal) like LOWER(@name) {ESCAPE '\'} )
      )
  </entry>
    <entry key="delete-line">
      DECLARE
        @storeid varchar(max),
        @department varchar(max),
        @line varchar(max)

    SET @storeid=?
    SET @department=?
    SET @line=?

      DELETE FROM
        RESMaster.dbo.MST_LINEINFO
      WHERE
        StoreId = @storeid
        AND Dpt = @department
        AND Line = @line
    </entry>
    <entry key="insert-line">
    INSERT INTO RESMaster.dbo.MST_LINEINFO
           (StoreId,
           Line,
           LineName,
           LineNameLocal,
           Dpt,
           TaxType,
           TaxRate,
           DiscountType,
           ExceptionFlag,
           DiscountFlag,
           DiscountAmt,
           DiscountRate,
           AgeRestrictedFlag,
           InheritFlag,
           SubSmallInt5,
           UpdAppId,
           UpdOpeCode,
           InsDate,
           UpdDate
           )
       VALUES
           (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,GETDATE(),GETDATE());
    </entry>
<entry key="get-accountancy-report">
    DECLARE @storeid VARCHAR(6),@tillid VARCHAR(40),@businessdaydate VARCHAR(15)
        SET @storeid = LTRIM(RTRIM(?))
        SET @tillid = ?
        SET @businessdaydate = ?
    SELECT
        NT.AccountancyAccount,NT.AccountancyAmount,NT.AccountancyItemName,NT.SalesOrPay
    FROM
        ((SELECT
           <!--1  売上-->
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount,
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)) AS AccountancyAmount,
            'Sales' AS AccountancyItemName,
            '1-01' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--2 売上値引-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '1' AND financiall.AccountCodeExtend NOT IN('3','103') THEN financiall.Count1 ELSE 0 END),0) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) AS AccountancyAmount,
            'SalesDiscount' AS AccountancyItemName,
            '1-02' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--3 取消-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount ,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND financiall.AccountSubCode = '3' THEN financiall.Credit ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)) AS AccountancyAmount ,
            'Cancel' AS AccountancyItemName,
            '1-03' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
        )
       UNION ALL
       (SELECT
         <!--小計-->
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Count1 ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount ,
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode in ( '1','3')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)) AS AccountancyAmount ,
            'SalesSubTotal' AS AccountancyItemName,
            '1-04' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--4  返品売上-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END),0)) AS AccountancyAccount ,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)) AS AccountancyAmount ,
            'ReturnSales' AS AccountancyItemName,
            '1-05' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--5  返品値引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' AND financiall.AccountCodeExtend NOT IN('3','103') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' THEN financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'ReturnDiscount' AS AccountancyItemName,
            '1-06' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
             <!--6 返品取消-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Count1 ELSE 0 END),0)+
             ISNULL ( SUM (CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.count1 ELSE 0 END),0)) AS AccountancyAccount ,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '4' THEN financiall.Debit+financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM (CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Debit+financiall.Credit ELSE 0 END),0)) AS AccountancyAmount ,
            'ReturnCancel' AS AccountancyItemName,
            '1-07' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
         <!--小計-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Count1 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.count1 ELSE 0 END),0)) AS AccountancyAccount ,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' THEN financiall.Credit+financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '4' THEN financiall.Debit+financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM (CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Debit+financiall.Credit ELSE 0 END),0)) AS AccountancyAmount ,
            'ReturnSubTotal' AS AccountancyItemName,
            '1-08' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
           <!--7 純売上-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Count1 ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.count1 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5'  THEN financiall.Debit-financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '3' THEN financiall.Credit ELSE 0 END),0)-
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode = '2' THEN financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0) +
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Credit ELSE 0 END),0)) AS AccountancyAmount ,
            'NetSales' AS AccountancyItemName,
            '1-09' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--8  純売上(税抜)-->
            '0' as AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5'  THEN financiall.Debit-financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13') AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='3' and financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END), 0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '2' THEN financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='2' AND financiall.AccountCodeExtend != '2' THEN financiall.Debit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '4' THEN financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN('1','4') THEN financiall.Credit ELSE 0 END ),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Credit ELSE 0 END ),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='4' AND financiall.AccountCodeExtend != '2' then financiall.Credit ELSE 0 END),0) 
             ) AS AccountancyAmount ,
            'TaxNetSales' AS AccountancyItemName,
            '1-10' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Count1 ELSE 0 END),0) +
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.count1 ELSE 0 END), 0)) AS AccountancyAccount,
          ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN('1','13') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0)+
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode='8' AND financiall.AccountSubCode='1' and financiall.AccountCodeExtend != '2' THEN financiall.Credit ELSE 0 END), 0)) AS AccountancyAmount,
            'TotalSales' AS AccountancyItemName,
            '1-11' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--10  総売上(税抜)-->
             '0' AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode = '1' THEN financiall.Credit ELSE 0 END ),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend= '2' AND financiall.AccountSubCode= '1' THEN financiall.Credit ELSE 0 END),0)
             ) AS AccountancyAmount,
            'TaxTotalSales' AS AccountancyItemName,
            '1-12' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--＜税別内訳＞-->
            <!--12 課税(税抜)-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0))
             AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend  in ('0', '1') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND  financiall.AccountSubCode IN ('1','2','3','4') AND financiall.AccountCodeExtend not IN ('101', '102') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) -
           ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Credit ELSE 0 END ),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Credit ELSE 0 END ),0)
            )AS AccountancyAmount,
            'Taxation' AS AccountancyItemName,
            '1-13' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
         INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--13 税-->
             '0'  AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Credit ELSE 0 END ),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '501' AND financiall.AccountCodeExtend !='1' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Credit ELSE 0 END ),0) 
             )AS AccountancyAmount,
            'Tax' AS AccountancyItemName,
            '1-14' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--14免税-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend  not in ('0','1', '2') AND  financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND  financiall.AccountSubCode IN ('1','2','3','4') AND financiall.AccountCodeExtend  in ('101','201') THEN financiall.Debit-financiall.Credit ELSE 0 END),0 )) AS AccountancyAmount,
            'TaxExemption' AS AccountancyItemName,
            '1-15' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
         <!--計-->
         ((ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
           ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0', '1') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) +
         (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
          ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','8','13') AND financiall.AccountCodeExtend not in ('0','1', '2')  AND  financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0))) AS AccountancyAccount,
         (ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend in ('0','1') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0 ) -
          ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('5') AND  financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0 ) +
          ISNULL ( SUM ( CASE WHEN financiall.AccountCode IN ('1','13','8') AND financiall.AccountCodeExtend not in ('0','1','2') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Credit-financiall.Debit ELSE 0 END),0 ) ) AS AccountancyAmount,
          'AmountSubtoal' AS AccountancyItemName,
          '1-16' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--＜値引内訳＞-->
            <!--16  明細割引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('1','101') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('1','101') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('1','101') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'ItemDiscounts' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
          <!--17  明細値引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('2','102') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('2','102') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN('2','102') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'ItemNebiki' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
          <!--18 イベント-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('10', '110') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('10', '110') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('10', '110') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'EventsName' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
          <!--19 社員販売-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('9', '109') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('9', '109') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('9', '109') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'EmployeeSales' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
       <!--20 小計割引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('4', '104') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('4', '104') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('4', '104') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'SubtotalDiscounts' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--21 小計値引-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('5', '105') AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('5', '105') AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend IN ('5', '105') AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'SubtotaNebiki' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!-- 計-->
            '0' AS AccountancyAccount,
            ISNULL ( SUM (CASE WHEN financiall.AccountCode = '5' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '2' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '10' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '9' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '4' THEN financiall.Debit ELSE 0 END),0)+
--             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '5' AND financiall.AccountCodeExtend = '5' THEN financiall.Debit ELSE 0 END),0)) AS AccountancyAmount,
            'DicountsSubtotal' AS AccountancyItemName,
            '3' AS SalesOrPay
         FROM TXU_TOTAL_DRAWER_FINANCIALALL
         AS financiall
         INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--＜ギフトカード販売-->
            <!--23 販売-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('3') THEN financiall.Count1 ELSE 0 END),0) )
              AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1') THEN financiall.Credit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('3') THEN financiall.Debit ELSE 0 END),0) )
             AS AccountancyAmount,
            'Sell' AS AccountancyItemName,
            '1-17' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--24 販売取消-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2') THEN financiall.Count1 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('4') THEN financiall.Count1 ELSE 0 END),0) )
              AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2') THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('4') THEN financiall.Credit ELSE 0 END),0) )
             AS AccountancyAmount,
            'SellCancel' AS AccountancyItemName,
            '1-18' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
             <!--計-->
             (ISNULL ( SUM (CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Count1 ELSE 0 END),0)-
              ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
            (ISNULL ( SUM (CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('1','4') THEN financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '8' AND financiall.AccountCodeExtend = '2' AND financiall.AccountSubCode IN ('2','3') THEN financiall.Debit ELSE 0 END),0)) AS AccountancyAmount,
            'SellSubtotal' AS AccountancyItemName,
            '1-19' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜前受金＞-->
            <!--26 前受金-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '3' THEN financiall.credit ELSE 0 END),0))AS AccountancyAmount,
            'Advances' AS AccountancyItemName,
            '1-20' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--27 前受金取消-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Credit ELSE 0 END),0)) AS AccountancyAmount,
            'AdvancesCancel' AS AccountancyItemName,
            '1-21' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
        (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--計-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Count1 ELSE 0 END),0)) AS AccountancyAccount,
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '12' AND financiall.AccountSubCode IN ('3','1') AND financiall.Credit &gt;'0' THEN financiall.Credit ELSE 0 END),0)) AS AccountancyAmount,
            'AdvancesSubtotal' AS AccountancyItemName,
            '1-22' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
        (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜金種別内訳＞-->
            <!--29 現金-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)-
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Count2 ELSE 0 END),0 )) AS AccountancyAccount,
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) -
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0 )) AS AccountancyAmount,
            'Cash' AS AccountancyItemName,
             '2-01' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--30 クレジット-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'Credit' AS AccountancyItemName,
            '2-02' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--31 銀聯-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'UnionPay' AS AccountancyItemName,
            '2-03' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--32 ギフトカード-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'GiftCard' AS AccountancyItemName,
            '2-04' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
           (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
       <!--33 商品券-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'GiftCertificates' AS AccountancyItemName,
            '2-05' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--34 振込入金-->
           (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS AccountancyAmount,
            'TransferPayment' AS AccountancyItemName,
            '2-06' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!--34 前受金売上-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) AS AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) AS AccountancyAmount,
            'AdvancesSales' AS AccountancyItemName,
            '2-07' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
        UNION ALL
       (SELECT
            <!--計-->
           ( ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Count2 ELSE 0 END),0 )+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
       ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2')  THEN financiall.Count2 ELSE 0 END),0)- 
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('4','3')  THEN financiall.Count2 ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1'  THEN financiall.Count2 ELSE 0 END),0)) as AccountancyAccount, 
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '3' THEN financiall.Debit ELSE 0 END),0 )+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '361' AND financiall.AccountSubCode IN ('1','2','3','4') THEN financiall.Debit-financiall.Credit ELSE 0 END),0)+
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode = '1' THEN financiall.Debit ELSE 0 END),0) 
             ) AS AccountancyAmount,
            'GoldSpeciesSubtotal' AS AccountancyItemName,
            '2-08' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜商品券内訳＞-->
            <!--47 回収金-->
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','2') THEN financiall.Amount3 ELSE 0 END),0)-
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('4','3') THEN financiall.Amount3 ELSE 0 END),0)) as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount1 ELSE 0 END),0))
AS AccountancyAmount,
            'Collected' AS AccountancyItemName,
            '2-22' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!-- 払戻金-->
       (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('1','2') THEN financiall.Count1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('4','3') THEN financiall.Count1 ELSE 0 END),0)) +
(ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','2') THEN financiall.Count1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('4','3') THEN financiall.Count1 ELSE 0 END),0))
 AS AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount1 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount1 ELSE 0 END),0)) +
(ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount2 ELSE 0 END),0)-
ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount2 ELSE 0 END),0))
 AS AccountancyAmount,
            'Modokinn' AS AccountancyItemName,
            '2-23' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--48 中止回数-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '900' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) AS AccountancyAccount,
            '0' AS AccountancyAmount,
            'Discontinuation' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
             <!--49 両替回数-->
            ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '1201' AND financiall.AccountSubCode = '1' THEN financiall.Count2 ELSE 0 END),0) AS AccountancyAccount,
            '0' AS AccountancyAmount,
            'Exchange' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜収入印紙＞-->
            <!--50 印紙200-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '200' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '200' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp200' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--51 印紙400-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '400' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '400' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp400' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--52 印紙600-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '600' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '600' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp600' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--53 印紙1000-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '1000' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '1000' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp1000' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
         )
         UNION ALL
       (SELECT
            <!--54 印紙2000-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '2000' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '2000' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp2000' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--55 印紙4000-->
            '0' as AccountancyAccount,
            (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '4000' AND financiall.AccountSubCode IN('1','4') THEN financiall.Count2 ELSE 0 END),0) -
             ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '502' AND financiall.AccountCodeExtend = '4000' AND financiall.AccountSubCode IN('2','3') THEN financiall.Count2 ELSE 0 END),0)) AS AccountancyAmount,
            'Stamp4000' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_DRAWER_FINANCIALALL
        AS financiall
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = financiall.RetailStoreId
        WHERE financiall.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN financiall.RetailStoreId
                                       ELSE  @storeid  END
         AND financiall.BusinessDayDate = @businessdaydate
         AND financiall.TillID = CASE WHEN @tillid = '' THEN financiall.TillID ELSE @tillid END
       )
         UNION ALL
       (SELECT
            <!--＜商品券内訳＞-->
            <!--36 買物券-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '91' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '91' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'BarneysVoucher' AS AccountancyItemName,
            '2-09' AS SalesOrPay

        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
           UNION ALL
       (SELECT
            <!--37 ギフト券-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '92' THEN giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '92' THEN giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'BarneysGift' AS AccountancyItemName,
            '2-10' AS SalesOrPay

        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--38 伊勢丹-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '93' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '93' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'IsetanGift' AS AccountancyItemName,
            '2-11' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
           <!--39 DC-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '01' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '01' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'DC' AS AccountancyItemName,
            '2-12' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--40 AMEX-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '02' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '02' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'AMEX' AS AccountancyItemName,
            '2-13' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--41 JCB-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '03' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '03' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'JCB' AS AccountancyItemName,
            '2-14' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
          (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--42 Diners-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '04' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '04' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Diners' AS AccountancyItemName,
            '2-15' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--43 三井-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '06' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '06' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Mitsui' AS AccountancyItemName,
            '2-16' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--44 軽井沢-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '08' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '08' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Prince' AS AccountancyItemName,
            '2-17' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!--45 Chel 2000-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '09' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '09' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Chel2000' AS AccountancyItemName,
            '2-18' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--45 Chel 1000-->
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '10' THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode = '10' THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Chel1000' AS AccountancyItemName,
            '2-19' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
       UNION ALL
       (SELECT
            <!--その他-->
             ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode NOT IN('91','92','93','01','02','03','04','06','08','10','09')  THEN  giftcertificate.Count ELSE 0 END),0) as AccountancyAccount,
            ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' AND giftcertificate.CompanyCode NOT IN('91','92','93','01','02','03','04','06','08','10','09') THEN  giftcertificate.Amount1 ELSE 0 END),0) AS AccountancyAmount,
            'Sonota' AS AccountancyItemName,
            '2-20' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
        AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
          UNION ALL
       (SELECT
            <!--計-->
            ( ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' THEN  giftcertificate.Count ELSE 0 END),0) ) AS AccountancyAccount,
            ( ISNULL ( SUM ( CASE WHEN giftcertificate.AccountCode = '351' THEN  giftcertificate.Amount1 ELSE 0 END),0) ) AS AccountancyAmount,
            'GiftCertificatesSubtotal' AS AccountancyItemName,
            '2-21' AS SalesOrPay
        FROM TXU_GIFTCERTIFICATE
         AS  giftcertificate
        INNER JOIN
         (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   storeinfo.StoreType = CASE WHEN @storeid = '0001' THEN '1'
                                       ELSE CASE WHEN @storeid = '0002' THEN '3'
                                       ELSE storeinfo.StoreType
                                       END
                                       END
         ) storeinfo
         ON storeinfo.StoreId = giftcertificate.RetailStoreId
         WHERE giftcertificate.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN giftcertificate.RetailStoreId
                                       ELSE  @storeid  END
         AND giftcertificate.BusinessDayDate = @businessdaydate
         AND giftcertificate.TillID = CASE WHEN @tillid = '' THEN giftcertificate.TillID ELSE @tillid END
       )
           UNION ALL
       (SELECT
            <!--11 客数-->
           (ISNULL  (SUM ( guestTillDay.SalesGuestCnt),0) -
            ISNULL ( SUM ( guestTillDay.ReturnGuestCnt),0) -
            ISNULL ( SUM ( guestTillDay.VoidGuestCnt),0)
            ) AS AccountancyAccount,
            '0' as AccountancyAmount,
            'Customers' AS AccountancyItemName,
            '3' AS SalesOrPay
        FROM TXU_TOTAL_GUESTTILLDAY
        AS guestTillDay
        INNER JOIN
        (SELECT  StoreId
         FROM    RESMaster.dbo.MST_STOREINFO storeinfo
         WHERE   COALESCE(storeinfo.StoreType, -1) = CASE WHEN @storeid = '0001' THEN '1'
                                                        ELSE CASE WHEN @storeid = '0002' THEN '3'
                                                        ELSE COALESCE(storeinfo.StoreType, -1)
                                                        END
                                                        END
         ) storeinfo
         ON storeinfo.StoreId = guestTillDay.RetailStoreId
         WHERE guestTillDay.RetailStoreId = CASE WHEN @storeid = '0000' OR @storeid = '0001' OR @storeid = '0002' THEN guestTillDay.RetailStoreId
                                       ELSE  @storeid  END
         AND guestTillDay.BusinessDayDate = @businessdaydate
         AND guestTillDay.TillID = CASE WHEN @tillid = '' THEN guestTillDay.TillID ELSE @tillid END

       )
) AS NT
ORDER BY SalesOrPay
</entry>


  <entry key="get-guest-order-info-by-sequenceNo">
     DECLARE @RetailStoreId VARCHAR(20), 
             @BusinessDate varchar(16),
             @TranNo numeric(5, 0),
             @TerminalNo varchar(6)
             
     SET @RetailStoreId= LTRIM(RTRIM(?))
   SET @TerminalNo =LTRIM(RTRIM(?))
     SET @TranNo = LTRIM(RTRIM(?))
     SET @BusinessDate = ?

     SELECT TOP 1 ps.GuestNo
     FROM   (
              (
                SELECT ord.GuestNo 
              FROM   TXL_POS_GUEST_ORDER ord 
          WHERE  ord.RetailStoreId = @RetailStoreId
          AND    ord.TerminalNo = @TerminalNo
          AND    ord.TranNo = @TranNo
              AND    ord.BusinessDate = @BusinessDate
          AND    ord.StatusCode = '0'
            )
            UNION ALL 
            (
              SELECT res.GuestNo 
              FROM   TXL_POS_GUEST_RESERVATION res
              WHERE  res.RetailStoreId=@RetailStoreId
            AND    res.TerminalNo=@TerminalNo
              AND    res.TranNo=@TranNo
              AND    res.BusinessDate=@BusinessDate
                AND    res.StatusCode='0'
            )
            ) AS ps  
  </entry>

    <entry key="select-line-details">
    SELECT
      StoreId,
      Line,
      LineName,
      LineNameLocal,
      Dpt,
      TaxType,
      TaxRate,
      DiscountType,
      ExceptionFlag,
      DiscountFlag,
      DiscountAmt,
      DiscountRate,
      AgeRestrictedFlag,
      InheritFlag,
      SubSmallInt5
    FROM
      RESMaster.dbo.MST_LINEINFO
    WHERE
      StoreId = ?
      AND Dpt = ?
      AND Line = ?
    </entry>

    <entry key="update-line">
      DECLARE
        @storeid varchar(max),
        @line varchar(max),
        @linename varchar(max),
      @linenamelocal varchar(max),
      @dpt varchar(max),
      @taxtype numeric(1,0),
      @taxrate numeric(5,0),
      @discounttype numeric(1,0),
      @exceptionflag numeric(1,0),
      @discountflag numeric(1,0),
      @discountamt numeric(10,0),
      @discountrate numeric(8,3),
      @agerestrictedflag numeric(1,0),
      @inheritflag numeric(1,0),
      @subSmallInt5 numeric(1,0),
      @updappid varchar(max),
      @updopecode varchar(max),
      @oldstoreid varchar(max),
        @oldline varchar(max),
      @olddpt varchar(max)

      SET @storeid = ?
        SET @line = ?
        SET @linename = ?
      SET @linenamelocal = ?
      SET @dpt = ?
      SET @taxtype = ?
      SET @taxrate = ?
      SET @discounttype = ?
      SET @exceptionflag = ?
      SET @discountflag = ?
      SET @discountamt = ?
      SET @discountrate = ?
      SET @agerestrictedflag = ?
      SET @inheritflag = ?
      SET @subsmallint5 = ?
      SET @updappid  = ?
      SET @updopecode = ?
      SET @oldstoreid = ?
      SET @olddpt = ?
        SET @oldline = ?

      UPDATE
        RESMaster.dbo.MST_LINEINFO
      SET
        StoreId=
        CASE
          WHEN len(@storeid) > 0 THEN @storeid
          ELSE StoreId
        END,
        Line=
        CASE
          WHEN len(@line) > 0 THEN @line
          ELSE Line
        END,
        LineName=
          CASE
          WHEN (len(@linename) > 0 OR @linename='') THEN @linename
          ELSE LineName
        END,
        LineNameLocal=
          CASE
          WHEN (len(@linenamelocal) > 0 OR @linenamelocal='') THEN @linenamelocal
          ELSE LineNameLocal
        END,
        Dpt=
        CASE
        WHEN len(@dpt) > 0 THEN @dpt
        ELSE Dpt
      END,
      TaxRate=@taxrate,
      TaxType=@taxtype,
      DiscountType=@discounttype,
      ExceptionFlag=@exceptionflag,
      DiscountFlag=@discountflag,
      DiscountAmt=@discountamt,
      DiscountRate= @discountrate,
      AgeRestrictedFlag=@agerestrictedflag,
      InheritFlag=@inheritflag,
      SubSmallInt5=@subsmallint5,
        UpdDate = GETDATE(),
      UpdAppId=@updappid,
      UpdOpeCode=@updopecode

      OUTPUT
        INSERTED.StoreId, INSERTED.Line, INSERTED.LineName, INSERTED.LineNameLocal,
        INSERTED.Dpt, INSERTED.TaxType, INSERTED.TaxRate,
        INSERTED.DiscountType, INSERTED.ExceptionFlag, INSERTED.DiscountFlag,
        INSERTED.DiscountAmt, INSERTED.DiscountRate, INSERTED.AgeRestrictedFlag,
        INSERTED.InheritFlag, INSERTED.SubSmallInt5
      WHERE
         StoreId = @oldstoreid AND Dpt = @olddpt AND  Line = @oldline
    </entry>

  <entry key="get-total-amount">
    SELECT 
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '801' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.ChangeFund ELSE 0 END),0) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '201' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Loan ELSE 0 END),0) -
      ((ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount1 ELSE 0 END),0)-
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '392' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount1 ELSE 0 END),0)) +
      (ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('1','4') THEN financiall.Amount2 ELSE 0 END),0)-
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '351' AND financiall.AccountSubCode IN('2','3') THEN financiall.Amount2 ELSE 0 END),0))) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '301' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS Cash,
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '331' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '341' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) +
      ISNULL ( SUM ( CASE WHEN financiall.AccountCode = '350' AND financiall.AccountSubCode IN ('1','2','3','4')  THEN financiall.Debit-financiall.Credit ELSE 0 END),0) AS Credit,
      ISNULL ( SUM ( CASE WHEN gift.AccountSubCode IN ('1','2','3','4') THEN gift.Amount2 ELSE 0 END), 0) AS GiftCard
    FROM TXU_TOTAL_DRAWER_FINANCIALALL financiall
    LEFT JOIN TXU_GIFTCERTIFICATE gift
    ON   financiall.AccountCode = gift.AccountCode
    AND  financiall.AccountSubCode = gift.AccountSubCode
    AND  financiall.TillID = gift.TillID
    AND  financiall.RetailStoreId = gift.RetailStoreId
    AND  financiall.BusinessDayDate = gift.BusinessDayDate  
    WHERE financiall.RetailStoreId = ? AND financiall.TillID = ? AND financiall.BusinessDayDate = ?
  </entry>
   
  <entry key="get-premium-flag">
SET NOCOUNT ON
IF OBJECT_ID('tempdb..#TEMPTABLE') IS NOT NULL
BEGIN
    DROP TABLE #TEMPTABLE
END
IF OBJECT_ID('tempdb..#TEMPLIST') IS NOT NULL
BEGIN
    DROP TABLE #TEMPLIST
END 
IF OBJECT_ID('tempdb..#FLAGTABLE') IS NOT NULL
BEGIN
    DROP TABLE #FLAGTABLE
END 
CREATE TABLE #FLAGTABLE
(
    DptId varchar(50), 
    Flag varchar(2),
    primary key (DptId)
)
DECLARE
    @CompanyId VARCHAR (20),
    @BizCatId VARCHAR (20),
    @StoreId VARCHAR (20),
    @TerminalId VARCHAR (20),
    @DptId VARCHAR (20),
    @TargetType VARCHAR (20),
    @FLAG VARCHAR (20),
    @DptIdList VARCHAR(1000),
    @i INT,
    @splen INT,
    @spli VARCHAR(10)
SET @CompanyId = LTRIM(RTRIM(?))
SET @StoreId = LTRIM(RTRIM(?))
SET @TerminalId = LTRIM(RTRIM(?))
SET @DptIdList = LTRIM(RTRIM(?))
SELECT
    INFO.CompanyId,
    INFO.RecordId,
    INFO.TargetType,
    INFO.TargetFlag,
    INFO.PremiumName,
    INFO.DptTargetType,
    INFO.BizCatTargetType,
    INFO.StoreTargetType,
    INFO.PosTargetType,
    STORE.BizCatId,
    STORE.StoreId,
    STORE.TerminalId,
    DETAIL.DptId 
INTO
     #TEMPTABLE
FROM
    RESMaster.DBO.MST_PREMIUM_INFO INFO
INNER JOIN RESMaster.DBO.MST_PREMIUM_STORE STORE ON INFO.CompanyId = STORE.CompanyId
AND INFO.RecordId = STORE.RecordId
INNER JOIN RESMaster.DBO.MST_PREMIUM_DETAIL DETAIL ON INFO.CompanyId = DETAIL.CompanyId
AND INFO.RecordId = DETAIL.RecordId
WHERE
    INFO.DeleteFlag = 0.0
AND STORE.DeleteFlag = 0.0
AND DETAIL.DeleteFlag = 0.0
AND INFO.CompanyId = @CompanyId

SET @BizCatId = (
        SELECT 
            SubCode1 
        FROM 
            RESMaster.DBO.MST_STOREINFO 
        WHERE 
            CompanyId = @CompanyId 
        AND StoreId = @StoreId
        AND DeleteFlag = 0.0
    )
SET @TargetType = 
    (
        CASE
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '4'
            AND BizCatId = @BizCatId
            AND StoreId = @StoreId
            AND TerminalId = @TerminalId
        ) &gt; 0 
        THEN
            '4'
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '3'
            AND BizCatId = @BizCatId
            AND StoreId = @StoreId
            AND TerminalId = '0000'
        ) &gt; 0 
        THEN
            '3'
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '2'
            AND BizCatId = @BizCatId
            AND StoreId = '0000'
            AND TerminalId = '0000'
        ) &gt; 0 
        THEN
            '2'
        WHEN (
            SELECT
                COUNT(CompanyId)
            FROM
                #TEMPTABLE
            WHERE
                TargetType = '1'
            AND BizCatId = '00'
            AND StoreId = '0000'
            AND TerminalId = '0000'
        ) &gt; 0 
        THEN
            '1'
        ELSE
            '0'
        END
    )
IF @TargetType &gt; '0'
    BEGIN
        SET @BizCatId = (
            CASE
                WHEN @TargetType = '1' 
                THEN
                    '00'
                ELSE
                    @BizCatId
            END
        )
        SET @StoreId = (        
            CASE
                WHEN @TargetType = '1'
                OR @TargetType = '2' 
                THEN
                    '0000'
                ELSE
                    @StoreId
            END
        )
        SET @TerminalId = (
            CASE
                WHEN @TargetType = '1'
                OR @TargetType = '2'
                OR @TargetType = '3' 
                THEN
                    '0000'
                ELSE
                    @TerminalId
            END 
        )
        SELECT
            * 
        INTO 
            #TEMPLIST
        FROM
            #TEMPTABLE
        WHERE
            TargetType = @TargetType
        AND BizCatId = @BizCatId
        AND StoreId = @StoreId
        AND TerminalId = @TerminalId

        SET @spli = ','
        SET @DptIdList = @DptIdList + ','
        SET @splen = len(@spli)
        SET @i = CHARINDEX(@spli,@DptIdList)
        WHILE @i &gt; 0
        BEGIN
            SET @DptId = left(@DptIdList,@i-1)
            IF @DptId &lt;&gt; ''
            BEGIN
                SET @FLAG = 
                 CASE
                    WHEN EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 1
                        AND DptTargetType = 1
                    ) THEN
                        '1'
                    WHEN NOT EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 1
                        AND DptTargetType = 1
                    ) THEN
                        '0'
                    WHEN EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 0
                        AND DptTargetType = 1
                    ) THEN
                        '0'
                    WHEN NOT EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            DptId = @DptId
                        AND TargetFlag = 0
                        AND DptTargetType = 1
                    ) THEN
                        '1'
                    WHEN EXISTS (
                        SELECT
                            CompanyId
                        FROM
                            #TEMPLIST
                        WHERE
                            TargetFlag = 0
                        AND DptTargetType = 0
                    ) THEN
                        '0'
                END 
                INSERT INTO #FLAGTABLE (DptId,Flag) values (@DptId,@Flag) 
            END
            SET @DptIdList = SUBSTRING(@DptIdList,@i+@splen,8000)
            SET @i = CHARINDEX(@spli,@DptIdList)
            END
        END
SELECT DptId,Flag FROM #FLAGTABLE WHERE Flag = 1
  </entry>
  <entry key="get-card-class-info-all">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @cardClassId varchar(max)
      
    SET @companyId = ?
    SET @storeId = ?
    SET @cardClassId = NULLIF(?, '')
    
    IF NOT EXISTS (
      SELECT
        CompanyId,
        StoreId,
        CardClassId
      FROM
        RESMaster.dbo.MST_CARD_CLASSINFO
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        CardClassId = COALESCE(@cardClassId, CardClassId) AND
        DeleteFlag = 0.0
    )
      SET @storeId = '0'
       
    SELECT
      CompanyId,
      StoreId,
      CardClassId,
      CardClassName,
      CardClassKanaName,
      CardClassShortName,
      CardClassShortKanaName,
      CreditType,
      MaincardDigitType,
      RankType
    FROM
      RESMaster.dbo.MST_CARD_CLASSINFO
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      CardClassId = COALESCE(@cardClassId, CardClassId) AND
      DeleteFlag = 0.0
  </entry>
  <entry key="get-card-class-info-member">
    DECLARE
      @companyId varchar(12),
      @storeId varchar(6),
      @membershipId varchar(16)

    SET @companyId = ?
    SET @storeId = ?
    SET @membershipId = ?
     
    SELECT
      typeInfo.CompanyId,
      typeInfo.StoreId,
      typeInfo.CardClassId,
      typeInfo.CardStatusType,
      classInfo.CardClassName,
      classInfo.CardClassKanaName,
      classInfo.CardClassShortName,
      classInfo.CardClassShortKanaName,
      classInfo.CreditType,
      classInfo.MaincardDigitType,
      classInfo.RankType
    FROM
      RESMaster.dbo.MST_CARD_TYPEINFO typeInfo
    LEFT JOIN RESMaster.dbo.MST_CARD_CLASSINFO classInfo
      ON typeInfo.CompanyId = classInfo.CompanyId AND
      typeInfo.StoreId = classInfo.StoreId AND
      typeInfo.CardClassId = classInfo.CardClassId
    WHERE
      typeInfo.CompanyId = @companyId AND
      typeInfo.StoreId = @storeId AND
      typeInfo.CardClassId = classInfo.CardClassId AND
      (typeInfo.PrefixCode16From = @membershipId OR 
      typeInfo.PrefixCode16To = @membershipId OR 
      typeInfo.PrefixCode13 = @membershipId) AND
      typeInfo.DeleteFlag = 0.0
  </entry>
  <entry key="get-nationality-info-all">      
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max)
      
    SET @companyId = ?
    SET @storeId = ?
    
    IF NOT EXISTS (
      SELECT
        *
      FROM 
        RESMaster.dbo.MST_NATIONALITYINFO
      WHERE 
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
    )
      SET @storeId = '0'
      
    SELECT
      CompanyId,
      StoreId,
      NationalityId,
      NationalityName,
      NationalityKanaName,
      NationalityShortName,
      NationalityShortKanaName
    FROM
      RESMaster.dbo.MST_NATIONALITYINFO
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
  </entry>
  <entry key="get-customer-class-info-all">      
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max)
      
    SET @companyId = ?
    SET @storeId = ?
    
    IF NOT EXISTS (
      SELECT
        *
      FROM 
        RESMaster.dbo.MST_CUSTOMERCLASS
      WHERE 
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
    )
      SET @storeId = '0000'
      
    SELECT
      CompanyId,
      StoreId,
      CustomerClassId,
      CustomerClassName,
      CustomerClassKanaName,
      GenerationType,
      SexType,
      OtherType
    FROM
      RESMaster.dbo.MST_CUSTOMERCLASS
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
  </entry> 
  <entry key="get-buyadditional-info-all">      
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max)
      
    SET @companyId = ?
    SET @storeId = ?
    
    IF NOT EXISTS (
      SELECT
        *
      FROM 
        RESMaster.dbo.MST_BUYADDITIONALINFO
      WHERE 
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
    )
      SET @storeId = '0'
      
    SELECT
      CompanyId,
      StoreId,
      BuyAdditionalInfoId,
      BuyAdditionalInfoName,
      BuyAdditionalInfoKanaName,
      BuyAdditionalInfoShortName,
      BuyAdditionalInfoShortKanaName
    FROM
      RESMaster.dbo.MST_BUYADDITIONALINFO
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      DeleteFlag = 0.0
  </entry>
  <entry key="get-credit-summary">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @businessDayDate date,
      @trainingFlag tinyint
      
    SET @companyId = ?
    SET @storeId = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    
    SELECT
      CompanyId,
      RetailStoreId,
      BusinessDayDate,
      TrainingFlag,
      SUM(SalesItemCnt) as CntSum,
      SUM(SalesItemAmt) as AmtSum
    FROM
      RESTransaction.dbo.TXU_TOTAL_CREDITSTORE_SUMDAY
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      BusinessDayDate = @businessDayDate AND
      TrainingFlag = @trainingFlag
    GROUP BY 
      CompanyId,
      RetailStoreId,
      BusinessDayDate,
      TrainingFlag
  </entry>
  <entry key="get-barcode-type">
  DECLARE
      @storeId varchar(max),
      @companyId varchar(max),
      @cardType varchar(max),
      @seqNo int,
      @discountType varchar(max)
      
    SET @storeId = ?
    SET @companyId = ?
    SET @cardType = ?
    SET @seqNo = ?
    SET @discountType = ?
    
    IF NOT EXISTS (
      SELECT
        *
      FROM 
        RESMaster.dbo.MST_PRICE_DISCOUNT
      WHERE 
        StoreId = @storeId  AND
        CompanyId = @companyId AND
        CardType = @cardType AND
        SeqNo = @seqNo AND 
        DiscountType = @discountType AND
        DeleteFlag = 0.0
    )
      SET @storeId = '0'
      
  SELECT
    CompanyId,
    StoreId,
    CardType,
    SeqNo,
    SubNo,
    DiscountType,
    DiscountClass,
    Dpt,
    MdInternal,
    DiscountRefType,
    DiscountValue,
    StartDate,
    EndDateRefType,
    EndDate,
    EntryDate,
    DiscountName,
    SubCode1,
    SubCode2,
    SubCode3,
    SubCode4,
    SubCode5,
    SubNum1,
    SubNum2,
    SubNum3,
    SubNum4,
    SubNum5,
    DeleteFlag
  FROM
    RESMaster.dbo.MST_PRICE_DISCOUNT
  WHERE
    StoreId = @storeId AND
    CompanyId = @companyId AND
    CardType = @cardType AND
    SeqNo = @seqNo AND 
    DiscountType = @discountType AND
    DeleteFlag = 0.0
  </entry>
  <entry key="get-voucher-list">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @businessDayDate date,
      @trainingFlag tinyint,
      @origStoreId varchar(max)
      
    SET @companyId = ?
    SET @storeId = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    SET @origStoreId = @storeId
    
    IF NOT EXISTS (
      SELECT
        *
      FROM 
        RESMaster.dbo.MST_TENDERINFO tender
      WHERE 
        tender.CompanyId = @companyId AND
        tender.StoreId = @storeId AND
        tender.TenderType = 1 AND
        tender.DeleteFlag = 0.0
    )
      SET @storeId = '0000'
    
     SELECT
      tender.CompanyId,
      tender.StoreId,
      tender.TenderId,
      tender.TenderType,
      tender.TenderName,
      tender.TenderKanaName
    FROM
      RESMaster.dbo.MST_TENDERINFO tender
    WHERE
      tender.CompanyId = @companyId AND
      tender.StoreId = @storeId AND
      tender.TenderType = 1 AND
      tender.DeleteFlag = 0.0
    
  </entry>
<entry key = "get-promotioninfo-type">
DECLARE
    @companyId VARCHAR (MAX),
    @storeId VARCHAR (MAX),
    @promotionId VARCHAR (MAX),
    @discountReason VARCHAR (MAX),
    @discountBarcodeType VARCHAR (MAX),
    @partialFlag VARCHAR (MAX)
SET @companyId = LTRIM(RTRIM(?))
SET @storeId = LTRIM(RTRIM(?))
SET @discountReason = LTRIM(RTRIM(?))
SET @discountBarcodeType = LTRIM(RTRIM(?))
SET @partialFlag = LTRIM(RTRIM(?))
    SELECT
        CompanyId,
        StoreId,
        PromotionId,
        PromotionName,
        ReceiptName,
        DiscountReason,
        DiscountReasonName,
        PromotionType,
        DiscountType,
        InputFlag,
        PartialFlag,
        RateDiscountFlag,
        PriceDiscountFlag,
        ButtonFlag,
        BarcodeFlag,
        BarcodeDigit,
        BarcodeStartCode,
        BarcodeEndCode,
        BarcodeIdCode1,
        BarcodeIdStartIndex1,
        BarcodeIdStartDigit1,
        BarcodeIdCode2,
        BarcodeIdStartIndex2,
        BarcodeIdStartDigit2,
        PointCombinationUseFlag,
        PointAddFlag,
        DiscountBarcodeType,
        DeleteFlag
    FROM
        RESMaster.dbo.MST_PRICE_PROMOTION
    WHERE
        PartialFlag = @partialFlag
    AND (
        DiscountReason = @discountReason  
    OR  DiscountBarcodeType = @discountBarcodeType
    )
    AND CompanyId = @companyId
    AND StoreId = @storeId
    AND DeleteFlag = 0.0
    </entry>
    <entry key="get-company-info">
      SELECT company.CompanyId,
      		 company.CompanyName,
      		 company.CompanyKanaName,
      		 company.CompanyShortName,
      		 company.CompanyShortKanaName,
      		 company.DisplayOrder,
      		 company.SubCode1,
      		 company.SubCode2,
      		 company.SubCode3,
      		 company.SubCode4,
      		 company.SubCode5,
      		 company.SubNum1,
      		 company.SubNum2,
      		 company.SubNum3,
      		 company.SubNum4,
      		 company.SubNum5
      FROM 
      	RESMaster.dbo.MST_COMPANYINFO company
      WHERE
      	company.DeleteFlag = 0.
    </entry>
    <entry key="get-terminal-info">
      DECLARE
        @companyId varchar(max),
        @storeId varchar(max),
        @terminalId varchar(max)
        
      SET @companyId = ?
      SET @storeId = ?
      SET @terminalId = ?
      
      SELECT
        term.CompanyId,
        term.StoreId,
        term.TerminalId,
        term.FloorId,
        term.TerminalName,
        term.IPAddress,
        term.StoreClass,
        term.TerminalType,
        term.TillType,
        term.RelationType,
        term.ConnectionFlag1,
        term.ConnectionFlag2,
        term.ConnectionFlag3,
        term.ConnectionFlag4,
        term.ConnectionFlag5,
        term.ConnectionFlag6,
        term.ConnectionFlag7,
        term.ConnectionFlag8,
        term.LogoFileName,
        term.InshiFileName,
        term.SubCode1,
        term.SubCode2,
        term.Note,
        company.SubCode2 As CompanyName
      FROM
        RESMaster.dbo.MST_TERMINALINFO term
      LEFT JOIN
        RESMaster.dbo.MST_COMPANYINFO company
      ON
      term.CompanyId = company.CompanyId
      WHERE
        term.CompanyId = @companyId AND
        term.StoreId = @storeId AND
        term.TerminalId = @terminalId
    </entry>
    <entry key="insert-eventlog">
      DECLARE
        @companyId varchar(8),
        @retailStoreId varchar(8),
        @workstationId varchar(8),
        @training int,
        @sequenceNumber int,
        @childNumber int,
        @businessDayDate varchar(32),
        @log varchar(max)
      SET @companyId = ?
      SET @retailStoreId = ?
      SET @workstationId = ?
      SET @training = ?
      SET @sequenceNumber = ?
      SET @childNumber = ?
      SET @businessDayDate = ?
      SET @log = ?

      insert into txl_ope_event 
             (companyId, retailStoreId, workstationId, trainingFlag, sequenceNumber, 
                                 childNumber, businessDayDate, log, insDateTime) 
      values (@companyId, @retailStoreId, @workstationId, @training, @sequenceNumber, 
                                 @childNumber, @businessDayDate, @log, sysdatetime()) 
    </entry>
    <entry key="select-eventlog">
      DECLARE
        @companyId varchar(8),
        @retailStoreId varchar(8),
        @workstationId varchar(8),
        @training int,
        @sequenceNumber int
      SET @companyId = ?
      SET @retailStoreId = ?
      SET @workstationId = ?
      SET @training = ?
      SET @sequenceNumber = ?

      select log from txl_ope_event
      where companyId = @companyId and retailStoreId = @retailStoreId and workstationId = @workstationId
        and trainingFlag = @training and sequenceNumber = @sequenceNumber
      order by childNumber asc
    </entry>
  <entry key="get-transaction-count">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @txtype varchar(max),
      @trainingFlag tinyint
    
    SET @companyId = ?
    SET @storeId = ?
    SET @txtype = ?
    SET @trainingFlag = ?
    
    SELECT
      COUNT(*) AS TxCount
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      TxType = @txtype AND
      TrainingFlag = @trainingFlag
  </entry>
<entry key="get-card-type-info">
        DECLARE
          @companyId varchar(max),
          @storeId varchar(max),
          @cardTypeNo varchar(max)
          
        SET @companyId = ?
        SET @storeId = ?
        SET @cardTypeNo = ?
         
        SELECT
          CompanyId,
          StoreId,
          CardTypeId,
          CardTypeName,
          CardTypeKanaName,
          CardTypeShortName,
          CardTypeShortKanaName,
          TerminalCompanyId,
          CardClassId,
          MemberType,
          MemberRank,
          NewRegistFlag,
          CardMergeFlag,
          PointExpDatePrintFlag,
          DisplayDigitType,
          PrintDigitType,
          CardCategory,
          PointAllowanceFlag,
          PointExpDateAddMonth,
          SubCode1,
          UCUseArea,
          PrefixCode16From,
          PrefixCode16To,
          PrefixCode13,
          CardStatusType,
          MagneticDataType
        FROM
          RESMaster.dbo.MST_CARD_TYPEINFO
        WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          CardTypeId = @cardTypeNo AND
          DeleteFlag = 0.0
  </entry>
  <entry key="get-last-pay-tx-poslog">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint
      
    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    
    SELECT TOP 1
      Tx,
      InsDateTime
    FROM
      RESTransaction.dbo.TXL_SALES_JOURNAL
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      WorkStationId = @terminalId AND
      BusinessDayDate = @businessDate AND
      TrainingFlag = @trainingFlag AND
      (LOWER(TxType) = 'payin' OR
      LOWER(TxType) = 'payout')
    ORDER BY
      InsDateTime DESC
  </entry>
<entry key = "get-member-info">
  DECLARE @companyId varchar(max), @storeId varchar(max), @memberId2 varchar(max)
  SET @companyId = ?
   SET @storeId = ?
   SET @memberId2 = ?
  SELECT TOP 1
  CompanyId,
  StoreId,
  MemberId,
  CardCompanyId,
  MemberId1,
  MemberId2,
  CardType,
  MemberRank,
  MemberStatus,
  MemberType,
  MemberTypeNext,
  MemberTypeUpdDate,
  SubCode1,
  SubCode2,
  SubCode3,
  SubCode4,
  SubCode5,
  SubNum1,
  SubNum2,
  SubNum3,
  SubNum4,
  SubNum5
  FROM RESMaster.dbo.MST_MEMBERINFO
  WHERE
  CompanyId = @companyId
  AND StoreId = @storeId
  AND MemberId2 = @memberId2
  AND DeleteFlag = 0.0
</entry>
<entry key = "get-status-info">
  DECLARE @companyId varchar(max), @storeId varchar(max), @memberStatus varchar(max)
  SET @companyId = ?
   SET @storeId = ?
   SET @memberStatus = ?
  SELECT TOP 1
  CompanyId,
  StoreId,
  MemberStatus,
  MemberStatusName,
  RegisterFlag,
  PointAddFlag,
  PointUseFlag,
  SubCode1,
  SubCode2,
  SubCode3,
  SubCode4,
  SubCode5,
  SubNum1,
  SubNum2,
  SubNum3,
  SubNum4,
  SubNum5
  FROM RESMaster.dbo.MST_MEMBERSTATUS
  WHERE
  CompanyId = @companyId
  AND StoreId = @storeId
  AND MemberStatus = @memberStatus
  AND DeleteFlag = 0.0
</entry>
<entry key="get-all-card-type-info">
        DECLARE
          @companyId varchar(max),
          @storeId varchar(max)
          
        SET @companyId = ?
        SET @storeId = ?
       
        SELECT
          CompanyId,
          StoreId,
          CardClassId,
          CardTypeId,
          CardTypeName,
          CardTypeKanaName,
          CardTypeShortName,
          CardTypeShortKanaName,
          TerminalCompanyId,
          CardClassId,
          MemberType,
          MemberRank,
          NewRegistFlag,
          CardMergeFlag,
          PointExpDatePrintFlag,
          DisplayDigitType,
          PrintDigitType,
          CardCategory,
          PointAllowanceFlag,
          PointExpDateAddMonth,
          SubCode1,
          UCUseArea,
          PrefixCode16From,
          PrefixCode16To,
          PrefixCode13,
          CardStatusType,
          MagneticDataType
        FROM
          RESMaster.dbo.MST_CARD_TYPEINFO
        WHERE
          CompanyId = @companyId AND
          StoreId = @storeId AND
          DeleteFlag = 0.0
  </entry>
  <entry key="get-lock-status">    
    DECLARE
      @companyId varchar(max),
      @retailStoreId varchar(max),
      @workstationId varchar(max),
      @sequenceNumber int,
      @businessDayDate date,
      @trainingFlag tinyint
      
    SET @companyId = ?
    SET @retailStoreId = ?
    SET @workstationId = ?
    SET @sequenceNumber = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
   
    SELECT 
      Status
    FROM
      RESTransaction.dbo.TXL_TRAN_LOCK
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @retailStoreId AND
      WorkstationId = @workstationId AND
      SequenceNumber = @sequenceNumber AND
      BusinessDayDate = @businessDayDate AND
      TrainingFlag = @trainingFlag
  </entry>
  <entry key="insert-lock">
    DECLARE
      @companyId varchar(max),
      @retailStoreId varchar(max),
      @workstationId varchar(max),
      @sequenceNumber int,
      @businessDayDate date,
      @trainingFlag tinyint,
      @callType varchar(max),
      @status tinyint,
      @callerCompanyId varchar(max),
      @callerRetailStoreId varchar(max),
      @callerWorkstationId varchar(max),
      @insAppId varchar(max),
      @insOpeCode varchar(max),
      @updAppId varchar(max),
      @updOpeCode varchar(max)
        
    SET @companyId = ?
    SET @retailStoreId = ?
    SET @workstationId = ?
    SET @sequenceNumber = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    SET @CallType = ?
    SET @Status = ?
    SET @callerCompanyId = ?
    SET @callerRetailStoreId = ?
    SET @callerWorkstationId = ?
    SET @insAppId = ?
    SET @insOpeCode = ?
    SET @updAppId = ?
    SET @updOpeCode = ?
        
    INSERT INTO RESTransaction.dbo.TXL_TRAN_LOCK
      (CompanyId,
       RetailStoreId,
       WorkstationId,
       SequenceNumber,
       BusinessDayDate,
       TrainingFlag,
       CallType,
       Status,
       CallerCompanyId,
       CallerRetailStoreId,
       CallerWorkstationId,
       InsDate,
       InsAppId,
       InsOpeCode,
       UpdDate,
       UpdAppId,
       UpdOpeCode)
    VALUES
      (@companyId,
       @retailStoreId,
       @workstationId,
       @sequenceNumber,
       @businessDayDate,
       @trainingFlag,
       @callType,
       @status,
       @callerCompanyId,
       @callerRetailStoreId,
       @callerWorkstationId,
       SYSDATETIME(),
       @insAppId,
       @insOpeCode,
       SYSDATETIME(),
       @updAppId,
       @updOpeCode);
  </entry>
  <entry key="delete-lock">
    DECLARE
      @companyId varchar(max),
      @retailStoreId varchar(max),
      @workstationId varchar(max),
      @sequenceNumber int,
      @businessDayDate date,
      @trainingFlag tinyint
      
    SET @companyId = ?
    SET @retailStoreId = ?
    SET @workstationId = ?
    SET @sequenceNumber = ?
    SET @businessDayDate = ?
    SET @trainingFlag = ?
    DELETE FROM
      RESTransaction.dbo.TXL_TRAN_LOCK
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @retailStoreId AND
      WorkstationId = @workstationId AND
      SequenceNumber = @sequenceNumber AND
      BusinessDayDate = @businessDayDate AND
      TrainingFlag = @trainingFlag
  </entry>
  <entry key="get-preset-cm-info">
         DECLARE         
      @companyId varchar(12),
      @storeId varchar(10),
      @terminalId varchar(6),
      @bizCatId varchar(20),
      @businessDayDate date
                        
      SET @companyId = ?
      SET @storeId = ?
      SET @terminalId = ?
      SET @businessDayDate = ?
      SET @bizCatId = (
                                SELECT SubCode1 
                                FROM RESMaster.dbo.MST_STOREINFO 
                                WHERE CompanyId = @companyId AND StoreId = @storeId)
    SELECT      
     TOP 1      
      *             
    FROM                
      RESMaster.dbo.MST_PRESET_CMINFO
    WHERE               
      CompanyId = @companyId
    AND             
      (@businessDayDate BETWEEN StartDate AND EndDate) 
    AND                 
      DeleteFlag = 0.0
    AND             
            ((CMType ='1' AND BizCatId = '00' AND StoreId = '0000' AND TerminalId = '0000') 
              OR (CMType ='2' AND BizCatId = @bizCatId AND StoreId = '0000' AND TerminalId = '0000')
              OR (CMType ='3' AND StoreId = @storeId AND TerminalId = '0000')
              OR (CMType ='4' AND TerminalId = @terminalId)
    )               
 ORDER BY UpdDate DESC

  </entry>
  <entry key="get-picklist-items">
    DECLARE
      @companyId varchar(12),
      @storeId varchar(10),
      @itemType varchar(10)
          
      SET @companyId = ?
      SET @storeId = ?
      SET @itemType = ?
    
    IF NOT EXISTS (
      SELECT
        CompanyId, StoreId, RecordId
      FROM
        RESMaster.dbo.MST_PRESET_TOUCHITEM
      WHERE
        CompanyId = @companyId AND
        StoreId = @storeId AND
        ItemType = COALESCE(@itemType, ItemType) AND 
        DeleteFlag = 0.0
    )
     SET @storeId = '0000'

    SELECT
      CompanyId, StoreId, RecordId, ItemType, DisplayOrder, MdInternal, ItemName
    FROM
      RESMaster.dbo.MST_PRESET_TOUCHITEM
    WHERE
      CompanyId = @companyId AND
      StoreId = @storeId AND
      ItemType = COALESCE(@itemType, ItemType) AND 
      DeleteFlag = 0.0
    ORDER BY
      ItemType, DisplayOrder
  </entry>
  <entry key="get-preset-storeinfo">
    DECLARE @companyId VARCHAR(12),@storeId VARCHAR(10),@TerminalId VARCHAR(6)
    SET @companyId = ?
    SET @storeId = ?
    SET @TerminalId = ?

    SELECT
    company.CompanyName,
    CASE WHEN
    presetStore.ReceiptStoreName IS NOT NULL
    THEN presetStore.ReceiptStoreName
    ELSE store.SubCode15 END ReceiptStoreName,
    CASE WHEN
    presetStore.ReceiptTelNo IS NOT NULL
    THEN presetStore.ReceiptTelNo
    ELSE store.StoreTel END ReceiptTelNo,
    CASE WHEN
    presetStore.FormalReceiptStoreName IS NOT NULL
    THEN presetStore.FormalReceiptStoreName
    ELSE store.SubCode15 END FormalReceiptStoreName,
    CASE WHEN
    presetStore.FormalReceiptTelNo IS NOT NULL
    THEN presetStore.FormalReceiptTelNo
    ELSE store.StoreTel END FormalReceiptTelNo,
    store.StoreName,
    store.StoreShortName,
    store.StoreKubun,
    store.StoreZip,
    store.StoreAddr,
    store.StoreAddr1,
    store.StoreAddr2,
    store.StoreFax,
    store.Ads,
    store.CdMsg,
    store.ElectroFilePath,
    store.StampTaxFilePath,
    store.StoreCompCode,
    store.SubCode1,
    store.SubCode2,
    store.SubCode3,
    store.SubCode4,
    store.SubCode5,
    store.SubCode6,
    store.SubCode7,
    store.SubCode8,
    store.SubCode9,
    store.SubCode10,
    store.SubCode11,
    store.SubCode12,
    store.SubCode13,
    store.SubCode14,
    store.SubCode16,
    store.SubCode17,
    store.SubNum1,
    store.HostUpdDate,
    store.Status
    FROM
     RESMaster.dbo.MST_COMPANYINFO company
    LEFT JOIN
     RESMaster.dbo.MST_STOREINFO store
    ON
    company.CompanyId = store.CompanyId
    AND
    store.StoreId = @storeId
    AND
    store.DeleteFlag = 0.0
    LEFT JOIN
     RESMaster.dbo.MST_PRESET_STOREINFO presetStore
    ON
    store.CompanyId = presetStore.CompanyId
    AND
    store.StoreId = presetStore.StoreId
    AND
    presetStore.TerminalId = @TerminalId
    AND
    presetStore.DeleteFlag = 0.0
    WHERE
    company.CompanyId = @companyId
    AND
    company.DeleteFlag = 0.0
</entry>
<entry key="get-subNum1">
    SELECT
    SubNum1 
    FROM
      RESMaster.dbo.MST_DEVICEINFO
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active'
</entry>

<entry key="update-subNum1">
    UPDATE
    RESMaster.dbo.MST_DEVICEINFO
    SET
      SubNum1 = ?
    WHERE
      StoreId = ? AND
      TerminalId = ? AND
      CompanyId = ? AND
      Training = ? AND
      Status = 'Active'
</entry>
<entry key="get-item-byapidata">
DECLARE    @companyId VARCHAR(12), @MdInternal VARCHAR(32)
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @MdInternal = LTRIM(RTRIM(?))
SELECT 
       plu.CompanyId,
       plu.StoreId,
       plu.MdInternal,
       plu.MdType,
       plu.MdVender,
       plu.Dpt,
       plu.Line,
       plu.Class,
       plu.Sku,
       plu.Md01,
       plu.Md02,
       plu.Md03,
       plu.Md04,
       plu.Md05,
       plu.Md06,
       plu.Md07,
       plu.Md08,
       plu.Md09,
       plu.Md10,
       plu.Md11,
       plu.Md12,
       plu.Md13,
       plu.Md14,
       plu.Md15,
       plu.Md16,
       plu.MdNameLocal,
       plu.MdKanaName,
       plu.OrgSalesPrice1,
       plu.SalesPrice1,
       plu.SalesPrice2,
       plu.CostPrice1,
       plu.SalesDate,
       plu.MakerPrice,
       plu.TaxType,
       plu.TaxRate,
       plu.DiscountType,
       plu.PaymentType,
       plu.Conn1,
       plu.ConnType1,
       plu.Conn2,
       plu.DiscountFlag,
       plu.SubCode1,
       plu.SubCode2,
       plu.SubCode3,
       plu.SubNum1,
       plu.SubNum2,
       plu.DeleteFlag,
       plu.DelDate,
       plu.DelAppId,
       plu.DelOpeCode,
       plu.InsDate,
       plu.InsAppId,
       plu.InsOpeCode,
       plu.UpdCount,
       plu.UpdDate,
       plu.UpdAppId,
       plu.UpdOpeCode,
       plu.DiscountType,
       colorInfo.Colorkananame,
       sizeInfo.SizeKanaName
FROM 
  RESMaster.dbo.MST_PLU plu
  
LEFT JOIN RESMaster.dbo.MST_COLORINFO colorInfo 
ON plu.CompanyId = colorInfo.CompanyId
AND plu.StoreId = colorInfo.StoreId
AND plu.Md01 = colorInfo.ColorId
AND colorInfo.DeleteFlag = 0.0
LEFT JOIN RESMaster.dbo.MST_SIZEINFO sizeInfo
ON plu.CompanyId = sizeInfo.CompanyId
AND plu.StoreId = sizeInfo.StoreId
AND plu.Md05 = sizeInfo.SizeId
  
WHERE plu.companyId = @companyId
AND plu.MdInternal = @MdInternal
AND plu.StoreId = '0'
AND plu.DeleteFlag = 0.0
</entry>
<entry key="get-isMemberCard-info">
DECLARE  @MdInternal VARCHAR(32)
SET        @MdInternal = LTRIM(RTRIM(?))
    SELECT 
        CompanyId,
        StoreId,
        CardTypeId,
        PrefixCode13,
        PrefixCode16From,
        PrefixCode16To,
        NewRegistFlag,
        SubCode2,
        SubCode3
    FROM RESMaster.dbo.MST_CARD_TYPEINFO
    WHERE
    DeleteFlag = 0.0

</entry>
<entry key="get-item-price">
DECLARE    @storeId VARCHAR(10) ,@companyId VARCHAR(12), @MdInternal VARCHAR(32), @businessDate VARCHAR(32)
    SET        @storeId = LTRIM(RTRIM(?))
    SET        @companyId = LTRIM(RTRIM(?))
    SET        @MdInternal = LTRIM(RTRIM(?))
    SET        @businessDate = LTRIM(RTRIM(?))
    SELECT TOP 1
       plu.CompanyId,
       plu.StoreId,
       plu.MdInternal,
       plu.MdType,
       plu.MdVender,
       plu.Dpt,
       plu.Line,
       plu.Class,
       plu.Sku,
       plu.Md01,
       plu.Md02,
       plu.Md03,
       plu.Md04,
       plu.Md05,
       plu.Md06,
       plu.Md07,
       plu.Md08,
       plu.Md09,
       plu.Md10,
       plu.Md11,
       plu.Md12,
       plu.Md13,
       plu.Md14,
       plu.Md15,
       plu.Md16,
       plu.MdNameLocal,
       plu.MdKanaName,
       plu.OrgSalesPrice1,
       urgent.NewPrice,
       urgent.OldPrice,
       plustore.SalesPrice,
       plu.SalesPrice1,
       plu.SalesPrice2,
       plu.CostPrice1,
       plu.SalesDate,
       plu.MakerPrice,
       plu.TaxType,
       plu.TaxRate,
       plu.DiscountType,
       plu.PaymentType,
       plu.Conn1,
       plu.ConnType1,
       plu.Conn2,
       plu.DiscountFlag,
       plu.SubCode1,
       plu.SubCode2,
       plu.SubCode3,
       plu.SubNum1,
       plu.SubNum2
FROM 
  RESMaster.dbo.MST_PLU plu
LEFT JOIN RESMaster.dbo.MST_PLU_STORE plustore
    ON plu.CompanyId = plustore.CompanyId
    AND plustore.StoreId = @storeId
    AND plustore.MdInternal = plu.MdInternal
    AND plustore.DeleteFlag = 0.0
LEFT JOIN  (
    SELECT 
        info.CompanyId,
        info.Sku,
        info.SequenceNo,
        info.ColorId,
        info.NewPrice,
        info.OldPrice
    FROM RESMaster.dbo.MST_PRICE_URGENT_INFO_FORSTORE info
    INNER  JOIN RESMaster.dbo.MST_PRICE_URGENT_STORE_FORSTORE store 
    ON info.CompanyId  = store.CompanyId 
    AND info.RecordId = store.RecordId
    AND store.DeleteFlag = 0.0
    AND CONVERT(DATE,@businessDate) BETWEEN store.StartDate AND store.EndDate 
    AND store.TargetStoreType IN ('0','2') OR (store.TargetStoreType = '1' AND store.StoreId = @storeId)
    AND info.DeleteFlag = 0
    
) urgent 
ON 
plu.CompanyId  = urgent.CompanyId 
AND plu.Sku  = urgent.Sku 
AND plu.Md01 = urgent.ColorId 
 
WHERE plu.companyId = @companyId  AND plu.MdInternal = @MdInternal AND plu.StoreId = '0' AND plu.DeleteFlag = 0.0
ORDER BY urgent.SequenceNo DESC
</entry>
<entry key="insert-offline-credit">
insert into txl_offline_credit
    (CompanyId, RetailStoreId, WorkstationId, SequenceNumber, BusinessDayDate, TrainingFlag,
     IV, Body, InsDateTIme)
  values
    (?, ?, ?, ?, ?, ?, ?, ?, sysdatetime())
</entry>
<entry key="get-report-items">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @retailstoreid varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint
      
    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = NULLIF(?, '')
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @retailstoreid = @storeId
    
    IF NOT EXISTS(SELECT DataType FROM RESMaster.dbo.MST_NAME_DAILYREPORT WHERE StoreId = @storeId)
      SET @storeId = '0'
      
    SELECT
      a.CompanyId,
      a.StoreId,
      a.DataType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      a.ItemName,
      a.DisplayOrder,
      b.WorkstationId,
      b.RetailStoreId,
      (CASE 
        WHEN @terminalId IS NULL
        THEN (
          SELECT 
            SUM(ItemCnt)
          FROM 
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @storeId AND
            ItemType = a.DataType AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag)
        ELSE
          b.ItemCnt
      END) AS ItemCnt,
      (CASE 
        WHEN @terminalId IS NULL
        THEN (
          SELECT 
            SUM(ItemAmt)
          FROM 
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @storeId AND
            ItemType = a.DataType AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag) 
        ELSE
          b.ItemAmt
      END) AS ItemAmt
    FROM
      RESMaster.dbo.MST_NAME_DAILYREPORT a
    LEFT JOIN
      RESTransaction.dbo.TXU_TOTAL_DAILYREPORT b
    ON
      a.CompanyId = b.CompanyId AND
      a.DataType = b.ItemType AND
      a.ItemLevel1 = b.ItemLevel1 AND
      a.ItemLevel2 = b.ItemLevel2 AND
      a.ItemLevel3 = b.ItemLevel3 AND
      a.ItemLevel4 = b.ItemLevel4 AND
      b.BusinessDayDate = @businessDate AND
      b.TrainingFlag = @trainingFlag
    WHERE
      a.CompanyId = @companyId AND
      a.StoreId = @storeId AND
      b.RetailStoreId = @retailstoreId AND
      a.DeleteFlag = 0.0 AND
      b.WorkstationId = COALESCE(@terminalId, b.WorkstationId)
    ORDER BY
      a.DataType, 
      cast(a.ItemLevel1 as int), 
      cast(a.ItemLevel2 as int), 
      cast(a.ItemLevel3 as int), 
      a.ItemLevel4, 
      a.DisplayOrder ASC
</entry>
<entry key="get-point-item-rate">
  DECLARE
  @companyId varchar(12),
  @bizCategoryId varchar(20),
  @storeId varchar(10),
  @targetType varchar(10),
  @deptCode varchar(10),
  @businessDate date

  SET @companyId = ?
  SET @storeId = ?
  SET @businessDate = ?
  SET @deptCode = ?
  SET @bizCategoryId = '00'

  IF NOT EXISTS(
    SELECT 
      base.RecordId
    FROM
      RESMaster.dbo.MST_POINT_INFO base
    LEFT JOIN
      RESMaster.dbo.MST_POINT_DPT dpt
    ON
      base.RecordId = dpt.RecordId
    WHERE
      base.TargetType = '3' AND base.StoreId = @storeId
      AND base.DptSettingFlag = '1'
      AND CONVERT(DATE,@businessDate) >= base.StartDate
      AND @deptCode BETWEEN dpt.DptFrom AND dpt.DptTo)
      BEGIN
      IF NOT EXISTS(
        SELECT
          base.RecordId
        FROM
          RESMaster.dbo.MST_POINT_INFO base
        LEFT JOIN
          RESMaster.dbo.MST_POINT_DPT dpt
        ON
          base.RecordId = dpt.RecordId
        WHERE
          base.TargetType = '2' AND base.BizCatId = @bizCategoryId
          AND base.DptSettingFlag = '1'
          AND CONVERT(DATE,@businessDate) >= base.StartDate
          AND @deptCode BETWEEN dpt.DptFrom AND dpt.DptTo)
        BEGIN
          SET @targetType = '1'
          SET @bizCategoryId = '00'
          SET @storeId = '0000'
        END
      ELSE
        BEGIN
        SET @targetType = '2'
        SET @storeId = '0000'
        END
      END
    ELSE
      BEGIN
      SET @targetType = '3'
      END
    SELECT 
      base.PointFlag,
      base.BasePrice,
      base.RecordId,
      dept.BasePoint,
      dept.CardSettingFlag,
      dept.StoreSettingFlag,
      class.CardClassId
    FROM
      RESMaster.dbo.MST_POINT_INFO base 
    LEFT JOIN
      RESMaster.dbo.MST_POINT_DPT dept
    ON
      base.RecordId = dept.RecordId
    LEFT JOIN
      RESMaster.dbo.MST_POINT_DPT_CARD class
    ON
      base.RecordId = class.RecordId
      AND
      dept.CardSettingFlag = '1'
    LEFT JOIN
      RESMaster.dbo.MST_POINT_DPT_STORE store
    ON
      base.RecordId = store.RecordId
    WHERE
      base.CompanyId = @companyId
      AND
      base.TargetType = @targetType
      AND
      base.BizCatId = @bizCategoryId
      AND
      base.StoreId = @storeId
      AND
      CONVERT(DATE,@businessDate) >= base.StartDate
      AND
      base.DeleteFlag = 0.0
      AND
      base.DptSettingFlag = '1'
      AND
      dept.StoreSettingFlag = '0'
      OR 
      (dept.StoreSettingFlag = '1' AND store.StoreId = @storeId)
      AND
      base.RecordId = dept.RecordId
</entry>
<entry key="get-point-item-campaign-rate">
  DECLARE
  @companyId varchar(12),
  @storeId varchar(10),
  @targetType varchar(10),
  @deptCode varchar(10),
  @businessDate date,
  @groupCode varchar(20),
  @brandId varchar(20),
  @sku varchar(20)

  SET @companyId = ?
  SET @storeId = ?
  SET @businessDate = ?
  SET @deptCode = ?
  SET @groupCode = ?
  SET @brandId = ?
  SET @sku = ?

  SELECT
    base.PointType,
    base.BasePrice,
    base.RecordId,
    base.BasePointCash,
    base.BasePointAffiliate,
    base.BasePointNonAffiliate,
    base.TargetDaySettingFlag,
    base.TargetDay1,
    base.TargetDay2,
    base.TargetDay3,
    base.TargetDay4,
    base.TargetDay5,
    base.TargetDay6,
    base.TargetDay7,
    base.TargetDay8,
    base.TargetDay9,
    base.DayOfWeekSettingFlag,
    base.DayOfWeekMonFlag,
    base.DayOfWeekTueFlag,
    base.DayOfWeekWedFlag,
    base.DayOfWeekThuFlag,
    base.DayOfWeekFriFlag,
    base.DayOfWeekSatFlag,
    base.DayOfWeekSunFlag,
    base.CardSettingFlag,
    base.TargetStoreType,
    base.ItemSettingFlag,
    base.DptSettingFlag,
    base.TargetStoreType,
    pointcard.CardClassId,
    iteminfo.GroupTargetType,
    iteminfo.GroupIdStart,
    iteminfo.GroupIdEnd,
    iteminfo.DptTargetType,
    iteminfo.DptStart,
    iteminfo.DptEnd,
    iteminfo.BrandTargetType,
    iteminfo.BrandIdStart,
    iteminfo.BrandIdEnd,
    iteminfo.SkuTargetType,
    iteminfo.SkuStart,
    iteminfo.SkuEnd,
    itemdetail.TargetType,
    itemdetail.TargetId
  FROM
    RESMaster.dbo.MST_CAMPAIGN_INFO base
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_ITEM_INFO iteminfo
  ON
    base.RecordId = iteminfo.RecordId
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_ITEM_DETAIL itemdetail
  ON
    base.RecordId = itemdetail.RecordId
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_CARD pointcard
  ON
    base.RecordId = pointcard.RecordId
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_STORE store
  ON
    base.RecordId = store.RecordId
  WHERE
    base.CompanyId = @companyId
    AND
    CONVERT(DATE,@businessDate) BETWEEN base.StartDate AND base.EndDate
    AND
    base.DeleteFlag = 0.0
    AND
    ((base.RecordId = iteminfo.RecordId)
    OR base.ItemSettingFlag = '0')
    AND
    ((base.TargetStoreType = '1' AND store.StoreId = @storeId)
    OR base.TargetStoreType = '0' OR base.TargetStoreType = '2')
</entry>
<entry key="get-point-dpt-campaign-rate">
  DECLARE
  @companyId varchar(12),
  @storeId varchar(10),
  @targetType varchar(10),
  @deptCode varchar(10),
  @businessDate date

  SET @companyId = ?
  SET @storeId = ?
  SET @businessDate = ?
  SET @deptCode = ?

  SELECT
    base.PointType,
    base.BasePrice,
    base.RecordId,
    base.TargetDaySettingFlag,
    base.TargetDay1,
    base.TargetDay2,
    base.TargetDay3,
    base.TargetDay4,
    base.TargetDay5,
    base.TargetDay6,
    base.TargetDay7,
    base.TargetDay8,
    base.TargetDay9,
    base.DayOfWeekSettingFlag,
    base.DayOfWeekMonFlag,
    base.DayOfWeekTueFlag,
    base.DayOfWeekWedFlag,
    base.DayOfWeekThuFlag,
    base.DayOfWeekFriFlag,
    base.DayOfWeekSatFlag,
    base.DayOfWeekSunFlag,
    dept.BasePoint,
    dept.CardSettingFlag,
    dept.StoreSettingFlag,
    base.DptSettingFlag,
    base.ItemSettingFlag,
    base.TargetStoreType,
    class.CardClassId
  FROM
    RESMaster.dbo.MST_CAMPAIGN_INFO base 
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_DPT dept
  ON
    base.RecordId = dept.RecordId
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_DPT_CARD class
  ON
    base.RecordId = class.RecordId
  LEFT JOIN
    RESMaster.dbo.MST_CAMPAIGN_DPT_STORE store
  ON
    base.RecordId = store.RecordId
    AND
    ((dept.StoreSettingFlag = '1' AND store.StoreId = @storeId)
    OR dept.StoreSettingFlag = '0')
  WHERE
    base.CompanyId = @companyId
    AND
    CONVERT(DATE,@businessDate) BETWEEN base.StartDate AND base.EndDate
    AND
    @deptCode BETWEEN dept.DptFrom AND dept.DptTo
    AND
    base.DeleteFlag = 0.0
    AND
    base.DptSettingFlag = '1'
    AND
    ((dept.StoreSettingFlag = '0') OR 
      (dept.StoreSettingFlag = '1' AND store.StoreId = @storeId))
    AND
    base.RecordId = dept.RecordId
</entry>
<entry key="get-point-tran-rate">
  DECLARE
  @companyId varchar(12),
  @bizCategoryId varchar(20),
  @storeId varchar(10),
  @targetType varchar(10),
  @cardClassId varchar(10),
  @businessDate date
  
  SET @companyId = ?
  SET @storeId = ?
  SET @businessDate = ?
  SET @cardClassId = ?
  SET @bizCategoryId = '00'

  IF NOT EXISTS(
    SELECT 
      RecordId
    FROM
      RESMaster.dbo.MST_POINT_INFO
    WHERE
      CompanyId = @companyId AND
      TargetType = '3' AND StoreId = @storeId
      AND CONVERT(DATE,@businessDate) >= StartDate)
      BEGIN
        IF NOT EXISTS(
          SELECT
            RecordId
          FROM
            RESMaster.dbo.MST_POINT_INFO
          WHERE
          CompanyId = @companyId AND
          TargetType = '2' AND BizCatId = @bizCategoryId
          AND CONVERT(DATE,@businessDate) >= StartDate)
          BEGIN
            SET @targetType = '1'
            SET @bizCategoryId = '00'
            SET @storeId = '0000'
          END
        ELSE
          BEGIN
            SET @targetType = '2'
            SET @storeId = '0000'
          END
      END
      ELSE
        BEGIN
          SET @targetType = '3'
        END
  IF EXISTS(
    SELECT 
      base.RecordId
    FROM
      RESMaster.dbo.MST_POINT_INFO base 
    LEFT JOIN
      RESMaster.dbo.MST_POINT_CARD pointcard
    ON
      base.RecordId = pointcard.RecordId
    WHERE
      base.CompanyId = @companyId
      AND
      base.TargetType = @targetType
      AND
      base.BizCatId = @bizCategoryId
      AND
      base.StoreId = @storeId
      AND
      pointcard.CardClassId = @cardClassId
      AND
      CONVERT(DATE,@businessDate) >= base.StartDate
      AND
      base.DeleteFlag = 0.0
      AND 
      base.CardSettingFlag = '1'
      AND 
      base.DptSettingFlag = '0'
      AND
      base.RecordId = pointcard.RecordId)
   SELECT 
      base.PointFlag,
      base.BasePrice,
      base.RecordId,
      pointcard.BasePointCash,
      pointcard.BasePointAffiliate,
      pointcard.BasePointNonAffiliate,
      base.PointCalcType,
      base.TaxCalcType,
      base.RoundType,
      base.CardSettingFlag,
      base.DptSettingFlag
    FROM
      RESMaster.dbo.MST_POINT_INFO base 
    LEFT JOIN
      RESMaster.dbo.MST_POINT_CARD pointcard
    ON
      base.RecordId = pointcard.RecordId
    WHERE
      base.CompanyId = @companyId
      AND
      base.TargetType = @targetType
      AND
      base.BizCatId = @bizCategoryId
      AND
      base.StoreId = @storeId
      AND
      pointcard.CardClassId = @cardClassId
      AND
      CONVERT(DATE,@businessDate) >= base.StartDate
      AND
      base.DeleteFlag = 0.0
      AND
      base.CardSettingFlag = '1'
      AND
      base.DptSettingFlag = '0'
      AND
      base.RecordId = pointcard.RecordId
  ELSE
    SELECT
      base.PointFlag,
      base.BasePrice,
      base.RecordId,
      base.BasePointCash,
      base.BasePointAffiliate,
      base.BasePointNonAffiliate,
      base.PointCalcType,
      base.TaxCalcType,
      base.RoundType,
      base.CardSettingFlag,
      base.DptSettingFlag
    FROM
      RESMaster.dbo.MST_POINT_INFO base 
    WHERE
      base.CompanyId = @companyId
      AND
      base.TargetType = @targetType
      AND
      base.BizCatId = @bizCategoryId
      AND
      base.StoreId = @storeId
      AND
      CONVERT(DATE,@businessDate) >= base.StartDate
      AND
      base.DeleteFlag = 0.0
</entry>
<entry key="get-point-tran-rate-campaign">
  DECLARE
  @companyId varchar(12),
  @bizCategoryId varchar(20),
  @storeId varchar(10),
  @targetType varchar(10),
  @businessDate date,
  @cardClassId varchar(10)

  SET @companyId = ?
  SET @storeId = ?
  SET @businessDate = ?
  SET @cardClassId = ?
  SET @bizCategoryId = '00'
  IF EXISTS(
    SELECT 
      base.RecordId
    FROM
      RESMaster.dbo.MST_CAMPAIGN_INFO base 
    LEFT JOIN
      RESMaster.dbo.MST_CAMPAIGN_CARD pointcard
    ON
      base.RecordId = pointcard.RecordId
    LEFT JOIN
      RESMaster.dbo.MST_CAMPAIGN_STORE store
    ON
      base.RecordId = store.RecordId
    WHERE
    base.CompanyId = @companyId AND
    ((base.TargetStoreType = '1' AND store.StoreId = @storeId) OR
    base.TargetStoreType = '0' OR base.TargetStoreType = '2') 
    AND
    (base.CardSettingFlag= '1' AND pointcard.CardClassId = @cardClassId)
    AND
    CONVERT(DATE,@businessDate) BETWEEN base.StartDate AND base.EndDate)
    BEGIN
      SELECT 
        base.PointType,
        base.BasePrice,
        base.RecordId,
        base.CampaignName,
        base.TargetDaySettingFlag,
        base.TargetDay1,
        base.TargetDay2,
        base.TargetDay3,
        base.TargetDay4,
        base.TargetDay5,
        base.TargetDay6,
        base.TargetDay7,
        base.TargetDay8,
        base.TargetDay9,
        base.DayOfWeekSettingFlag,
        base.DayOfWeekMonFlag,
        base.DayOfWeekTueFlag,
        base.DayOfWeekWedFlag,
        base.DayOfWeekThuFlag,
        base.DayOfWeekFriFlag,
        base.DayOfWeekSatFlag,
        base.DayOfWeekSunFlag,
        pointcard.BasePointCash,
        pointcard.BasePointAffiliate,
        pointcard.BasePointNonAffiliate,
        base.TargetStoreType,
        base.CardSettingFlag,
        base.DptSettingFlag,
        base.ItemSettingFlag
      FROM
        RESMaster.dbo.MST_CAMPAIGN_INFO base 
      LEFT JOIN
        RESMaster.dbo.MST_CAMPAIGN_CARD pointcard
      ON
        base.RecordId = pointcard.RecordId
      LEFT JOIN
        RESMaster.dbo.MST_CAMPAIGN_STORE store
      ON
        base.RecordId = store.RecordId
      WHERE
        base.CompanyId = @companyId
        AND
        ((base.TargetStoreType  = '1' AND store.StoreId = @storeId) OR
        base.TargetStoreType  = '0' OR base.TargetStoreType  = '2')
        AND
        base.CardSettingFlag = '1'
        AND
        pointcard.CardClassId = @cardClassId
        AND
        CONVERT(DATE,@businessDate) BETWEEN base.StartDate AND base.EndDate
        AND
        base.DeleteFlag = 0.0
    END
  ELSE
    SELECT 
      base.PointType,
      base.BasePrice,
      base.RecordId,
      base.CampaignName,
      base.TargetDaySettingFlag,
      base.TargetDay1,
      base.TargetDay2,
      base.TargetDay3,
      base.TargetDay4,
      base.TargetDay5,
      base.TargetDay6,
      base.TargetDay7,
      base.TargetDay8,
      base.TargetDay9,
      base.DayOfWeekSettingFlag,
      base.DayOfWeekMonFlag,
      base.DayOfWeekTueFlag,
      base.DayOfWeekWedFlag,
      base.DayOfWeekThuFlag,
      base.DayOfWeekFriFlag,
      base.DayOfWeekSatFlag,
      base.DayOfWeekSunFlag,
      base.BasePointCash,
      base.BasePointAffiliate,
      base.BasePointNonAffiliate,
      base.TargetStoreType,
      base.CardSettingFlag,
      base.DptSettingFlag,
      base.ItemSettingFlag
    FROM
      RESMaster.dbo.MST_CAMPAIGN_INFO base 
    LEFT JOIN
      RESMaster.dbo.MST_CAMPAIGN_CARD pointcard
    ON
      base.RecordId = pointcard.RecordId
    LEFT JOIN
      RESMaster.dbo.MST_CAMPAIGN_STORE store
    ON
      base.RecordId = store.RecordId
    WHERE
      base.CompanyId = @companyId
      AND
      ((base.TargetStoreType  = '1' AND store.StoreId = @storeId) OR
      base.TargetStoreType  = '0' OR base.TargetStoreType  = '2')
      AND
      base.CardSettingFlag = '0'
      AND
      CONVERT(DATE,@businessDate) BETWEEN base.StartDate AND base.EndDate
      AND
      base.DeleteFlag = 0.0
</entry>
<entry key="get-report-item">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint,
      @dataType varchar(max),
      @itemLevel1 varchar(max),
      @itemLevel2 varchar(max)
      
    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @dataType = ?
    SET @itemLevel1 = ?
    SET @itemLevel2 = ?
    
   SELECT
      a.CompanyId,
      a.RetailStoreId,
      a.BusinessDayDate,
      a.TrainingFlag,
      a.ItemType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      a.WorkstationId,
	  a.ItemCnt,
	  a.ItemAmt,
	   (SELECT 
            SUM(ItemCnt)
          FROM 
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @storeId AND
            ItemType = @dataType AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag AND
            ItemLevel1 = @itemLevel1 AND
		    ItemLevel2 = @itemLevel2
			Group by CompanyId, RetailStoreId, BusinessDayDate, ItemType, TrainingFlag, ItemLevel1, ItemLevel2
			) as CntSum,
	  (SELECT 
            SUM(ItemAmt)
          FROM 
            RESTransaction.dbo.TXU_TOTAL_DAILYREPORT
          WHERE
            CompanyId = @companyId AND
            RetailStoreId = @storeId AND
            ItemType = @dataType AND
            BusinessDayDate = @businessDate AND
            TrainingFlag = @trainingFlag AND
            ItemLevel1 = @itemLevel1 AND
		    ItemLevel2 = @itemLevel2
			Group by CompanyId, RetailStoreId, BusinessDayDate, ItemType, TrainingFlag, ItemLevel1, ItemLevel2
			) as AmtSum
      
	  FROM RESTransaction.dbo.TXU_TOTAL_DAILYREPORT a
	  WHERE
	   a.CompanyId = @companyId AND
       a.RetailStoreId = @storeId AND
	   a.WorkstationId = @terminalId AND
	   a.BusinessDayDate = @businessDate  AND
	   a.ItemType = @dataType AND
	   a.itemLevel1 = @itemLevel1 AND
	   a.itemLevel2 = @itemLevel2 AND
	   a.TrainingFlag = @trainingFlag

</entry>

<entry key="get-voucher-details">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @terminalId varchar(max),
      @businessDate varchar(max),
      @trainingFlag tinyint,
      @tenderId varchar(max)
           
    SET @companyId = ?
    SET @storeId = ?
    SET @terminalId = ?
    SET @businessDate = ?
    SET @trainingFlag = ?
    SET @tenderId = ?
       
   SELECT
      a.CompanyId,
      a.RetailStoreId,
      a.BusinessDayDate,
      a.TrainingFlag,
      a.ItemType,
      a.ItemLevel1,
      a.ItemLevel2,
      a.ItemLevel3,
      a.ItemLevel4,
      a.WorkstationId,
	  a.ItemCnt,
	  a.ItemAmt
	  FROM RESTransaction.dbo.TXU_TOTAL_DAILYREPORT a
	  WHERE
	   a.CompanyId = @companyId AND
       a.RetailStoreId = @storeId AND
	   a.WorkstationId = @terminalId AND
	   a.BusinessDayDate = @businessDate  AND
	   a.ItemType = '2' AND
	   (a.itemLevel1 = '01' OR a.itemLevel1 = '02') AND
	   a.itemLevel3 = @tenderId AND
	   a.TrainingFlag = @trainingFlag AND
	   a.itemLevel2 in ('01', '12', '13', '14', '15')
	   ORDER BY a.ItemLevel2 ASC
</entry>
<entry key="get-postpoint-status">
    DECLARE
      @companyId varchar(max),
      @storeId varchar(max),
      @workstationId varchar(max),
      @businessDate varchar(max),
      @txId varchar(max),
      @trainingFlag tinyint
          
    SET @companyId = ?
    SET @storeId = ?
    SET @workstationId = ?
    SET @businessDate = ?
    SET @txId = ?
    SET @trainingFlag = ?
      
    SELECT
      SalesAmt, 
      BusinessDayDate,
      SequenceNumber,
      OriginalSequenceNumber
    FROM
      RESTransaction.dbo.TXL_POINT_AFTERADD
    WHERE
      CompanyId = @companyId AND
      RetailStoreId = @storeId AND
      WorkStationId = @workstationId AND
      BusinessDayDate = @businessDate AND
      TrainingFlag = @trainingFlag AND
      OriginalSequenceNumber = @txId
  </entry>
  
  <entry key="get-store-info">
    DECLARE
    @companyid varchar(12)
    
    SET @companyid = ?
	 
	 SELECT
       CompanyId
      ,StoreId
      ,StoreName
      ,StoreShortName
      ,StoreType
      ,StoreKubun
      ,StoreZip
      ,StoreAddr
      ,StoreAddr1
      ,StoreAddr2
      ,StoreTel
      ,StoreFax
      ,StoreUrl
      ,SalesSpaceName
      ,EventName
      ,Ads
      ,CdMsg
      ,ElectroFilePath
      ,StampTaxFilePath
      ,StoreCompCode
      ,SubCode1
      ,SubCode2
      ,SubCode3
      ,SubCode4
      ,SubCode5
      ,SubCode6
      ,SubCode7
      ,SubCode8
      ,SubCode9
      ,SubCode10
      ,SubCode11
      ,SubCode12
      ,SubCode13
      ,SubCode14
      ,SubCode15
      ,SubCode16
      ,SubCode17
      ,SubCode18
      ,SubCode19
      ,SubCode20
      ,SubCode21
      ,SubCode22
      ,SubCode23
      ,SubCode24
      ,SubCode25
      ,SubNum1
      ,SubNum2
      ,SubNum3
      ,SubNum4
      ,SubNum5
      ,SubNum6
      ,SubNum7
      ,SubNum8
      ,SubNum9
      ,SubNum10
      ,SubNum11
      ,SubNum12
      ,SubNum13
      ,SubNum14
      ,SubNum15
      ,HostUpdDate
      ,Status
    FROM
      RESMaster.dbo.MST_STOREINFO
    WHERE
      CompanyId = @companyid AND
      DeleteFlag = 0.
	ORDER BY
	  CompanyId
    </entry>

    <!-- *************************  ENTRY KEY FOR DEVICE INFO  ************************* -->
    <entry key="get-posctrl-openclose-status">
      SELECT
        OpenCloseStat,
        SodTime
      FROM
        TXU_POS_CTRL
      WHERE
        CompanyId = ? AND
        StoreId = ? AND
        TerminalNo = ? AND
        SodTime >= ?
    </entry>

    <entry key="get-working-device-status">
      SELECT
        AD.CompanyId,
        AD.StoreId,
        AD.TerminalId,
        DI.TillId,
        DI.DeviceName,
        PC.OpenCloseStat,
        PC.SodTime,
        PC.EodTime
      FROM
        RESMaster.dbo.AUT_DEVICES AD
          INNER JOIN RESTransaction.dbo.TXU_POS_CTRL PC ON
            AD.CompanyId = PC.CompanyId AND
            AD.StoreId = PC.StoreId AND
            AD.TerminalId = PC.TerminalNo
          INNER JOIN RESMaster.dbo.MST_DEVICEINFO DI ON
            AD.CompanyId = DI.CompanyId AND
            AD.StoreId = DI.StoreId AND
            AD.TerminalId = DI.TerminalId AND
            DI.Training = 0
    </entry>

</properties>